wolf3d:
(__TEXT,__text) section
_print_map:
0000000100000cc0	55 	pushq	%rbp
0000000100000cc1	48 89 e5 	movq	%rsp, %rbp
0000000100000cc4	48 83 ec 20 	subq	$0x20, %rsp
0000000100000cc8	48 8d 05 15 db 00 00 	leaq	0xdb15(%rip), %rax ## literal pool for: "_____________________________\n"
0000000100000ccf	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100000cd3	48 89 c7 	movq	%rax, %rdi
0000000100000cd6	b0 00 	movb	$0x0, %al
0000000100000cd8	e8 03 4e 00 00 	callq	_ft_printf
0000000100000cdd	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
0000000100000ce4	89 45 f0 	movl	%eax, -0x10(%rbp)
0000000100000ce7	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100000cea	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100000cee	3b 81 2c 2b 00 00 	cmpl	0x2b2c(%rcx), %eax
0000000100000cf4	0f 8d 32 00 00 00 	jge	0x100000d2c
0000000100000cfa	48 8d 3d 02 db 00 00 	leaq	0xdb02(%rip), %rdi ## literal pool for: "%s\n"
0000000100000d01	48 63 45 f4 	movslq	-0xc(%rbp), %rax
0000000100000d05	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100000d09	48 8b 89 20 2b 00 00 	movq	0x2b20(%rcx), %rcx
0000000100000d10	48 8b 34 c1 	movq	(%rcx,%rax,8), %rsi
0000000100000d14	b0 00 	movb	$0x0, %al
0000000100000d16	e8 c5 4d 00 00 	callq	_ft_printf
0000000100000d1b	8b 55 f4 	movl	-0xc(%rbp), %edx
0000000100000d1e	83 c2 01 	addl	$0x1, %edx
0000000100000d21	89 55 f4 	movl	%edx, -0xc(%rbp)
0000000100000d24	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100000d27	e9 bb ff ff ff 	jmp	0x100000ce7
0000000100000d2c	48 8d 3d d4 da 00 00 	leaq	0xdad4(%rip), %rdi ## literal pool for: "_____________________________\n\n"
0000000100000d33	b0 00 	movb	$0x0, %al
0000000100000d35	e8 a6 4d 00 00 	callq	_ft_printf
0000000100000d3a	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100000d3d	48 83 c4 20 	addq	$0x20, %rsp
0000000100000d41	5d 	popq	%rbp
0000000100000d42	c3 	retq
0000000100000d43	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_main:
0000000100000d50	55 	pushq	%rbp
0000000100000d51	48 89 e5 	movq	%rsp, %rbp
0000000100000d54	48 81 ec 00 52 00 00 	subq	$0x5200, %rsp
0000000100000d5b	48 8b 05 be 52 02 00 	movq	0x252be(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
0000000100000d62	48 8b 00 	movq	(%rax), %rax
0000000100000d65	48 89 45 f8 	movq	%rax, -0x8(%rbp)
0000000100000d69	c7 85 1c ae ff ff 00 00 00 00 	movl	$0x0, -0x51e4(%rbp)
0000000100000d73	89 bd 18 ae ff ff 	movl	%edi, -0x51e8(%rbp)
0000000100000d79	48 89 b5 10 ae ff ff 	movq	%rsi, -0x51f0(%rbp)
0000000100000d80	83 bd 18 ae ff ff 02 	cmpl	$0x2, -0x51e8(%rbp)
0000000100000d87	0f 84 17 00 00 00 	je	0x100000da4
0000000100000d8d	48 8d 3d 93 da 00 00 	leaq	0xda93(%rip), %rdi ## literal pool for: "Miss Args\n"
0000000100000d94	e8 97 4b 00 00 	callq	_ft_ret_error
0000000100000d99	89 85 1c ae ff ff 	movl	%eax, -0x51e4(%rbp)
0000000100000d9f	e9 c1 00 00 00 	jmp	0x100000e65
0000000100000da4	48 8d bd 20 ae ff ff 	leaq	-0x51e0(%rbp), %rdi
0000000100000dab	e8 00 2d 00 00 	callq	_init_env
0000000100000db0	48 8d bd 20 ae ff ff 	leaq	-0x51e0(%rbp), %rdi
0000000100000db7	48 8b 85 10 ae ff ff 	movq	-0x51f0(%rbp), %rax
0000000100000dbe	48 8b 70 08 	movq	0x8(%rax), %rsi
0000000100000dc2	e8 b9 30 00 00 	callq	_init_map
0000000100000dc7	83 f8 00 	cmpl	$0x0, %eax
0000000100000dca	0f 85 0f 00 00 00 	jne	0x100000ddf
0000000100000dd0	c7 85 1c ae ff ff 00 00 00 00 	movl	$0x0, -0x51e4(%rbp)
0000000100000dda	e9 86 00 00 00 	jmp	0x100000e65
0000000100000ddf	48 8d bd 20 ae ff ff 	leaq	-0x51e0(%rbp), %rdi
0000000100000de6	e8 d5 fe ff ff 	callq	_print_map
0000000100000deb	48 8d bd 20 ae ff ff 	leaq	-0x51e0(%rbp), %rdi
0000000100000df2	e8 49 2d 00 00 	callq	_init_var
0000000100000df7	48 8d bd 20 ae ff ff 	leaq	-0x51e0(%rbp), %rdi
0000000100000dfe	e8 5d 35 00 00 	callq	_import_texture
0000000100000e03	83 f8 00 	cmpl	$0x0, %eax
0000000100000e06	0f 85 17 00 00 00 	jne	0x100000e23
0000000100000e0c	48 8d 3d 1f da 00 00 	leaq	0xda1f(%rip), %rdi ## literal pool for: "Erreur de textures\n"
0000000100000e13	e8 18 4b 00 00 	callq	_ft_ret_error
0000000100000e18	89 85 1c ae ff ff 	movl	%eax, -0x51e4(%rbp)
0000000100000e1e	e9 42 00 00 00 	jmp	0x100000e65
0000000100000e23	48 8d 05 66 04 00 00 	leaq	_loop(%rip), %rax
0000000100000e2a	48 8d 8d 20 ae ff ff 	leaq	-0x51e0(%rbp), %rcx
0000000100000e31	48 8b bd 20 ae ff ff 	movq	-0x51e0(%rbp), %rdi
0000000100000e38	48 89 c6 	movq	%rax, %rsi
0000000100000e3b	48 89 ca 	movq	%rcx, %rdx
0000000100000e3e	e8 5d cf 00 00 	callq	_mlx_loop_hook
0000000100000e43	48 8b bd 20 ae ff ff 	movq	-0x51e0(%rbp), %rdi
0000000100000e4a	89 85 0c ae ff ff 	movl	%eax, -0x51f4(%rbp)
0000000100000e50	e8 db cb 00 00 	callq	_mlx_loop
0000000100000e55	c7 85 1c ae ff ff 00 00 00 00 	movl	$0x0, -0x51e4(%rbp)
0000000100000e5f	89 85 08 ae ff ff 	movl	%eax, -0x51f8(%rbp)
0000000100000e65	8b 85 1c ae ff ff 	movl	-0x51e4(%rbp), %eax
0000000100000e6b	48 8b 0d ae 51 02 00 	movq	0x251ae(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
0000000100000e72	48 8b 09 	movq	(%rcx), %rcx
0000000100000e75	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100000e79	48 39 d1 	cmpq	%rdx, %rcx
0000000100000e7c	89 85 04 ae ff ff 	movl	%eax, -0x51fc(%rbp)
0000000100000e82	0f 85 0f 00 00 00 	jne	0x100000e97
0000000100000e88	8b 85 04 ae ff ff 	movl	-0x51fc(%rbp), %eax
0000000100000e8e	48 81 c4 00 52 00 00 	addq	$0x5200, %rsp
0000000100000e95	5d 	popq	%rbp
0000000100000e96	c3 	retq
0000000100000e97	e8 c6 d4 00 00 	callq	0x10000e362 ## symbol stub for: ___stack_chk_fail
0000000100000e9c	90 	nop
0000000100000e9d	90 	nop
0000000100000e9e	90 	nop
0000000100000e9f	90 	nop
_event_key_on:
0000000100000ea0	55 	pushq	%rbp
0000000100000ea1	48 89 e5 	movq	%rsp, %rbp
0000000100000ea4	48 83 ec 20 	subq	$0x20, %rsp
0000000100000ea8	89 7d fc 	movl	%edi, -0x4(%rbp)
0000000100000eab	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100000eaf	83 7d fc 35 	cmpl	$0x35, -0x4(%rbp)
0000000100000eb3	0f 85 14 00 00 00 	jne	0x100000ecd
0000000100000eb9	31 c0 	xorl	%eax, %eax
0000000100000ebb	89 c6 	movl	%eax, %esi
0000000100000ebd	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100000ec1	e8 3a 3b 00 00 	callq	_end_of_program
0000000100000ec6	89 c7 	movl	%eax, %edi
0000000100000ec8	e8 ad d4 00 00 	callq	0x10000e37a ## symbol stub for: _exit
0000000100000ecd	83 7d fc 00 	cmpl	$0x0, -0x4(%rbp)
0000000100000ed1	0f 84 10 00 00 00 	je	0x100000ee7
0000000100000ed7	48 63 45 fc 	movslq	-0x4(%rbp), %rax
0000000100000edb	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100000edf	c7 44 81 7c 01 00 00 00 	movl	$0x1, 0x7c(%rcx,%rax,4)
0000000100000ee7	83 7d fc 06 	cmpl	$0x6, -0x4(%rbp)
0000000100000eeb	0f 85 32 00 00 00 	jne	0x100000f23
0000000100000ef1	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000ef5	8b 48 70 	movl	0x70(%rax), %ecx
0000000100000ef8	83 e1 01 	andl	$0x1, %ecx
0000000100000efb	83 f9 00 	cmpl	$0x0, %ecx
0000000100000efe	0f 84 12 00 00 00 	je	0x100000f16
0000000100000f04	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000f08	8b 48 70 	movl	0x70(%rax), %ecx
0000000100000f0b	83 f1 01 	xorl	$0x1, %ecx
0000000100000f0e	89 48 70 	movl	%ecx, 0x70(%rax)
0000000100000f11	e9 0d 00 00 00 	jmp	0x100000f23
0000000100000f16	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000f1a	8b 48 70 	movl	0x70(%rax), %ecx
0000000100000f1d	83 c9 01 	orl	$0x1, %ecx
0000000100000f20	89 48 70 	movl	%ecx, 0x70(%rax)
0000000100000f23	83 7d fc 07 	cmpl	$0x7, -0x4(%rbp)
0000000100000f27	0f 85 71 00 00 00 	jne	0x100000f9e
0000000100000f2d	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000f31	8b 48 70 	movl	0x70(%rax), %ecx
0000000100000f34	83 e1 02 	andl	$0x2, %ecx
0000000100000f37	83 f9 00 	cmpl	$0x0, %ecx
0000000100000f3a	0f 84 12 00 00 00 	je	0x100000f52
0000000100000f40	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000f44	8b 48 70 	movl	0x70(%rax), %ecx
0000000100000f47	83 f1 02 	xorl	$0x2, %ecx
0000000100000f4a	89 48 70 	movl	%ecx, 0x70(%rax)
0000000100000f4d	e9 0d 00 00 00 	jmp	0x100000f5f
0000000100000f52	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000f56	8b 48 70 	movl	0x70(%rax), %ecx
0000000100000f59	83 c9 02 	orl	$0x2, %ecx
0000000100000f5c	89 48 70 	movl	%ecx, 0x70(%rax)
0000000100000f5f	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000f63	8b 48 70 	movl	0x70(%rax), %ecx
0000000100000f66	83 e1 02 	andl	$0x2, %ecx
0000000100000f69	83 f9 00 	cmpl	$0x0, %ecx
0000000100000f6c	0f 84 12 00 00 00 	je	0x100000f84
0000000100000f72	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000f76	8b 88 30 2b 00 00 	movl	0x2b30(%rax), %ecx
0000000100000f7c	89 4d ec 	movl	%ecx, -0x14(%rbp)
0000000100000f7f	e9 0d 00 00 00 	jmp	0x100000f91
0000000100000f84	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000f88	8b 88 34 2b 00 00 	movl	0x2b34(%rax), %ecx
0000000100000f8e	89 4d ec 	movl	%ecx, -0x14(%rbp)
0000000100000f91	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100000f94	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100000f98	89 81 38 2b 00 00 	movl	%eax, 0x2b38(%rcx)
0000000100000f9e	83 7d fc 12 	cmpl	$0x12, -0x4(%rbp)
0000000100000fa2	0f 85 3b 00 00 00 	jne	0x100000fe3
0000000100000fa8	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000fac	8b 48 70 	movl	0x70(%rax), %ecx
0000000100000faf	81 e1 00 04 00 00 	andl	$0x400, %ecx
0000000100000fb5	83 f9 00 	cmpl	$0x0, %ecx
0000000100000fb8	0f 84 15 00 00 00 	je	0x100000fd3
0000000100000fbe	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000fc2	8b 48 70 	movl	0x70(%rax), %ecx
0000000100000fc5	81 f1 00 04 00 00 	xorl	$0x400, %ecx
0000000100000fcb	89 48 70 	movl	%ecx, 0x70(%rax)
0000000100000fce	e9 10 00 00 00 	jmp	0x100000fe3
0000000100000fd3	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100000fd7	8b 48 70 	movl	0x70(%rax), %ecx
0000000100000fda	81 c9 00 04 00 00 	orl	$0x400, %ecx
0000000100000fe0	89 48 70 	movl	%ecx, 0x70(%rax)
0000000100000fe3	83 7d fc 2a 	cmpl	$0x2a, -0x4(%rbp)
0000000100000fe7	0f 85 09 00 00 00 	jne	0x100000ff6
0000000100000fed	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100000ff1	e8 da 21 00 00 	callq	_free_lst_sprite
0000000100000ff6	83 7d fc 1e 	cmpl	$0x1e, -0x4(%rbp)
0000000100000ffa	0f 85 09 00 00 00 	jne	0x100001009
0000000100001000	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100001004	e8 47 00 00 00 	callq	_cac_sprite
0000000100001009	83 7d fc 10 	cmpl	$0x10, -0x4(%rbp)
000000010000100d	0f 85 2a 00 00 00 	jne	0x10000103d
0000000100001013	48 8d 3d 2c d8 00 00 	leaq	0xd82c(%rip), %rdi ## literal pool for: "Write\n"
000000010000101a	b0 00 	movb	$0x0, %al
000000010000101c	e8 bf 4a 00 00 	callq	_ft_printf
0000000100001021	31 ff 	xorl	%edi, %edi
0000000100001023	48 8d 35 23 d8 00 00 	leaq	0xd823(%rip), %rsi ## literal pool for: "a\n"
000000010000102a	b9 02 00 00 00 	movl	$0x2, %ecx
000000010000102f	89 ca 	movl	%ecx, %edx
0000000100001031	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100001034	e8 af d4 00 00 	callq	0x10000e4e8 ## symbol stub for: _write
0000000100001039	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000103d	b8 01 00 00 00 	movl	$0x1, %eax
0000000100001042	48 83 c4 20 	addq	$0x20, %rsp
0000000100001046	5d 	popq	%rbp
0000000100001047	c3 	retq
0000000100001048	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_cac_sprite:
0000000100001050	55 	pushq	%rbp
0000000100001051	48 89 e5 	movq	%rsp, %rbp
0000000100001054	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100001058	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000105c	48 8b bf c8 2b 00 00 	movq	0x2bc8(%rdi), %rdi
0000000100001063	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100001067	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
000000010000106c	0f 84 2e 00 00 00 	je	0x1000010a0
0000000100001072	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001076	48 8b 00 	movq	(%rax), %rax
0000000100001079	48 89 45 e8 	movq	%rax, -0x18(%rbp)
000000010000107d	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100001081	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001085	48 8b 89 44 2b 00 00 	movq	0x2b44(%rcx), %rcx
000000010000108c	48 89 08 	movq	%rcx, (%rax)
000000010000108f	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001093	48 8b 40 10 	movq	0x10(%rax), %rax
0000000100001097	48 89 45 f0 	movq	%rax, -0x10(%rbp)
000000010000109b	e9 c7 ff ff ff 	jmp	0x100001067
00000001000010a0	5d 	popq	%rbp
00000001000010a1	c3 	retq
00000001000010a2	90 	nop
00000001000010a3	90 	nop
00000001000010a4	90 	nop
00000001000010a5	90 	nop
00000001000010a6	90 	nop
00000001000010a7	90 	nop
00000001000010a8	90 	nop
00000001000010a9	90 	nop
00000001000010aa	90 	nop
00000001000010ab	90 	nop
00000001000010ac	90 	nop
00000001000010ad	90 	nop
00000001000010ae	90 	nop
00000001000010af	90 	nop
_event_key_off:
00000001000010b0	55 	pushq	%rbp
00000001000010b1	48 89 e5 	movq	%rsp, %rbp
00000001000010b4	89 7d fc 	movl	%edi, -0x4(%rbp)
00000001000010b7	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000010bb	83 7d fc 00 	cmpl	$0x0, -0x4(%rbp)
00000001000010bf	0f 84 10 00 00 00 	je	0x1000010d5
00000001000010c5	48 63 45 fc 	movslq	-0x4(%rbp), %rax
00000001000010c9	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000010cd	c7 44 81 7c 00 00 00 00 	movl	$0x0, 0x7c(%rcx,%rax,4)
00000001000010d5	b8 01 00 00 00 	movl	$0x1, %eax
00000001000010da	5d 	popq	%rbp
00000001000010db	c3 	retq
00000001000010dc	90 	nop
00000001000010dd	90 	nop
00000001000010de	90 	nop
00000001000010df	90 	nop
_create_sprite:
00000001000010e0	55 	pushq	%rbp
00000001000010e1	48 89 e5 	movq	%rsp, %rbp
00000001000010e4	48 81 ec 90 00 00 00 	subq	$0x90, %rsp
00000001000010eb	b8 48 00 00 00 	movl	$0x48, %eax
00000001000010f0	89 c1 	movl	%eax, %ecx
00000001000010f2	48 8d 55 a8 	leaq	-0x58(%rbp), %rdx
00000001000010f6	f2 0f 10 05 82 df 00 00 	movsd	0xdf82(%rip), %xmm0
00000001000010fe	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100001102	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100001106	b8 48 00 00 00 	movl	$0x48, %eax
000000010000110b	89 c6 	movl	%eax, %esi
000000010000110d	48 8d 7d a8 	leaq	-0x58(%rbp), %rdi
0000000100001111	f2 0f 11 45 88 	movsd	%xmm0, -0x78(%rbp)
0000000100001116	48 89 55 80 	movq	%rdx, -0x80(%rbp)
000000010000111a	48 89 8d 78 ff ff ff 	movq	%rcx, -0x88(%rbp)
0000000100001121	e8 8a 39 00 00 	callq	_ft_bzero
0000000100001126	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000112a	8b 41 08 	movl	0x8(%rcx), %eax
000000010000112d	89 45 d4 	movl	%eax, -0x2c(%rbp)
0000000100001130	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100001134	8b 41 0c 	movl	0xc(%rcx), %eax
0000000100001137	89 45 d8 	movl	%eax, -0x28(%rbp)
000000010000113a	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000113e	8b 71 08 	movl	0x8(%rcx), %esi
0000000100001141	8b 79 0c 	movl	0xc(%rcx), %edi
0000000100001144	e8 37 29 00 00 	callq	_ft_min
0000000100001149	89 45 dc 	movl	%eax, -0x24(%rbp)
000000010000114c	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001150	48 8b 89 44 2b 00 00 	movq	0x2b44(%rcx), %rcx
0000000100001157	48 89 4d a8 	movq	%rcx, -0x58(%rbp)
000000010000115b	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000115f	f3 0f 7e 81 4c 2b 00 00 	movq	0x2b4c(%rcx), %xmm0
0000000100001167	e8 14 36 00 00 	callq	_fvector2d_normalized
000000010000116c	0f 13 45 98 	movlps	%xmm0, -0x68(%rbp)
0000000100001170	f3 0f 10 45 98 	movss	-0x68(%rbp), %xmm0
0000000100001175	f3 0f 5a c0 	cvtss2sd	%xmm0, %xmm0
0000000100001179	f2 0f 10 0d ff de 00 00 	movsd	0xdeff(%rip), %xmm1
0000000100001181	f2 0f 59 c1 	mulsd	%xmm1, %xmm0
0000000100001185	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
0000000100001189	f3 0f 11 45 c0 	movss	%xmm0, -0x40(%rbp)
000000010000118e	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001192	f3 0f 7e 81 4c 2b 00 00 	movq	0x2b4c(%rcx), %xmm0
000000010000119a	e8 e1 35 00 00 	callq	_fvector2d_normalized
000000010000119f	0f 13 45 90 	movlps	%xmm0, -0x70(%rbp)
00000001000011a3	f3 0f 5a 45 94 	cvtss2sd	-0x6c(%rbp), %xmm0
00000001000011a8	f2 0f 10 4d 88 	movsd	-0x78(%rbp), %xmm1
00000001000011ad	f2 0f 59 c1 	mulsd	%xmm1, %xmm0
00000001000011b1	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
00000001000011b5	f3 0f 11 45 c4 	movss	%xmm0, -0x3c(%rbp)
00000001000011ba	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000011be	48 89 4d e8 	movq	%rcx, -0x18(%rbp)
00000001000011c2	48 8b 4d 80 	movq	-0x80(%rbp), %rcx
00000001000011c6	48 89 cf 	movq	%rcx, %rdi
00000001000011c9	48 8b b5 78 ff ff ff 	movq	-0x88(%rbp), %rsi
00000001000011d0	e8 4b 41 00 00 	callq	_ft_lstnew
00000001000011d5	48 89 45 a0 	movq	%rax, -0x60(%rbp)
00000001000011d9	48 83 f8 00 	cmpq	$0x0, %rax
00000001000011dd	0f 85 14 00 00 00 	jne	0x1000011f7
00000001000011e3	31 c0 	xorl	%eax, %eax
00000001000011e5	89 c6 	movl	%eax, %esi
00000001000011e7	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000011eb	e8 10 38 00 00 	callq	_end_of_program
00000001000011f0	89 c7 	movl	%eax, %edi
00000001000011f2	e8 83 d1 00 00 	callq	0x10000e37a ## symbol stub for: _exit
00000001000011f7	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000011fb	48 05 c8 2b 00 00 	addq	$0x2bc8, %rax
0000000100001201	48 8b 75 a0 	movq	-0x60(%rbp), %rsi
0000000100001205	48 89 c7 	movq	%rax, %rdi
0000000100001208	e8 f3 47 00 00 	callq	_ft_lstinsert
000000010000120d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001211	8b 88 b0 04 00 00 	movl	0x4b0(%rax), %ecx
0000000100001217	83 c1 01 	addl	$0x1, %ecx
000000010000121a	89 88 b0 04 00 00 	movl	%ecx, 0x4b0(%rax)
0000000100001220	48 81 c4 90 00 00 00 	addq	$0x90, %rsp
0000000100001227	5d 	popq	%rbp
0000000100001228	c3 	retq
0000000100001229	0f 1f 80 00 00 00 00 	nopl	(%rax)
_event_fire:
0000000100001230	55 	pushq	%rbp
0000000100001231	48 89 e5 	movq	%rsp, %rbp
0000000100001234	48 83 ec 20 	subq	$0x20, %rsp
0000000100001238	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000123c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100001240	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001244	81 be b0 04 00 00 88 13 00 00 	cmpl	$0x1388, 0x4b0(%rsi)
000000010000124e	0f 8d 1a 00 00 00 	jge	0x10000126e
0000000100001254	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001258	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000125c	48 05 d8 2b 00 00 	addq	$0x2bd8, %rax
0000000100001262	48 83 c0 10 	addq	$0x10, %rax
0000000100001266	48 89 c6 	movq	%rax, %rsi
0000000100001269	e8 72 fe ff ff 	callq	_create_sprite
000000010000126e	48 8d 3d db d5 00 00 	leaq	0xd5db(%rip), %rdi ## literal pool for: "Sprite : %i\n"
0000000100001275	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001279	8b b0 b0 04 00 00 	movl	0x4b0(%rax), %esi
000000010000127f	b0 00 	movb	$0x0, %al
0000000100001281	e8 5a 48 00 00 	callq	_ft_printf
0000000100001286	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100001289	48 83 c4 20 	addq	$0x20, %rsp
000000010000128d	5d 	popq	%rbp
000000010000128e	c3 	retq
000000010000128f	90 	nop
_loop:
0000000100001290	55 	pushq	%rbp
0000000100001291	48 89 e5 	movq	%rsp, %rbp
0000000100001294	48 83 ec 10 	subq	$0x10, %rsp
0000000100001298	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000129c	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000012a0	8b 47 70 	movl	0x70(%rdi), %eax
00000001000012a3	83 e0 02 	andl	$0x2, %eax
00000001000012a6	83 f8 00 	cmpl	$0x0, %eax
00000001000012a9	0f 85 26 00 00 00 	jne	0x1000012d5
00000001000012af	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000012b3	48 8b 40 10 	movq	0x10(%rax), %rax
00000001000012b7	48 8b 78 08 	movq	0x8(%rax), %rdi
00000001000012bb	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000012bf	8b 48 78 	movl	0x78(%rax), %ecx
00000001000012c2	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000012c6	0f af 48 74 	imull	0x74(%rax), %ecx
00000001000012ca	c1 e1 02 	shll	$0x2, %ecx
00000001000012cd	48 63 f1 	movslq	%ecx, %rsi
00000001000012d0	e8 db 37 00 00 	callq	_ft_bzero
00000001000012d5	b8 e8 12 00 00 	movl	$0x12e8, %eax
00000001000012da	89 c6 	movl	%eax, %esi
00000001000012dc	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000012e0	48 81 c1 9c 17 00 00 	addq	$0x179c, %rcx
00000001000012e7	48 89 cf 	movq	%rcx, %rdi
00000001000012ea	e8 c1 37 00 00 	callq	_ft_bzero
00000001000012ef	b8 d0 25 00 00 	movl	$0x25d0, %eax
00000001000012f4	89 c6 	movl	%eax, %esi
00000001000012f6	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000012fa	48 81 c1 f8 2b 00 00 	addq	$0x2bf8, %rcx
0000000100001301	48 89 cf 	movq	%rcx, %rdi
0000000100001304	e8 a7 37 00 00 	callq	_ft_bzero
0000000100001309	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000130d	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001311	48 81 c1 e0 2a 00 00 	addq	$0x2ae0, %rcx
0000000100001318	48 89 ce 	movq	%rcx, %rsi
000000010000131b	e8 c0 07 00 00 	callq	_update_fps
0000000100001320	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001324	e8 f7 00 00 00 	callq	_update_key_event
0000000100001329	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000132d	e8 ce 03 00 00 	callq	_update_sprite_position
0000000100001332	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001336	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000133a	48 81 c1 44 2b 00 00 	addq	$0x2b44, %rcx
0000000100001341	48 89 ce 	movq	%rcx, %rsi
0000000100001344	e8 67 1c 00 00 	callq	_raycast_wolf
0000000100001349	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000134d	e8 5e 00 00 00 	callq	_wolf_aff_sprite
0000000100001352	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001356	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000135a	48 81 c1 44 2b 00 00 	addq	$0x2b44, %rcx
0000000100001361	48 89 ce 	movq	%rcx, %rsi
0000000100001364	e8 f7 08 00 00 	callq	_raycast_aff_view_2d
0000000100001369	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000136d	e8 3e 20 00 00 	callq	_radar
0000000100001372	31 c0 	xorl	%eax, %eax
0000000100001374	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001378	48 8b 39 	movq	(%rcx), %rdi
000000010000137b	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000137f	48 8b 71 08 	movq	0x8(%rcx), %rsi
0000000100001383	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001387	48 8b 49 10 	movq	0x10(%rcx), %rcx
000000010000138b	48 8b 11 	movq	(%rcx), %rdx
000000010000138e	89 c1 	movl	%eax, %ecx
0000000100001390	41 89 c0 	movl	%eax, %r8d
0000000100001393	e8 a8 cc 00 00 	callq	_mlx_put_image_to_window
0000000100001398	b9 01 00 00 00 	movl	$0x1, %ecx
000000010000139d	89 45 f4 	movl	%eax, -0xc(%rbp)
00000001000013a0	89 c8 	movl	%ecx, %eax
00000001000013a2	48 83 c4 10 	addq	$0x10, %rsp
00000001000013a6	5d 	popq	%rbp
00000001000013a7	c3 	retq
00000001000013a8	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_wolf_aff_sprite:
00000001000013b0	55 	pushq	%rbp
00000001000013b1	48 89 e5 	movq	%rsp, %rbp
00000001000013b4	48 83 ec 10 	subq	$0x10, %rsp
00000001000013b8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000013bc	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000013c0	48 83 bf d0 2b 00 00 00 	cmpq	$0x0, 0x2bd0(%rdi)
00000001000013c8	0f 84 4b 00 00 00 	je	0x100001419
00000001000013ce	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000013d2	8b 48 70 	movl	0x70(%rax), %ecx
00000001000013d5	83 e1 02 	andl	$0x2, %ecx
00000001000013d8	83 f9 00 	cmpl	$0x0, %ecx
00000001000013db	0f 84 2f 00 00 00 	je	0x100001410
00000001000013e1	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000013e5	83 b8 b0 04 00 00 64 	cmpl	$0x64, 0x4b0(%rax)
00000001000013ec	0f 8d 1e 00 00 00 	jge	0x100001410
00000001000013f2	48 8d 15 67 0e 00 00 	leaq	_sprite_wolf(%rip), %rdx
00000001000013f9	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000013fd	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001401	48 8b b1 d0 2b 00 00 	movq	0x2bd0(%rcx), %rsi
0000000100001408	48 89 c7 	movq	%rax, %rdi
000000010000140b	e8 90 96 00 00 	callq	_btree_env_apply_infix
0000000100001410	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001414	e8 37 1e 00 00 	callq	_free_btree_sprite
0000000100001419	48 83 c4 10 	addq	$0x10, %rsp
000000010000141d	5d 	popq	%rbp
000000010000141e	c3 	retq
000000010000141f	90 	nop
_update_key_event:
0000000100001420	55 	pushq	%rbp
0000000100001421	48 89 e5 	movq	%rsp, %rbp
0000000100001424	48 83 ec 10 	subq	$0x10, %rsp
0000000100001428	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000142c	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001430	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001434	48 05 44 2b 00 00 	addq	$0x2b44, %rax
000000010000143a	48 89 c6 	movq	%rax, %rsi
000000010000143d	e8 2e 00 00 00 	callq	_update_key_player
0000000100001442	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001446	83 b8 40 01 00 00 00 	cmpl	$0x0, 0x140(%rax)
000000010000144d	0f 84 16 00 00 00 	je	0x100001469
0000000100001453	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001457	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000145b	48 05 44 2b 00 00 	addq	$0x2b44, %rax
0000000100001461	48 89 c6 	movq	%rax, %rsi
0000000100001464	e8 c7 fd ff ff 	callq	_event_fire
0000000100001469	48 83 c4 10 	addq	$0x10, %rsp
000000010000146d	5d 	popq	%rbp
000000010000146e	c3 	retq
000000010000146f	90 	nop
_update_key_player:
0000000100001470	55 	pushq	%rbp
0000000100001471	48 89 e5 	movq	%rsp, %rbp
0000000100001474	48 83 ec 10 	subq	$0x10, %rsp
0000000100001478	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000147c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100001480	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001484	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001488	e8 d3 00 00 00 	callq	_update_key_rotate
000000010000148d	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001491	83 be 74 02 00 00 00 	cmpl	$0x0, 0x274(%rsi)
0000000100001498	0f 84 0e 00 00 00 	je	0x1000014ac
000000010000149e	be 01 00 00 00 	movl	$0x1, %esi
00000001000014a3	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000014a7	e8 24 24 00 00 	callq	_move_player
00000001000014ac	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000014b0	83 b8 70 02 00 00 00 	cmpl	$0x0, 0x270(%rax)
00000001000014b7	0f 84 0e 00 00 00 	je	0x1000014cb
00000001000014bd	be ff ff ff ff 	movl	$0xffffffff, %esi
00000001000014c2	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000014c6	e8 05 24 00 00 	callq	_move_player
00000001000014cb	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000014cf	83 b8 b4 01 00 00 00 	cmpl	$0x0, 0x1b4(%rax)
00000001000014d6	0f 84 34 00 00 00 	je	0x100001510
00000001000014dc	f2 0f 10 05 a4 db 00 00 	movsd	0xdba4(%rip), %xmm0
00000001000014e4	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000014e8	f3 0f 5a 48 08 	cvtss2sd	0x8(%rax), %xmm1
00000001000014ed	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
00000001000014f1	f2 0f 5a c9 	cvtsd2ss	%xmm1, %xmm1
00000001000014f5	f3 0f 11 48 08 	movss	%xmm1, 0x8(%rax)
00000001000014fa	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000014fe	f3 0f 5a 48 0c 	cvtss2sd	0xc(%rax), %xmm1
0000000100001503	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
0000000100001507	f2 0f 5a c1 	cvtsd2ss	%xmm1, %xmm0
000000010000150b	f3 0f 11 40 0c 	movss	%xmm0, 0xc(%rax)
0000000100001510	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001514	83 b8 90 01 00 00 00 	cmpl	$0x0, 0x190(%rax)
000000010000151b	0f 84 34 00 00 00 	je	0x100001555
0000000100001521	f2 0f 10 05 67 db 00 00 	movsd	0xdb67(%rip), %xmm0
0000000100001529	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000152d	f3 0f 5a 48 08 	cvtss2sd	0x8(%rax), %xmm1
0000000100001532	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
0000000100001536	f2 0f 5a c9 	cvtsd2ss	%xmm1, %xmm1
000000010000153a	f3 0f 11 48 08 	movss	%xmm1, 0x8(%rax)
000000010000153f	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001543	f3 0f 5a 48 0c 	cvtss2sd	0xc(%rax), %xmm1
0000000100001548	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
000000010000154c	f2 0f 5a c1 	cvtsd2ss	%xmm1, %xmm0
0000000100001550	f3 0f 11 40 0c 	movss	%xmm0, 0xc(%rax)
0000000100001555	48 83 c4 10 	addq	$0x10, %rsp
0000000100001559	5d 	popq	%rbp
000000010000155a	c3 	retq
000000010000155b	0f 1f 44 00 00 	nopl	(%rax,%rax)
_update_key_rotate:
0000000100001560	55 	pushq	%rbp
0000000100001561	48 89 e5 	movq	%rsp, %rbp
0000000100001564	48 83 ec 10 	subq	$0x10, %rsp
0000000100001568	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000156c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100001570	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001574	83 be 68 02 00 00 00 	cmpl	$0x0, 0x268(%rsi)
000000010000157b	0f 85 11 00 00 00 	jne	0x100001592
0000000100001581	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001585	83 b8 80 00 00 00 00 	cmpl	$0x0, 0x80(%rax)
000000010000158c	0f 84 ac 00 00 00 	je	0x10000163e
0000000100001592	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001596	83 b8 68 02 00 00 00 	cmpl	$0x0, 0x268(%rax)
000000010000159d	0f 84 29 00 00 00 	je	0x1000015cc
00000001000015a3	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000015a7	f3 0f 10 80 64 2b 00 00 	movss	0x2b64(%rax), %xmm0
00000001000015af	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000015b3	f3 0f 10 88 5c 2b 00 00 	movss	0x2b5c(%rax), %xmm1
00000001000015bb	f3 0f 5c c8 	subss	%xmm0, %xmm1
00000001000015bf	f3 0f 11 88 5c 2b 00 00 	movss	%xmm1, 0x2b5c(%rax)
00000001000015c7	e9 24 00 00 00 	jmp	0x1000015f0
00000001000015cc	f2 0f 10 05 c4 da 00 00 	movsd	0xdac4(%rip), %xmm0
00000001000015d4	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000015d8	f3 0f 5a 88 5c 2b 00 00 	cvtss2sd	0x2b5c(%rax), %xmm1
00000001000015e0	f2 0f 5c c8 	subsd	%xmm0, %xmm1
00000001000015e4	f2 0f 5a c1 	cvtsd2ss	%xmm1, %xmm0
00000001000015e8	f3 0f 11 80 5c 2b 00 00 	movss	%xmm0, 0x2b5c(%rax)
00000001000015f0	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000015f4	48 83 c0 08 	addq	$0x8, %rax
00000001000015f8	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000015fc	f3 0f 10 41 20 	movss	0x20(%rcx), %xmm0
0000000100001601	66 0f 7e c2 	movd	%xmm0, %edx
0000000100001605	81 f2 00 00 00 80 	xorl	$0x80000000, %edx
000000010000160b	66 0f 6e c2 	movd	%edx, %xmm0
000000010000160f	48 89 c7 	movq	%rax, %rdi
0000000100001612	e8 f9 32 00 00 	callq	_fvector_rotation
0000000100001617	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000161b	48 83 c0 10 	addq	$0x10, %rax
000000010000161f	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100001623	f3 0f 10 41 20 	movss	0x20(%rcx), %xmm0
0000000100001628	66 0f 7e c2 	movd	%xmm0, %edx
000000010000162c	81 f2 00 00 00 80 	xorl	$0x80000000, %edx
0000000100001632	66 0f 6e c2 	movd	%edx, %xmm0
0000000100001636	48 89 c7 	movq	%rax, %rdi
0000000100001639	e8 d2 32 00 00 	callq	_fvector_rotation
000000010000163e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001642	83 b8 6c 02 00 00 00 	cmpl	$0x0, 0x26c(%rax)
0000000100001649	0f 85 11 00 00 00 	jne	0x100001660
000000010000164f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001653	83 b8 84 00 00 00 00 	cmpl	$0x0, 0x84(%rax)
000000010000165a	0f 84 8c 00 00 00 	je	0x1000016ec
0000000100001660	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001664	83 b8 6c 02 00 00 00 	cmpl	$0x0, 0x26c(%rax)
000000010000166b	0f 84 25 00 00 00 	je	0x100001696
0000000100001671	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001675	f3 0f 10 80 64 2b 00 00 	movss	0x2b64(%rax), %xmm0
000000010000167d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001681	f3 0f 58 80 5c 2b 00 00 	addss	0x2b5c(%rax), %xmm0
0000000100001689	f3 0f 11 80 5c 2b 00 00 	movss	%xmm0, 0x2b5c(%rax)
0000000100001691	e9 24 00 00 00 	jmp	0x1000016ba
0000000100001696	f2 0f 10 05 fa d9 00 00 	movsd	0xd9fa(%rip), %xmm0
000000010000169e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000016a2	f3 0f 5a 88 5c 2b 00 00 	cvtss2sd	0x2b5c(%rax), %xmm1
00000001000016aa	f2 0f 58 c8 	addsd	%xmm0, %xmm1
00000001000016ae	f2 0f 5a c1 	cvtsd2ss	%xmm1, %xmm0
00000001000016b2	f3 0f 11 80 5c 2b 00 00 	movss	%xmm0, 0x2b5c(%rax)
00000001000016ba	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000016be	48 83 c0 08 	addq	$0x8, %rax
00000001000016c2	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000016c6	f3 0f 10 41 20 	movss	0x20(%rcx), %xmm0
00000001000016cb	48 89 c7 	movq	%rax, %rdi
00000001000016ce	e8 3d 32 00 00 	callq	_fvector_rotation
00000001000016d3	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000016d7	48 83 c0 10 	addq	$0x10, %rax
00000001000016db	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000016df	f3 0f 10 41 20 	movss	0x20(%rcx), %xmm0
00000001000016e4	48 89 c7 	movq	%rax, %rdi
00000001000016e7	e8 24 32 00 00 	callq	_fvector_rotation
00000001000016ec	48 83 c4 10 	addq	$0x10, %rsp
00000001000016f0	5d 	popq	%rbp
00000001000016f1	c3 	retq
00000001000016f2	90 	nop
00000001000016f3	90 	nop
00000001000016f4	90 	nop
00000001000016f5	90 	nop
00000001000016f6	90 	nop
00000001000016f7	90 	nop
00000001000016f8	90 	nop
00000001000016f9	90 	nop
00000001000016fa	90 	nop
00000001000016fb	90 	nop
00000001000016fc	90 	nop
00000001000016fd	90 	nop
00000001000016fe	90 	nop
00000001000016ff	90 	nop
_update_sprite_position:
0000000100001700	55 	pushq	%rbp
0000000100001701	48 89 e5 	movq	%rsp, %rbp
0000000100001704	48 83 ec 20 	subq	$0x20, %rsp
0000000100001708	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000170c	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001710	48 8b bf c8 2b 00 00 	movq	0x2bc8(%rdi), %rdi
0000000100001717	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000171b	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100001720	0f 84 7a 00 00 00 	je	0x1000017a0
0000000100001726	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000172a	48 8b 00 	movq	(%rax), %rax
000000010000172d	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100001731	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001735	8b 48 70 	movl	0x70(%rax), %ecx
0000000100001738	81 e1 00 04 00 00 	andl	$0x400, %ecx
000000010000173e	83 f9 00 	cmpl	$0x0, %ecx
0000000100001741	0f 84 0d 00 00 00 	je	0x100001754
0000000100001747	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000174b	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
000000010000174f	e8 5c 00 00 00 	callq	_update_sprite_acceleration
0000000100001754	f3 0f 10 05 44 d9 00 00 	movss	0xd944(%rip), %xmm0
000000010000175c	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100001760	48 83 c0 18 	addq	$0x18, %rax
0000000100001764	48 89 c7 	movq	%rax, %rdi
0000000100001767	e8 04 31 00 00 	callq	_fvector2d_limit
000000010000176c	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001770	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100001774	e8 77 01 00 00 	callq	_update_sprite_new_position
0000000100001779	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000177d	48 05 44 2b 00 00 	addq	$0x2b44, %rax
0000000100001783	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100001787	48 89 c7 	movq	%rax, %rdi
000000010000178a	e8 c1 02 00 00 	callq	_set_sprite_relative_angle
000000010000178f	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001793	48 8b 40 10 	movq	0x10(%rax), %rax
0000000100001797	48 89 45 f0 	movq	%rax, -0x10(%rbp)
000000010000179b	e9 7b ff ff ff 	jmp	0x10000171b
00000001000017a0	48 83 c4 20 	addq	$0x20, %rsp
00000001000017a4	5d 	popq	%rbp
00000001000017a5	c3 	retq
00000001000017a6	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_update_sprite_acceleration:
00000001000017b0	55 	pushq	%rbp
00000001000017b1	48 89 e5 	movq	%rsp, %rbp
00000001000017b4	48 83 ec 30 	subq	$0x30, %rsp
00000001000017b8	0f 57 c0 	xorps	%xmm0, %xmm0
00000001000017bb	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000017bf	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000017c3	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000017c7	f3 0f 10 8e 44 2b 00 00 	movss	0x2b44(%rsi), %xmm1
00000001000017cf	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000017d3	f3 0f 5c 0e 	subss	(%rsi), %xmm1
00000001000017d7	f3 0f 11 4d e8 	movss	%xmm1, -0x18(%rbp)
00000001000017dc	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000017e0	f3 0f 10 8e 48 2b 00 00 	movss	0x2b48(%rsi), %xmm1
00000001000017e8	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000017ec	f3 0f 5c 4e 04 	subss	0x4(%rsi), %xmm1
00000001000017f1	f3 0f 11 4d ec 	movss	%xmm1, -0x14(%rbp)
00000001000017f6	f3 0f 10 4d e8 	movss	-0x18(%rbp), %xmm1
00000001000017fb	0f 2e c8 	ucomiss	%xmm0, %xmm1
00000001000017fe	0f 85 0b 00 00 00 	jne	0x10000180f
0000000100001804	0f 8a 05 00 00 00 	jp	0x10000180f
000000010000180a	e9 c0 00 00 00 	jmp	0x1000018cf
000000010000180f	0f 57 c0 	xorps	%xmm0, %xmm0
0000000100001812	f3 0f 10 4d ec 	movss	-0x14(%rbp), %xmm1
0000000100001817	0f 2e c8 	ucomiss	%xmm0, %xmm1
000000010000181a	0f 85 0b 00 00 00 	jne	0x10000182b
0000000100001820	0f 8a 05 00 00 00 	jp	0x10000182b
0000000100001826	e9 a4 00 00 00 	jmp	0x1000018cf
000000010000182b	f2 0f 10 05 7d d8 00 00 	movsd	0xd87d(%rip), %xmm0
0000000100001833	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100001837	66 48 0f 6e c8 	movd	%rax, %xmm1
000000010000183c	f2 0f 11 45 d0 	movsd	%xmm0, -0x30(%rbp)
0000000100001841	0f 28 c1 	movaps	%xmm1, %xmm0
0000000100001844	e8 37 2f 00 00 	callq	_fvector2d_normalized
0000000100001849	0f 13 45 e0 	movlps	%xmm0, -0x20(%rbp)
000000010000184d	f3 0f 10 45 e0 	movss	-0x20(%rbp), %xmm0
0000000100001852	f3 0f 5a c0 	cvtss2sd	%xmm0, %xmm0
0000000100001856	f2 0f 10 0d 52 d8 00 00 	movsd	0xd852(%rip), %xmm1
000000010000185e	f2 0f 59 c1 	mulsd	%xmm1, %xmm0
0000000100001862	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
0000000100001866	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000186a	f3 0f 11 40 10 	movss	%xmm0, 0x10(%rax)
000000010000186f	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100001873	66 48 0f 6e c0 	movd	%rax, %xmm0
0000000100001878	e8 03 2f 00 00 	callq	_fvector2d_normalized
000000010000187d	0f 13 45 d8 	movlps	%xmm0, -0x28(%rbp)
0000000100001881	f3 0f 5a 45 dc 	cvtss2sd	-0x24(%rbp), %xmm0
0000000100001886	f2 0f 10 4d d0 	movsd	-0x30(%rbp), %xmm1
000000010000188b	f2 0f 59 c1 	mulsd	%xmm1, %xmm0
000000010000188f	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
0000000100001893	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001897	f3 0f 11 40 14 	movss	%xmm0, 0x14(%rax)
000000010000189c	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000018a0	f3 0f 10 40 10 	movss	0x10(%rax), %xmm0
00000001000018a5	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000018a9	f3 0f 58 40 18 	addss	0x18(%rax), %xmm0
00000001000018ae	f3 0f 11 40 18 	movss	%xmm0, 0x18(%rax)
00000001000018b3	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000018b7	f3 0f 10 40 14 	movss	0x14(%rax), %xmm0
00000001000018bc	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000018c0	f3 0f 58 40 1c 	addss	0x1c(%rax), %xmm0
00000001000018c5	f3 0f 11 40 1c 	movss	%xmm0, 0x1c(%rax)
00000001000018ca	e9 1a 00 00 00 	jmp	0x1000018e9
00000001000018cf	f3 0f 10 05 cd d7 00 00 	movss	0xd7cd(%rip), %xmm0
00000001000018d7	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000018db	f3 0f 11 40 18 	movss	%xmm0, 0x18(%rax)
00000001000018e0	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000018e4	f3 0f 11 40 1c 	movss	%xmm0, 0x1c(%rax)
00000001000018e9	48 83 c4 30 	addq	$0x30, %rsp
00000001000018ed	5d 	popq	%rbp
00000001000018ee	c3 	retq
00000001000018ef	90 	nop
_update_sprite_new_position:
00000001000018f0	55 	pushq	%rbp
00000001000018f1	48 89 e5 	movq	%rsp, %rbp
00000001000018f4	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000018f8	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000018fc	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001900	f3 0f 10 06 	movss	(%rsi), %xmm0
0000000100001904	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001908	f3 0f 10 4e 18 	movss	0x18(%rsi), %xmm1
000000010000190d	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001911	f3 0f 59 8e 18 2b 00 00 	mulss	0x2b18(%rsi), %xmm1
0000000100001919	f3 0f 58 c1 	addss	%xmm1, %xmm0
000000010000191d	f3 0f 11 45 e8 	movss	%xmm0, -0x18(%rbp)
0000000100001922	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001926	f3 0f 10 46 04 	movss	0x4(%rsi), %xmm0
000000010000192b	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000192f	f3 0f 10 4e 1c 	movss	0x1c(%rsi), %xmm1
0000000100001934	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001938	f3 0f 59 8e 18 2b 00 00 	mulss	0x2b18(%rsi), %xmm1
0000000100001940	f3 0f 58 c1 	addss	%xmm1, %xmm0
0000000100001944	f3 0f 11 45 ec 	movss	%xmm0, -0x14(%rbp)
0000000100001949	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000194d	f3 0f 2c 06 	cvttss2si	(%rsi), %eax
0000000100001951	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001955	3b 86 28 2b 00 00 	cmpl	0x2b28(%rsi), %eax
000000010000195b	0f 8d e2 00 00 00 	jge	0x100001a43
0000000100001961	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001965	f3 0f 2c 48 04 	cvttss2si	0x4(%rax), %ecx
000000010000196a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000196e	3b 88 2c 2b 00 00 	cmpl	0x2b2c(%rax), %ecx
0000000100001974	0f 8d c9 00 00 00 	jge	0x100001a43
000000010000197a	f3 0f 2c 45 e8 	cvttss2si	-0x18(%rbp), %eax
000000010000197f	48 63 c8 	movslq	%eax, %rcx
0000000100001982	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100001986	f3 0f 2c 42 04 	cvttss2si	0x4(%rdx), %eax
000000010000198b	48 63 d0 	movslq	%eax, %rdx
000000010000198e	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001992	48 8b b6 20 2b 00 00 	movq	0x2b20(%rsi), %rsi
0000000100001999	48 8b 14 d6 	movq	(%rsi,%rdx,8), %rdx
000000010000199d	0f be 04 0a 	movsbl	(%rdx,%rcx), %eax
00000001000019a1	83 f8 30 	cmpl	$0x30, %eax
00000001000019a4	0f 85 12 00 00 00 	jne	0x1000019bc
00000001000019aa	f3 0f 10 45 e8 	movss	-0x18(%rbp), %xmm0
00000001000019af	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000019b3	f3 0f 11 00 	movss	%xmm0, (%rax)
00000001000019b7	e9 20 00 00 00 	jmp	0x1000019dc
00000001000019bc	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000019c0	f3 0f 10 40 18 	movss	0x18(%rax), %xmm0
00000001000019c5	66 0f 7e c1 	movd	%xmm0, %ecx
00000001000019c9	81 f1 00 00 00 80 	xorl	$0x80000000, %ecx
00000001000019cf	66 0f 6e c1 	movd	%ecx, %xmm0
00000001000019d3	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000019d7	f3 0f 11 40 18 	movss	%xmm0, 0x18(%rax)
00000001000019dc	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000019e0	f3 0f 2c 08 	cvttss2si	(%rax), %ecx
00000001000019e4	48 63 c1 	movslq	%ecx, %rax
00000001000019e7	f3 0f 2c 4d ec 	cvttss2si	-0x14(%rbp), %ecx
00000001000019ec	48 63 d1 	movslq	%ecx, %rdx
00000001000019ef	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000019f3	48 8b b6 20 2b 00 00 	movq	0x2b20(%rsi), %rsi
00000001000019fa	48 8b 14 d6 	movq	(%rsi,%rdx,8), %rdx
00000001000019fe	0f be 0c 02 	movsbl	(%rdx,%rax), %ecx
0000000100001a02	83 f9 30 	cmpl	$0x30, %ecx
0000000100001a05	0f 85 13 00 00 00 	jne	0x100001a1e
0000000100001a0b	f3 0f 10 45 ec 	movss	-0x14(%rbp), %xmm0
0000000100001a10	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001a14	f3 0f 11 40 04 	movss	%xmm0, 0x4(%rax)
0000000100001a19	e9 20 00 00 00 	jmp	0x100001a3e
0000000100001a1e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001a22	f3 0f 10 40 1c 	movss	0x1c(%rax), %xmm0
0000000100001a27	66 0f 7e c1 	movd	%xmm0, %ecx
0000000100001a2b	81 f1 00 00 00 80 	xorl	$0x80000000, %ecx
0000000100001a31	66 0f 6e c1 	movd	%ecx, %xmm0
0000000100001a35	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001a39	f3 0f 11 40 1c 	movss	%xmm0, 0x1c(%rax)
0000000100001a3e	e9 00 00 00 00 	jmp	0x100001a43
0000000100001a43	5d 	popq	%rbp
0000000100001a44	c3 	retq
0000000100001a45	66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_set_sprite_relative_angle:
0000000100001a50	55 	pushq	%rbp
0000000100001a51	48 89 e5 	movq	%rsp, %rbp
0000000100001a54	48 83 ec 10 	subq	$0x10, %rsp
0000000100001a58	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100001a5c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100001a60	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001a64	f3 0f 10 06 	movss	(%rsi), %xmm0
0000000100001a68	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001a6c	f3 0f 5c 06 	subss	(%rsi), %xmm0
0000000100001a70	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001a74	f3 0f 11 46 08 	movss	%xmm0, 0x8(%rsi)
0000000100001a79	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001a7d	f3 0f 10 46 04 	movss	0x4(%rsi), %xmm0
0000000100001a82	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001a86	f3 0f 5c 46 04 	subss	0x4(%rsi), %xmm0
0000000100001a8b	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001a8f	f3 0f 11 46 0c 	movss	%xmm0, 0xc(%rsi)
0000000100001a94	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001a98	f3 0f 10 46 0c 	movss	0xc(%rsi), %xmm0
0000000100001a9d	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001aa1	f3 0f 10 4e 08 	movss	0x8(%rsi), %xmm1
0000000100001aa6	e8 c3 c8 00 00 	callq	0x10000e36e ## symbol stub for: _atan2f
0000000100001aab	f3 0f 10 0d f5 d5 00 00 	movss	0xd5f5(%rip), %xmm1
0000000100001ab3	f3 0f 59 c1 	mulss	%xmm1, %xmm0
0000000100001ab7	f3 0f 2c c0 	cvttss2si	%xmm0, %eax
0000000100001abb	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001abf	89 46 24 	movl	%eax, 0x24(%rsi)
0000000100001ac2	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001ac6	c7 46 38 00 00 00 00 	movl	$0x0, 0x38(%rsi)
0000000100001acd	48 83 c4 10 	addq	$0x10, %rsp
0000000100001ad1	5d 	popq	%rbp
0000000100001ad2	c3 	retq
0000000100001ad3	90 	nop
0000000100001ad4	90 	nop
0000000100001ad5	90 	nop
0000000100001ad6	90 	nop
0000000100001ad7	90 	nop
0000000100001ad8	90 	nop
0000000100001ad9	90 	nop
0000000100001ada	90 	nop
0000000100001adb	90 	nop
0000000100001adc	90 	nop
0000000100001add	90 	nop
0000000100001ade	90 	nop
0000000100001adf	90 	nop
_update_fps:
0000000100001ae0	55 	pushq	%rbp
0000000100001ae1	48 89 e5 	movq	%rsp, %rbp
0000000100001ae4	48 83 ec 20 	subq	$0x20, %rsp
0000000100001ae8	31 c0 	xorl	%eax, %eax
0000000100001aea	89 c1 	movl	%eax, %ecx
0000000100001aec	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100001af0	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100001af4	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100001af8	48 89 ce 	movq	%rcx, %rsi
0000000100001afb	e8 92 c8 00 00 	callq	0x10000e392 ## symbol stub for: _gettimeofday
0000000100001b00	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001b04	48 83 b9 d0 51 00 00 00 	cmpq	$0x0, 0x51d0(%rcx)
0000000100001b0c	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100001b0f	0f 84 a7 00 00 00 	je	0x100001bbc
0000000100001b15	f2 0f 10 05 9b d5 00 00 	movsd	0xd59b(%rip), %xmm0
0000000100001b1d	f3 0f 10 0d 9b d5 00 00 	movss	0xd59b(%rip), %xmm1
0000000100001b25	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001b29	8b 48 08 	movl	0x8(%rax), %ecx
0000000100001b2c	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001b30	2b 48 28 	subl	0x28(%rax), %ecx
0000000100001b33	f3 0f 2a d1 	cvtsi2ssl	%ecx, %xmm2
0000000100001b37	f3 0f 5e d1 	divss	%xmm1, %xmm2
0000000100001b3b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001b3f	f3 0f 11 90 18 2b 00 00 	movss	%xmm2, 0x2b18(%rax)
0000000100001b47	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001b4b	f3 0f 5a 88 18 2b 00 00 	cvtss2sd	0x2b18(%rax), %xmm1
0000000100001b53	66 0f 2e c1 	ucomisd	%xmm1, %xmm0
0000000100001b57	0f 86 14 00 00 00 	jbe	0x100001b71
0000000100001b5d	f3 0f 10 05 5f d5 00 00 	movss	0xd55f(%rip), %xmm0
0000000100001b65	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001b69	f3 0f 11 80 18 2b 00 00 	movss	%xmm0, 0x2b18(%rax)
0000000100001b71	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001b75	48 8b 40 20 	movq	0x20(%rax), %rax
0000000100001b79	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100001b7d	48 3b 01 	cmpq	(%rcx), %rax
0000000100001b80	0f 84 31 00 00 00 	je	0x100001bb7
0000000100001b86	f3 0f 10 05 32 d5 00 00 	movss	0xd532(%rip), %xmm0
0000000100001b8e	b8 40 42 0f 00 	movl	$0xf4240, %eax
0000000100001b93	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100001b97	8b 51 08 	movl	0x8(%rcx), %edx
0000000100001b9a	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100001b9e	2b 41 28 	subl	0x28(%rcx), %eax
0000000100001ba1	01 c2 	addl	%eax, %edx
0000000100001ba3	f3 0f 2a ca 	cvtsi2ssl	%edx, %xmm1
0000000100001ba7	f3 0f 5e c8 	divss	%xmm0, %xmm1
0000000100001bab	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001baf	f3 0f 11 89 18 2b 00 00 	movss	%xmm1, 0x2b18(%rcx)
0000000100001bb7	e9 00 00 00 00 	jmp	0x100001bbc
0000000100001bbc	31 c0 	xorl	%eax, %eax
0000000100001bbe	89 c6 	movl	%eax, %esi
0000000100001bc0	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100001bc4	48 83 c1 20 	addq	$0x20, %rcx
0000000100001bc8	48 89 cf 	movq	%rcx, %rdi
0000000100001bcb	e8 c2 c7 00 00 	callq	0x10000e392 ## symbol stub for: _gettimeofday
0000000100001bd0	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100001bd4	48 8b 49 20 	movq	0x20(%rcx), %rcx
0000000100001bd8	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001bdc	48 2b 4e 10 	subq	0x10(%rsi), %rcx
0000000100001be0	48 83 f9 00 	cmpq	$0x0, %rcx
0000000100001be4	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100001be7	0f 84 5b 00 00 00 	je	0x100001c48
0000000100001bed	48 8d 3d 69 cc 00 00 	leaq	0xcc69(%rip), %rdi ## literal pool for: "FPS [%i]\n"
0000000100001bf4	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001bf8	8b 48 30 	movl	0x30(%rax), %ecx
0000000100001bfb	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001bff	89 48 34 	movl	%ecx, 0x34(%rax)
0000000100001c02	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001c06	8b 70 34 	movl	0x34(%rax), %esi
0000000100001c09	b0 00 	movb	$0x0, %al
0000000100001c0b	e8 d0 3e 00 00 	callq	_ft_printf
0000000100001c10	31 c9 	xorl	%ecx, %ecx
0000000100001c12	89 ce 	movl	%ecx, %esi
0000000100001c14	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100001c18	c7 47 30 00 00 00 00 	movl	$0x0, 0x30(%rdi)
0000000100001c1f	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100001c23	48 83 c7 10 	addq	$0x10, %rdi
0000000100001c27	89 45 e4 	movl	%eax, -0x1c(%rbp)
0000000100001c2a	e8 63 c7 00 00 	callq	0x10000e392 ## symbol stub for: _gettimeofday
0000000100001c2f	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001c33	48 8b be d0 51 00 00 	movq	0x51d0(%rsi), %rdi
0000000100001c3a	48 83 c7 01 	addq	$0x1, %rdi
0000000100001c3e	48 89 be d0 51 00 00 	movq	%rdi, 0x51d0(%rsi)
0000000100001c45	89 45 e0 	movl	%eax, -0x20(%rbp)
0000000100001c48	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100001c4c	8b 48 30 	movl	0x30(%rax), %ecx
0000000100001c4f	83 c1 01 	addl	$0x1, %ecx
0000000100001c52	89 48 30 	movl	%ecx, 0x30(%rax)
0000000100001c55	48 83 c4 20 	addq	$0x20, %rsp
0000000100001c59	5d 	popq	%rbp
0000000100001c5a	c3 	retq
0000000100001c5b	90 	nop
0000000100001c5c	90 	nop
0000000100001c5d	90 	nop
0000000100001c5e	90 	nop
0000000100001c5f	90 	nop
_raycast_aff_view_2d:
0000000100001c60	55 	pushq	%rbp
0000000100001c61	48 89 e5 	movq	%rsp, %rbp
0000000100001c64	48 83 ec 20 	subq	$0x20, %rsp
0000000100001c68	b8 01 00 00 00 	movl	$0x1, %eax
0000000100001c6d	b9 10 00 00 00 	movl	$0x10, %ecx
0000000100001c72	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100001c76	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100001c7a	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100001c81	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001c85	8b 96 38 2b 00 00 	movl	0x2b38(%rsi), %edx
0000000100001c8b	89 55 e8 	movl	%edx, -0x18(%rbp)
0000000100001c8e	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001c92	f3 0f 10 06 	movss	(%rsi), %xmm0
0000000100001c96	f3 0f 2a 4d e8 	cvtsi2ssl	-0x18(%rbp), %xmm1
0000000100001c9b	f3 0f 59 c1 	mulss	%xmm1, %xmm0
0000000100001c9f	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
0000000100001ca3	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001ca7	89 56 1c 	movl	%edx, 0x1c(%rsi)
0000000100001caa	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100001cae	f3 0f 10 46 04 	movss	0x4(%rsi), %xmm0
0000000100001cb3	f3 0f 2a 4d e8 	cvtsi2ssl	-0x18(%rbp), %xmm1
0000000100001cb8	f3 0f 59 c1 	mulss	%xmm1, %xmm0
0000000100001cbc	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
0000000100001cc0	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001cc4	89 56 24 	movl	%edx, 0x24(%rsi)
0000000100001cc7	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001ccb	8b 56 70 	movl	0x70(%rsi), %edx
0000000100001cce	83 e2 02 	andl	$0x2, %edx
0000000100001cd1	83 fa 00 	cmpl	$0x0, %edx
0000000100001cd4	0f 45 c1 	cmovnel	%ecx, %eax
0000000100001cd7	89 45 e4 	movl	%eax, -0x1c(%rbp)
0000000100001cda	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100001cdd	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001ce1	3b 41 78 	cmpl	0x78(%rcx), %eax
0000000100001ce4	0f 8d 78 00 00 00 	jge	0x100001d62
0000000100001cea	ba 3c 14 dc 00 	movl	$0xdc143c, %edx
0000000100001cef	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100001cf3	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001cf7	f3 0f 10 84 c1 f8 2b 00 00 	movss	0x2bf8(%rcx,%rax,8), %xmm0
0000000100001d00	f3 0f 2a 4d e8 	cvtsi2ssl	-0x18(%rbp), %xmm1
0000000100001d05	f3 0f 59 c1 	mulss	%xmm1, %xmm0
0000000100001d09	f3 0f 2c f0 	cvttss2si	%xmm0, %esi
0000000100001d0d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001d11	89 70 20 	movl	%esi, 0x20(%rax)
0000000100001d14	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100001d18	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001d1c	f3 0f 10 84 c1 fc 2b 00 00 	movss	0x2bfc(%rcx,%rax,8), %xmm0
0000000100001d25	f3 0f 2a 4d e8 	cvtsi2ssl	-0x18(%rbp), %xmm1
0000000100001d2a	f3 0f 59 c1 	mulss	%xmm1, %xmm0
0000000100001d2e	f3 0f 2c f0 	cvttss2si	%xmm0, %esi
0000000100001d32	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001d36	89 70 28 	movl	%esi, 0x28(%rax)
0000000100001d39	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001d3d	48 8b 78 10 	movq	0x10(%rax), %rdi
0000000100001d41	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001d45	48 83 c0 1c 	addq	$0x1c, %rax
0000000100001d49	48 89 c6 	movq	%rax, %rsi
0000000100001d4c	e8 ef 8d 00 00 	callq	_mlxji_draw_line
0000000100001d51	8b 55 e4 	movl	-0x1c(%rbp), %edx
0000000100001d54	03 55 ec 	addl	-0x14(%rbp), %edx
0000000100001d57	89 55 ec 	movl	%edx, -0x14(%rbp)
0000000100001d5a	89 45 e0 	movl	%eax, -0x20(%rbp)
0000000100001d5d	e9 78 ff ff ff 	jmp	0x100001cda
0000000100001d62	48 83 c4 20 	addq	$0x20, %rsp
0000000100001d66	5d 	popq	%rbp
0000000100001d67	c3 	retq
0000000100001d68	90 	nop
0000000100001d69	90 	nop
0000000100001d6a	90 	nop
0000000100001d6b	90 	nop
0000000100001d6c	90 	nop
0000000100001d6d	90 	nop
0000000100001d6e	90 	nop
0000000100001d6f	90 	nop
_raycast_aff_floor:
0000000100001d70	55 	pushq	%rbp
0000000100001d71	48 89 e5 	movq	%rsp, %rbp
0000000100001d74	48 83 ec 20 	subq	$0x20, %rsp
0000000100001d78	48 8d 45 e0 	leaq	-0x20(%rbp), %rax
0000000100001d7c	31 c9 	xorl	%ecx, %ecx
0000000100001d7e	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100001d82	89 75 f4 	movl	%esi, -0xc(%rbp)
0000000100001d85	89 55 f0 	movl	%edx, -0x10(%rbp)
0000000100001d88	8b 55 f4 	movl	-0xc(%rbp), %edx
0000000100001d8b	83 c2 01 	addl	$0x1, %edx
0000000100001d8e	89 55 e0 	movl	%edx, -0x20(%rbp)
0000000100001d91	8b 55 f0 	movl	-0x10(%rbp), %edx
0000000100001d94	83 ea 01 	subl	$0x1, %edx
0000000100001d97	89 55 e8 	movl	%edx, -0x18(%rbp)
0000000100001d9a	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001d9e	8b 57 74 	movl	0x74(%rdi), %edx
0000000100001da1	83 ea 01 	subl	$0x1, %edx
0000000100001da4	89 55 ec 	movl	%edx, -0x14(%rbp)
0000000100001da7	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001dab	48 8b 7f 10 	movq	0x10(%rdi), %rdi
0000000100001daf	48 89 c6 	movq	%rax, %rsi
0000000100001db2	89 ca 	movl	%ecx, %edx
0000000100001db4	e8 a7 91 00 00 	callq	_mlxji_draw_y_line
0000000100001db9	48 83 c4 20 	addq	$0x20, %rsp
0000000100001dbd	5d 	popq	%rbp
0000000100001dbe	c3 	retq
0000000100001dbf	90 	nop
_raycast_aff_sky:
0000000100001dc0	55 	pushq	%rbp
0000000100001dc1	48 89 e5 	movq	%rsp, %rbp
0000000100001dc4	48 83 ec 30 	subq	$0x30, %rsp
0000000100001dc8	b8 10 00 00 00 	movl	$0x10, %eax
0000000100001dcd	89 c1 	movl	%eax, %ecx
0000000100001dcf	4c 8d 45 d8 	leaq	-0x28(%rbp), %r8
0000000100001dd3	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100001dd7	89 75 f4 	movl	%esi, -0xc(%rbp)
0000000100001dda	89 55 f0 	movl	%edx, -0x10(%rbp)
0000000100001ddd	4c 89 c7 	movq	%r8, %rdi
0000000100001de0	48 89 ce 	movq	%rcx, %rsi
0000000100001de3	e8 c8 2c 00 00 	callq	_ft_bzero
0000000100001de8	f3 0f 10 05 b8 d2 00 00 	movss	0xd2b8(%rip), %xmm0
0000000100001df0	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100001df3	83 c0 01 	addl	$0x1, %eax
0000000100001df6	89 45 d8 	movl	%eax, -0x28(%rbp)
0000000100001df9	c7 45 e4 00 00 00 00 	movl	$0x0, -0x1c(%rbp)
0000000100001e00	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100001e07	f3 0f 2a 4d d8 	cvtsi2ssl	-0x28(%rbp), %xmm1
0000000100001e0c	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001e10	f3 0f 59 81 5c 2b 00 00 	mulss	0x2b5c(%rcx), %xmm0
0000000100001e18	f3 0f 58 c8 	addss	%xmm0, %xmm1
0000000100001e1c	f3 0f 2c c1 	cvttss2si	%xmm1, %eax
0000000100001e20	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100001e23	83 7d e8 00 	cmpl	$0x0, -0x18(%rbp)
0000000100001e27	0f 8d 10 00 00 00 	jge	0x100001e3d
0000000100001e2d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001e31	8b 88 70 2b 00 00 	movl	0x2b70(%rax), %ecx
0000000100001e37	2b 4d e8 	subl	-0x18(%rbp), %ecx
0000000100001e3a	89 4d e8 	movl	%ecx, -0x18(%rbp)
0000000100001e3d	e9 00 00 00 00 	jmp	0x100001e42
0000000100001e42	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100001e45	3b 45 f0 	cmpl	-0x10(%rbp), %eax
0000000100001e48	0f 8d 83 00 00 00 	jge	0x100001ed1
0000000100001e4e	8b 45 e4 	movl	-0x1c(%rbp), %eax
0000000100001e51	89 45 e0 	movl	%eax, -0x20(%rbp)
0000000100001e54	8b 45 e0 	movl	-0x20(%rbp), %eax
0000000100001e57	83 c0 01 	addl	$0x1, %eax
0000000100001e5a	89 45 e4 	movl	%eax, -0x1c(%rbp)
0000000100001e5d	8b 45 e8 	movl	-0x18(%rbp), %eax
0000000100001e60	c1 e0 02 	shll	$0x2, %eax
0000000100001e63	8b 4d ec 	movl	-0x14(%rbp), %ecx
0000000100001e66	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100001e6a	8b b2 70 2b 00 00 	movl	0x2b70(%rdx), %esi
0000000100001e70	c1 e6 02 	shll	$0x2, %esi
0000000100001e73	0f af ce 	imull	%esi, %ecx
0000000100001e76	01 c8 	addl	%ecx, %eax
0000000100001e78	48 63 d0 	movslq	%eax, %rdx
0000000100001e7b	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100001e7f	48 8b bf 68 2b 00 00 	movq	0x2b68(%rdi), %rdi
0000000100001e86	8b 04 17 	movl	(%rdi,%rdx), %eax
0000000100001e89	89 45 d4 	movl	%eax, -0x2c(%rbp)
0000000100001e8c	8b 45 e4 	movl	-0x1c(%rbp), %eax
0000000100001e8f	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100001e93	3b 82 c8 51 00 00 	cmpl	0x51c8(%rdx), %eax
0000000100001e99	0f 8c 10 00 00 00 	jl	0x100001eaf
0000000100001e9f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001ea3	8b 88 c8 51 00 00 	movl	0x51c8(%rax), %ecx
0000000100001ea9	83 e9 01 	subl	$0x1, %ecx
0000000100001eac	89 4d e4 	movl	%ecx, -0x1c(%rbp)
0000000100001eaf	48 8d 75 d8 	leaq	-0x28(%rbp), %rsi
0000000100001eb3	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001eb7	48 8b 78 10 	movq	0x10(%rax), %rdi
0000000100001ebb	8b 55 d4 	movl	-0x2c(%rbp), %edx
0000000100001ebe	e8 9d 90 00 00 	callq	_mlxji_draw_y_line
0000000100001ec3	8b 55 ec 	movl	-0x14(%rbp), %edx
0000000100001ec6	83 c2 01 	addl	$0x1, %edx
0000000100001ec9	89 55 ec 	movl	%edx, -0x14(%rbp)
0000000100001ecc	e9 71 ff ff ff 	jmp	0x100001e42
0000000100001ed1	48 83 c4 30 	addq	$0x30, %rsp
0000000100001ed5	5d 	popq	%rbp
0000000100001ed6	c3 	retq
0000000100001ed7	90 	nop
0000000100001ed8	90 	nop
0000000100001ed9	90 	nop
0000000100001eda	90 	nop
0000000100001edb	90 	nop
0000000100001edc	90 	nop
0000000100001edd	90 	nop
0000000100001ede	90 	nop
0000000100001edf	90 	nop
_raycast_aff_basic:
0000000100001ee0	55 	pushq	%rbp
0000000100001ee1	48 89 e5 	movq	%rsp, %rbp
0000000100001ee4	48 83 ec 30 	subq	$0x30, %rsp
0000000100001ee8	b8 10 00 00 00 	movl	$0x10, %eax
0000000100001eed	41 89 c0 	movl	%eax, %r8d
0000000100001ef0	4c 8d 4d d8 	leaq	-0x28(%rbp), %r9
0000000100001ef4	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100001ef8	89 75 f4 	movl	%esi, -0xc(%rbp)
0000000100001efb	89 55 f0 	movl	%edx, -0x10(%rbp)
0000000100001efe	89 4d ec 	movl	%ecx, -0x14(%rbp)
0000000100001f01	4c 89 cf 	movq	%r9, %rdi
0000000100001f04	4c 89 c6 	movq	%r8, %rsi
0000000100001f07	e8 a4 2b 00 00 	callq	_ft_bzero
0000000100001f0c	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100001f0f	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001f13	3b 86 c8 51 00 00 	cmpl	0x51c8(%rsi), %eax
0000000100001f19	0f 8c 10 00 00 00 	jl	0x100001f2f
0000000100001f1f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100001f23	8b 88 c8 51 00 00 	movl	0x51c8(%rax), %ecx
0000000100001f29	83 e9 01 	subl	$0x1, %ecx
0000000100001f2c	89 4d ec 	movl	%ecx, -0x14(%rbp)
0000000100001f2f	83 7d f0 00 	cmpl	$0x0, -0x10(%rbp)
0000000100001f33	0f 8d 07 00 00 00 	jge	0x100001f40
0000000100001f39	c7 45 f0 00 00 00 00 	movl	$0x0, -0x10(%rbp)
0000000100001f40	48 8d 75 d8 	leaq	-0x28(%rbp), %rsi
0000000100001f44	ba 22 8b 22 00 	movl	$0x228b22, %edx
0000000100001f49	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100001f4c	83 c0 01 	addl	$0x1, %eax
0000000100001f4f	89 45 d8 	movl	%eax, -0x28(%rbp)
0000000100001f52	8b 45 f0 	movl	-0x10(%rbp), %eax
0000000100001f55	89 45 e0 	movl	%eax, -0x20(%rbp)
0000000100001f58	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100001f5b	83 c0 01 	addl	$0x1, %eax
0000000100001f5e	89 45 dc 	movl	%eax, -0x24(%rbp)
0000000100001f61	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100001f64	89 45 e4 	movl	%eax, -0x1c(%rbp)
0000000100001f67	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100001f6b	48 8b 79 10 	movq	0x10(%rcx), %rdi
0000000100001f6f	e8 ec 8f 00 00 	callq	_mlxji_draw_y_line
0000000100001f74	48 83 c4 30 	addq	$0x30, %rsp
0000000100001f78	5d 	popq	%rbp
0000000100001f79	c3 	retq
0000000100001f7a	90 	nop
0000000100001f7b	90 	nop
0000000100001f7c	90 	nop
0000000100001f7d	90 	nop
0000000100001f7e	90 	nop
0000000100001f7f	90 	nop
_raycast_aff_tex:
0000000100001f80	55 	pushq	%rbp
0000000100001f81	48 89 e5 	movq	%rsp, %rbp
0000000100001f84	48 83 ec 50 	subq	$0x50, %rsp
0000000100001f88	b8 10 00 00 00 	movl	$0x10, %eax
0000000100001f8d	41 89 c0 	movl	%eax, %r8d
0000000100001f90	4c 8d 4d c0 	leaq	-0x40(%rbp), %r9
0000000100001f94	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100001f98	89 75 f4 	movl	%esi, -0xc(%rbp)
0000000100001f9b	89 55 f0 	movl	%edx, -0x10(%rbp)
0000000100001f9e	f3 0f 11 45 ec 	movss	%xmm0, -0x14(%rbp)
0000000100001fa3	48 89 4d e0 	movq	%rcx, -0x20(%rbp)
0000000100001fa7	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
0000000100001fab	8b 41 50 	movl	0x50(%rcx), %eax
0000000100001fae	83 e8 30 	subl	$0x30, %eax
0000000100001fb1	89 45 bc 	movl	%eax, -0x44(%rbp)
0000000100001fb4	4c 89 cf 	movq	%r9, %rdi
0000000100001fb7	4c 89 c6 	movq	%r8, %rsi
0000000100001fba	e8 f1 2a 00 00 	callq	_ft_bzero
0000000100001fbf	0f 57 c0 	xorps	%xmm0, %xmm0
0000000100001fc2	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100001fc5	83 c0 01 	addl	$0x1, %eax
0000000100001fc8	89 45 c0 	movl	%eax, -0x40(%rbp)
0000000100001fcb	8b 45 f0 	movl	-0x10(%rbp), %eax
0000000100001fce	89 45 cc 	movl	%eax, -0x34(%rbp)
0000000100001fd1	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
0000000100001fd5	f3 0f 10 49 14 	movss	0x14(%rcx), %xmm1
0000000100001fda	48 63 4d bc 	movslq	-0x44(%rbp), %rcx
0000000100001fde	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100001fe2	48 81 c6 68 2b 00 00 	addq	$0x2b68, %rsi
0000000100001fe9	48 c1 e1 04 	shlq	$0x4, %rcx
0000000100001fed	48 01 ce 	addq	%rcx, %rsi
0000000100001ff0	f3 0f 2a 56 08 	cvtsi2ssl	0x8(%rsi), %xmm2
0000000100001ff5	f3 0f 59 ca 	mulss	%xmm2, %xmm1
0000000100001ff9	f3 0f 2c c1 	cvttss2si	%xmm1, %eax
0000000100001ffd	89 45 d4 	movl	%eax, -0x2c(%rbp)
0000000100002000	c7 45 d8 ff ff ff ff 	movl	$0xffffffff, -0x28(%rbp)
0000000100002007	f3 0f 11 45 dc 	movss	%xmm0, -0x24(%rbp)
000000010000200c	8b 45 d8 	movl	-0x28(%rbp), %eax
000000010000200f	83 c0 01 	addl	$0x1, %eax
0000000100002012	89 45 d8 	movl	%eax, -0x28(%rbp)
0000000100002015	48 63 4d bc 	movslq	-0x44(%rbp), %rcx
0000000100002019	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
000000010000201d	48 81 c2 68 2b 00 00 	addq	$0x2b68, %rdx
0000000100002024	48 c1 e1 04 	shlq	$0x4, %rcx
0000000100002028	48 01 ca 	addq	%rcx, %rdx
000000010000202b	8b 7a 0c 	movl	0xc(%rdx), %edi
000000010000202e	48 63 4d bc 	movslq	-0x44(%rbp), %rcx
0000000100002032	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002036	48 81 c2 68 2b 00 00 	addq	$0x2b68, %rdx
000000010000203d	48 c1 e1 04 	shlq	$0x4, %rcx
0000000100002041	48 01 ca 	addq	%rcx, %rdx
0000000100002044	8b 72 08 	movl	0x8(%rdx), %esi
0000000100002047	89 45 b8 	movl	%eax, -0x48(%rbp)
000000010000204a	e8 31 1a 00 00 	callq	_ft_min
000000010000204f	8b 75 b8 	movl	-0x48(%rbp), %esi
0000000100002052	39 c6 	cmpl	%eax, %esi
0000000100002054	0f 8d c9 00 00 00 	jge	0x100002123
000000010000205a	8b 45 cc 	movl	-0x34(%rbp), %eax
000000010000205d	89 45 c8 	movl	%eax, -0x38(%rbp)
0000000100002060	f3 0f 2a 45 f0 	cvtsi2ssl	-0x10(%rbp), %xmm0
0000000100002065	f3 0f 58 45 dc 	addss	-0x24(%rbp), %xmm0
000000010000206a	f3 0f 2c c0 	cvttss2si	%xmm0, %eax
000000010000206e	89 45 cc 	movl	%eax, -0x34(%rbp)
0000000100002071	83 7d cc 00 	cmpl	$0x0, -0x34(%rbp)
0000000100002075	0f 8e 94 00 00 00 	jle	0x10000210f
000000010000207b	83 7d c8 00 	cmpl	$0x0, -0x38(%rbp)
000000010000207f	0f 8d 07 00 00 00 	jge	0x10000208c
0000000100002085	c7 45 c8 00 00 00 00 	movl	$0x0, -0x38(%rbp)
000000010000208c	8b 45 d4 	movl	-0x2c(%rbp), %eax
000000010000208f	c1 e0 02 	shll	$0x2, %eax
0000000100002092	8b 4d d8 	movl	-0x28(%rbp), %ecx
0000000100002095	48 63 55 bc 	movslq	-0x44(%rbp), %rdx
0000000100002099	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
000000010000209d	48 81 c6 68 2b 00 00 	addq	$0x2b68, %rsi
00000001000020a4	48 c1 e2 04 	shlq	$0x4, %rdx
00000001000020a8	48 01 d6 	addq	%rdx, %rsi
00000001000020ab	8b 7e 08 	movl	0x8(%rsi), %edi
00000001000020ae	c1 e7 02 	shll	$0x2, %edi
00000001000020b1	0f af cf 	imull	%edi, %ecx
00000001000020b4	01 c8 	addl	%ecx, %eax
00000001000020b6	48 63 d0 	movslq	%eax, %rdx
00000001000020b9	48 63 75 bc 	movslq	-0x44(%rbp), %rsi
00000001000020bd	4c 8b 45 f8 	movq	-0x8(%rbp), %r8
00000001000020c1	49 81 c0 68 2b 00 00 	addq	$0x2b68, %r8
00000001000020c8	48 c1 e6 04 	shlq	$0x4, %rsi
00000001000020cc	49 01 f0 	addq	%rsi, %r8
00000001000020cf	49 8b 30 	movq	(%r8), %rsi
00000001000020d2	8b 04 16 	movl	(%rsi,%rdx), %eax
00000001000020d5	89 45 d0 	movl	%eax, -0x30(%rbp)
00000001000020d8	8b 45 cc 	movl	-0x34(%rbp), %eax
00000001000020db	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
00000001000020df	3b 82 c8 51 00 00 	cmpl	0x51c8(%rdx), %eax
00000001000020e5	0f 8c 10 00 00 00 	jl	0x1000020fb
00000001000020eb	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000020ef	8b 88 c8 51 00 00 	movl	0x51c8(%rax), %ecx
00000001000020f5	83 e9 01 	subl	$0x1, %ecx
00000001000020f8	89 4d cc 	movl	%ecx, -0x34(%rbp)
00000001000020fb	48 8d 75 c0 	leaq	-0x40(%rbp), %rsi
00000001000020ff	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002103	48 8b 78 10 	movq	0x10(%rax), %rdi
0000000100002107	8b 55 d0 	movl	-0x30(%rbp), %edx
000000010000210a	e8 51 8e 00 00 	callq	_mlxji_draw_y_line
000000010000210f	f3 0f 10 45 ec 	movss	-0x14(%rbp), %xmm0
0000000100002114	f3 0f 58 45 dc 	addss	-0x24(%rbp), %xmm0
0000000100002119	f3 0f 11 45 dc 	movss	%xmm0, -0x24(%rbp)
000000010000211e	e9 e9 fe ff ff 	jmp	0x10000200c
0000000100002123	48 83 c4 50 	addq	$0x50, %rsp
0000000100002127	5d 	popq	%rbp
0000000100002128	c3 	retq
0000000100002129	90 	nop
000000010000212a	90 	nop
000000010000212b	90 	nop
000000010000212c	90 	nop
000000010000212d	90 	nop
000000010000212e	90 	nop
000000010000212f	90 	nop
_raycast_aff:
0000000100002130	55 	pushq	%rbp
0000000100002131	48 89 e5 	movq	%rsp, %rbp
0000000100002134	48 83 ec 30 	subq	$0x30, %rsp
0000000100002138	f3 0f 10 05 88 cf 00 00 	movss	0xcf88(%rip), %xmm0
0000000100002140	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100002144	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100002148	89 55 ec 	movl	%edx, -0x14(%rbp)
000000010000214b	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
000000010000214f	f3 0f 2a 8e c8 51 00 00 	cvtsi2ssl	0x51c8(%rsi), %xmm1
0000000100002157	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000215b	f3 0f 5e 4e 10 	divss	0x10(%rsi), %xmm1
0000000100002160	f3 0f 5e c8 	divss	%xmm0, %xmm1
0000000100002164	f3 0f 2c d1 	cvttss2si	%xmm1, %edx
0000000100002168	89 55 e8 	movl	%edx, -0x18(%rbp)
000000010000216b	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
000000010000216f	8b 96 cc 51 00 00 	movl	0x51cc(%rsi), %edx
0000000100002175	2b 55 e8 	subl	-0x18(%rbp), %edx
0000000100002178	89 55 e4 	movl	%edx, -0x1c(%rbp)
000000010000217b	8b 55 e8 	movl	-0x18(%rbp), %edx
000000010000217e	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100002182	03 96 cc 51 00 00 	addl	0x51cc(%rsi), %edx
0000000100002188	89 55 e0 	movl	%edx, -0x20(%rbp)
000000010000218b	8b 55 e0 	movl	-0x20(%rbp), %edx
000000010000218e	2b 55 e4 	subl	-0x1c(%rbp), %edx
0000000100002191	f3 0f 2a c2 	cvtsi2ssl	%edx, %xmm0
0000000100002195	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100002199	8b be 84 2b 00 00 	movl	0x2b84(%rsi), %edi
000000010000219f	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000021a3	8b b6 80 2b 00 00 	movl	0x2b80(%rsi), %esi
00000001000021a9	f3 0f 11 45 d8 	movss	%xmm0, -0x28(%rbp)
00000001000021ae	e8 cd 18 00 00 	callq	_ft_min
00000001000021b3	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
00000001000021b7	f3 0f 10 4d d8 	movss	-0x28(%rbp), %xmm1
00000001000021bc	f3 0f 5e c8 	divss	%xmm0, %xmm1
00000001000021c0	f3 0f 11 4d dc 	movss	%xmm1, -0x24(%rbp)
00000001000021c5	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000021c9	8b 41 70 	movl	0x70(%rcx), %eax
00000001000021cc	83 e0 01 	andl	$0x1, %eax
00000001000021cf	83 f8 00 	cmpl	$0x0, %eax
00000001000021d2	0f 84 17 00 00 00 	je	0x1000021ef
00000001000021d8	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000021dc	8b 75 ec 	movl	-0x14(%rbp), %esi
00000001000021df	8b 55 e4 	movl	-0x1c(%rbp), %edx
00000001000021e2	8b 4d e0 	movl	-0x20(%rbp), %ecx
00000001000021e5	e8 f6 fc ff ff 	callq	_raycast_aff_basic
00000001000021ea	e9 18 00 00 00 	jmp	0x100002207
00000001000021ef	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000021f3	8b 75 ec 	movl	-0x14(%rbp), %esi
00000001000021f6	8b 55 e4 	movl	-0x1c(%rbp), %edx
00000001000021f9	f3 0f 10 45 dc 	movss	-0x24(%rbp), %xmm0
00000001000021fe	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100002202	e8 79 fd ff ff 	callq	_raycast_aff_tex
0000000100002207	8b 45 e0 	movl	-0x20(%rbp), %eax
000000010000220a	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000220e	3b 81 c8 51 00 00 	cmpl	0x51c8(%rcx), %eax
0000000100002214	0f 8c 10 00 00 00 	jl	0x10000222a
000000010000221a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000221e	8b 88 c8 51 00 00 	movl	0x51c8(%rax), %ecx
0000000100002224	83 e9 01 	subl	$0x1, %ecx
0000000100002227	89 4d e0 	movl	%ecx, -0x20(%rbp)
000000010000222a	83 7d e4 00 	cmpl	$0x0, -0x1c(%rbp)
000000010000222e	0f 8d 07 00 00 00 	jge	0x10000223b
0000000100002234	c7 45 e4 00 00 00 00 	movl	$0x0, -0x1c(%rbp)
000000010000223b	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000223f	8b 75 ec 	movl	-0x14(%rbp), %esi
0000000100002242	8b 55 e4 	movl	-0x1c(%rbp), %edx
0000000100002245	e8 76 fb ff ff 	callq	_raycast_aff_sky
000000010000224a	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000224e	8b 75 ec 	movl	-0x14(%rbp), %esi
0000000100002251	8b 55 e0 	movl	-0x20(%rbp), %edx
0000000100002254	e8 17 fb ff ff 	callq	_raycast_aff_floor
0000000100002259	48 83 c4 30 	addq	$0x30, %rsp
000000010000225d	5d 	popq	%rbp
000000010000225e	c3 	retq
000000010000225f	90 	nop
_sprite_wolf:
0000000100002260	55 	pushq	%rbp
0000000100002261	48 89 e5 	movq	%rsp, %rbp
0000000100002264	48 83 ec 40 	subq	$0x40, %rsp
0000000100002268	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000226c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100002270	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100002274	83 7e 38 00 	cmpl	$0x0, 0x38(%rsi)
0000000100002278	0f 85 05 00 00 00 	jne	0x100002283
000000010000227e	e9 4d 00 00 00 	jmp	0x1000022d0
0000000100002283	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100002287	48 63 40 28 	movslq	0x28(%rax), %rax
000000010000228b	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000228f	83 bc 81 9c 17 00 00 00 	cmpl	$0x0, 0x179c(%rcx,%rax,4)
0000000100002297	0f 84 05 00 00 00 	je	0x1000022a2
000000010000229d	e9 2e 00 00 00 	jmp	0x1000022d0
00000001000022a2	48 8d 55 c8 	leaq	-0x38(%rbp), %rdx
00000001000022a6	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000022aa	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000022ae	48 89 c7 	movq	%rax, %rdi
00000001000022b1	48 89 ce 	movq	%rcx, %rsi
00000001000022b4	e8 27 00 00 00 	callq	_sprite_init_tool
00000001000022b9	48 8d 55 c8 	leaq	-0x38(%rbp), %rdx
00000001000022bd	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000022c1	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000022c5	48 89 c7 	movq	%rax, %rdi
00000001000022c8	48 89 ce 	movq	%rcx, %rsi
00000001000022cb	e8 80 01 00 00 	callq	_aff_sprite
00000001000022d0	48 83 c4 40 	addq	$0x40, %rsp
00000001000022d4	5d 	popq	%rbp
00000001000022d5	c3 	retq
00000001000022d6	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_sprite_init_tool:
00000001000022e0	55 	pushq	%rbp
00000001000022e1	48 89 e5 	movq	%rsp, %rbp
00000001000022e4	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000022e8	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000022ec	48 89 55 e8 	movq	%rdx, -0x18(%rbp)
00000001000022f0	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000022f4	f3 0f 2a 42 2c 	cvtsi2ssl	0x2c(%rdx), %xmm0
00000001000022f9	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000022fd	f3 0f 5e 42 3c 	divss	0x3c(%rdx), %xmm0
0000000100002302	f3 0f 2c c0 	cvttss2si	%xmm0, %eax
0000000100002306	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
000000010000230a	89 42 14 	movl	%eax, 0x14(%rdx)
000000010000230d	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100002311	f3 0f 2a 42 30 	cvtsi2ssl	0x30(%rdx), %xmm0
0000000100002316	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000231a	f3 0f 5e 42 3c 	divss	0x3c(%rdx), %xmm0
000000010000231f	f3 0f 2c c0 	cvttss2si	%xmm0, %eax
0000000100002323	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
0000000100002327	89 42 10 	movl	%eax, 0x10(%rdx)
000000010000232a	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000232e	8b 42 28 	movl	0x28(%rdx), %eax
0000000100002331	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
0000000100002335	8b 4a 14 	movl	0x14(%rdx), %ecx
0000000100002338	c1 f9 01 	sarl	$0x1, %ecx
000000010000233b	29 c8 	subl	%ecx, %eax
000000010000233d	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002341	89 42 1c 	movl	%eax, 0x1c(%rdx)
0000000100002344	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100002348	8b 42 28 	movl	0x28(%rdx), %eax
000000010000234b	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
000000010000234f	8b 4a 14 	movl	0x14(%rdx), %ecx
0000000100002352	c1 f9 01 	sarl	$0x1, %ecx
0000000100002355	01 c8 	addl	%ecx, %eax
0000000100002357	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
000000010000235b	89 42 20 	movl	%eax, 0x20(%rdx)
000000010000235e	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002362	8b 82 cc 51 00 00 	movl	0x51cc(%rdx), %eax
0000000100002368	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
000000010000236c	8b 4a 10 	movl	0x10(%rdx), %ecx
000000010000236f	c1 f9 01 	sarl	$0x1, %ecx
0000000100002372	29 c8 	subl	%ecx, %eax
0000000100002374	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002378	89 42 24 	movl	%eax, 0x24(%rdx)
000000010000237b	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
000000010000237f	8b 82 cc 51 00 00 	movl	0x51cc(%rdx), %eax
0000000100002385	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
0000000100002389	8b 4a 10 	movl	0x10(%rdx), %ecx
000000010000238c	c1 f9 01 	sarl	$0x1, %ecx
000000010000238f	01 c8 	addl	%ecx, %eax
0000000100002391	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002395	89 42 28 	movl	%eax, 0x28(%rdx)
0000000100002398	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
000000010000239c	8b 42 20 	movl	0x20(%rdx), %eax
000000010000239f	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
00000001000023a3	3b 42 78 	cmpl	0x78(%rdx), %eax
00000001000023a6	0f 8c 11 00 00 00 	jl	0x1000023bd
00000001000023ac	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000023b0	8b 48 78 	movl	0x78(%rax), %ecx
00000001000023b3	83 e9 01 	subl	$0x1, %ecx
00000001000023b6	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000023ba	89 48 20 	movl	%ecx, 0x20(%rax)
00000001000023bd	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000023c1	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
00000001000023c5	0f 8d 0b 00 00 00 	jge	0x1000023d6
00000001000023cb	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000023cf	c7 40 24 00 00 00 00 	movl	$0x0, 0x24(%rax)
00000001000023d6	0f 57 c0 	xorps	%xmm0, %xmm0
00000001000023d9	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000023dd	8b 48 24 	movl	0x24(%rax), %ecx
00000001000023e0	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000023e4	89 48 28 	movl	%ecx, 0x28(%rax)
00000001000023e7	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000023eb	f3 0f 11 00 	movss	%xmm0, (%rax)
00000001000023ef	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000023f3	f3 0f 11 40 0c 	movss	%xmm0, 0xc(%rax)
00000001000023f8	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000023fc	8b 48 24 	movl	0x24(%rax), %ecx
00000001000023ff	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002403	89 48 1c 	movl	%ecx, 0x1c(%rax)
0000000100002406	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000240a	f3 0f 2a 40 10 	cvtsi2ssl	0x10(%rax), %xmm0
000000010000240f	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100002413	f3 0f 2a 48 30 	cvtsi2ssl	0x30(%rax), %xmm1
0000000100002418	f3 0f 5e c1 	divss	%xmm1, %xmm0
000000010000241c	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002420	f3 0f 11 40 04 	movss	%xmm0, 0x4(%rax)
0000000100002425	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100002429	f3 0f 2a 40 2c 	cvtsi2ssl	0x2c(%rax), %xmm0
000000010000242e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002432	f3 0f 2a 48 14 	cvtsi2ssl	0x14(%rax), %xmm1
0000000100002437	f3 0f 5e c1 	divss	%xmm1, %xmm0
000000010000243b	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000243f	f3 0f 11 40 08 	movss	%xmm0, 0x8(%rax)
0000000100002444	5d 	popq	%rbp
0000000100002445	c3 	retq
0000000100002446	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_aff_sprite:
0000000100002450	55 	pushq	%rbp
0000000100002451	48 89 e5 	movq	%rsp, %rbp
0000000100002454	48 83 ec 20 	subq	$0x20, %rsp
0000000100002458	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000245c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100002460	48 89 55 e8 	movq	%rdx, -0x18(%rbp)
0000000100002464	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002468	8b 48 1c 	movl	0x1c(%rax), %ecx
000000010000246b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000246f	3b 48 20 	cmpl	0x20(%rax), %ecx
0000000100002472	0f 8d 93 01 00 00 	jge	0x10000260b
0000000100002478	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000247c	83 78 1c 00 	cmpl	$0x0, 0x1c(%rax)
0000000100002480	0f 8c 5c 01 00 00 	jl	0x1000025e2
0000000100002486	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000248a	f3 0f 10 40 3c 	movss	0x3c(%rax), %xmm0
000000010000248f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002493	48 63 40 1c 	movslq	0x1c(%rax), %rax
0000000100002497	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000249b	f3 0f 10 8c 81 b4 04 00 00 	movss	0x4b4(%rcx,%rax,4), %xmm1
00000001000024a4	0f 2e c8 	ucomiss	%xmm0, %xmm1
00000001000024a7	0f 86 35 01 00 00 	jbe	0x1000025e2
00000001000024ad	0f 57 c0 	xorps	%xmm0, %xmm0
00000001000024b0	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000024b4	c7 40 18 00 00 00 00 	movl	$0x0, 0x18(%rax)
00000001000024bb	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000024bf	f3 0f 11 00 	movss	%xmm0, (%rax)
00000001000024c3	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000024c7	8b 48 1c 	movl	0x1c(%rax), %ecx
00000001000024ca	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000024ce	89 48 28 	movl	%ecx, 0x28(%rax)
00000001000024d1	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000024d5	f3 0f 10 00 	movss	(%rax), %xmm0
00000001000024d9	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000024dd	8b 48 10 	movl	0x10(%rax), %ecx
00000001000024e0	83 e9 01 	subl	$0x1, %ecx
00000001000024e3	f3 0f 2a c9 	cvtsi2ssl	%ecx, %xmm1
00000001000024e7	0f 2e c8 	ucomiss	%xmm0, %xmm1
00000001000024ea	0f 86 ed 00 00 00 	jbe	0x1000025dd
00000001000024f0	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000024f4	8b 48 28 	movl	0x28(%rax), %ecx
00000001000024f7	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000024fb	89 48 24 	movl	%ecx, 0x24(%rax)
00000001000024fe	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002502	f3 0f 2a 40 1c 	cvtsi2ssl	0x1c(%rax), %xmm0
0000000100002507	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000250b	f3 0f 58 00 	addss	(%rax), %xmm0
000000010000250f	f3 0f 2c c8 	cvttss2si	%xmm0, %ecx
0000000100002513	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002517	89 48 28 	movl	%ecx, 0x28(%rax)
000000010000251a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000251e	8b 48 28 	movl	0x28(%rax), %ecx
0000000100002521	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002525	3b 48 74 	cmpl	0x74(%rax), %ecx
0000000100002528	0f 8c 05 00 00 00 	jl	0x100002533
000000010000252e	e9 aa 00 00 00 	jmp	0x1000025dd
0000000100002533	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002537	f3 0f 2c 48 0c 	cvttss2si	0xc(%rax), %ecx
000000010000253c	c1 e1 02 	shll	$0x2, %ecx
000000010000253f	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002543	8b 50 18 	movl	0x18(%rax), %edx
0000000100002546	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000254a	8b 70 2c 	movl	0x2c(%rax), %esi
000000010000254d	c1 e6 02 	shll	$0x2, %esi
0000000100002550	0f af d6 	imull	%esi, %edx
0000000100002553	01 d1 	addl	%edx, %ecx
0000000100002555	48 63 c1 	movslq	%ecx, %rax
0000000100002558	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000255c	48 8b 7f 40 	movq	0x40(%rdi), %rdi
0000000100002560	48 8b 3f 	movq	(%rdi), %rdi
0000000100002563	8b 0c 07 	movl	(%rdi,%rax), %ecx
0000000100002566	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000256a	89 48 20 	movl	%ecx, 0x20(%rax)
000000010000256d	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002571	81 78 20 ff ff ff 00 	cmpl	$0xffffff, 0x20(%rax)
0000000100002578	0f 84 38 00 00 00 	je	0x1000025b6
000000010000257e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002582	8b 48 20 	movl	0x20(%rax), %ecx
0000000100002585	81 e1 00 ff 00 00 	andl	$0xff00, %ecx
000000010000258b	81 f9 00 ee 00 00 	cmpl	$0xee00, %ecx
0000000100002591	0f 8d 1f 00 00 00 	jge	0x1000025b6
0000000100002597	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000259b	48 8b 78 10 	movq	0x10(%rax), %rdi
000000010000259f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000025a3	48 83 c0 1c 	addq	$0x1c, %rax
00000001000025a7	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
00000001000025ab	8b 51 20 	movl	0x20(%rcx), %edx
00000001000025ae	48 89 c6 	movq	%rax, %rsi
00000001000025b1	e8 aa 89 00 00 	callq	_mlxji_draw_y_line
00000001000025b6	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000025ba	f3 0f 10 40 04 	movss	0x4(%rax), %xmm0
00000001000025bf	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000025c3	f3 0f 58 00 	addss	(%rax), %xmm0
00000001000025c7	f3 0f 11 00 	movss	%xmm0, (%rax)
00000001000025cb	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000025cf	8b 48 18 	movl	0x18(%rax), %ecx
00000001000025d2	83 c1 01 	addl	$0x1, %ecx
00000001000025d5	89 48 18 	movl	%ecx, 0x18(%rax)
00000001000025d8	e9 f4 fe ff ff 	jmp	0x1000024d1
00000001000025dd	e9 00 00 00 00 	jmp	0x1000025e2
00000001000025e2	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000025e6	8b 48 1c 	movl	0x1c(%rax), %ecx
00000001000025e9	83 c1 01 	addl	$0x1, %ecx
00000001000025ec	89 48 1c 	movl	%ecx, 0x1c(%rax)
00000001000025ef	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000025f3	f3 0f 10 40 08 	movss	0x8(%rax), %xmm0
00000001000025f8	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000025fc	f3 0f 58 40 0c 	addss	0xc(%rax), %xmm0
0000000100002601	f3 0f 11 40 0c 	movss	%xmm0, 0xc(%rax)
0000000100002606	e9 59 fe ff ff 	jmp	0x100002464
000000010000260b	48 83 c4 20 	addq	$0x20, %rsp
000000010000260f	5d 	popq	%rbp
0000000100002610	c3 	retq
0000000100002611	90 	nop
0000000100002612	90 	nop
0000000100002613	90 	nop
0000000100002614	90 	nop
0000000100002615	90 	nop
0000000100002616	90 	nop
0000000100002617	90 	nop
0000000100002618	90 	nop
0000000100002619	90 	nop
000000010000261a	90 	nop
000000010000261b	90 	nop
000000010000261c	90 	nop
000000010000261d	90 	nop
000000010000261e	90 	nop
000000010000261f	90 	nop
_cmp_dist:
0000000100002620	55 	pushq	%rbp
0000000100002621	48 89 e5 	movq	%rsp, %rbp
0000000100002624	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100002628	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
000000010000262c	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100002630	f3 0f 10 46 3c 	movss	0x3c(%rsi), %xmm0
0000000100002635	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100002639	f3 0f 5c 46 3c 	subss	0x3c(%rsi), %xmm0
000000010000263e	5d 	popq	%rbp
000000010000263f	c3 	retq
_sprite_hit:
0000000100002640	55 	pushq	%rbp
0000000100002641	48 89 e5 	movq	%rsp, %rbp
0000000100002644	48 83 ec 40 	subq	$0x40, %rsp
0000000100002648	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000264c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100002650	48 89 55 e8 	movq	%rdx, -0x18(%rbp)
0000000100002654	89 4d e4 	movl	%ecx, -0x1c(%rbp)
0000000100002657	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
000000010000265b	f3 0f 10 42 0c 	movss	0xc(%rdx), %xmm0
0000000100002660	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
0000000100002664	f3 0f 10 4a 08 	movss	0x8(%rdx), %xmm1
0000000100002669	e8 00 bd 00 00 	callq	0x10000e36e ## symbol stub for: _atan2f
000000010000266e	f3 0f 10 0d 32 ca 00 00 	movss	0xca32(%rip), %xmm1
0000000100002676	f3 0f 59 c1 	mulss	%xmm1, %xmm0
000000010000267a	f3 0f 2c c8 	cvttss2si	%xmm0, %ecx
000000010000267e	89 4d d4 	movl	%ecx, -0x2c(%rbp)
0000000100002681	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100002685	48 8b 92 c8 2b 00 00 	movq	0x2bc8(%rdx), %rdx
000000010000268c	48 89 55 c8 	movq	%rdx, -0x38(%rbp)
0000000100002690	48 83 7d c8 00 	cmpq	$0x0, -0x38(%rbp)
0000000100002695	0f 84 7a 00 00 00 	je	0x100002715
000000010000269b	48 8b 45 c8 	movq	-0x38(%rbp), %rax
000000010000269f	48 8b 00 	movq	(%rax), %rax
00000001000026a2	48 89 45 d8 	movq	%rax, -0x28(%rbp)
00000001000026a6	48 8b 45 d8 	movq	-0x28(%rbp), %rax
00000001000026aa	83 78 38 00 	cmpl	$0x0, 0x38(%rax)
00000001000026ae	0f 85 50 00 00 00 	jne	0x100002704
00000001000026b4	8b 45 d4 	movl	-0x2c(%rbp), %eax
00000001000026b7	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
00000001000026bb	3b 41 24 	cmpl	0x24(%rcx), %eax
00000001000026be	0f 85 40 00 00 00 	jne	0x100002704
00000001000026c4	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000026c8	48 8b 00 	movq	(%rax), %rax
00000001000026cb	48 83 c0 30 	addq	$0x30, %rax
00000001000026cf	48 89 c7 	movq	%rax, %rdi
00000001000026d2	e8 e7 bd 00 00 	callq	0x10000e4be ## symbol stub for: _pthread_mutex_lock
00000001000026d7	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000026db	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
00000001000026df	8b 55 e4 	movl	-0x1c(%rbp), %edx
00000001000026e2	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
00000001000026e6	89 45 c4 	movl	%eax, -0x3c(%rbp)
00000001000026e9	e8 32 00 00 00 	callq	_sprite_is_hit
00000001000026ee	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000026f2	48 8b 09 	movq	(%rcx), %rcx
00000001000026f5	48 83 c1 30 	addq	$0x30, %rcx
00000001000026f9	48 89 cf 	movq	%rcx, %rdi
00000001000026fc	e8 c3 bd 00 00 	callq	0x10000e4c4 ## symbol stub for: _pthread_mutex_unlock
0000000100002701	89 45 c0 	movl	%eax, -0x40(%rbp)
0000000100002704	48 8b 45 c8 	movq	-0x38(%rbp), %rax
0000000100002708	48 8b 40 10 	movq	0x10(%rax), %rax
000000010000270c	48 89 45 c8 	movq	%rax, -0x38(%rbp)
0000000100002710	e9 7b ff ff ff 	jmp	0x100002690
0000000100002715	48 83 c4 40 	addq	$0x40, %rsp
0000000100002719	5d 	popq	%rbp
000000010000271a	c3 	retq
000000010000271b	0f 1f 44 00 00 	nopl	(%rax,%rax)
_sprite_is_hit:
0000000100002720	55 	pushq	%rbp
0000000100002721	48 89 e5 	movq	%rsp, %rbp
0000000100002724	48 83 ec 30 	subq	$0x30, %rsp
0000000100002728	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000272c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100002730	89 55 ec 	movl	%edx, -0x14(%rbp)
0000000100002733	48 89 4d e0 	movq	%rcx, -0x20(%rbp)
0000000100002737	8b 55 ec 	movl	-0x14(%rbp), %edx
000000010000273a	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
000000010000273e	89 51 28 	movl	%edx, 0x28(%rcx)
0000000100002741	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100002745	83 79 44 78 	cmpl	$0x78, 0x44(%rcx)
0000000100002749	0f 85 20 00 00 00 	jne	0x10000276f
000000010000274f	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100002753	f3 0f 10 40 08 	movss	0x8(%rax), %xmm0
0000000100002758	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000275c	f3 0f 5e 40 08 	divss	0x8(%rax), %xmm0
0000000100002761	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100002765	f3 0f 11 40 3c 	movss	%xmm0, 0x3c(%rax)
000000010000276a	e9 1b 00 00 00 	jmp	0x10000278a
000000010000276f	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100002773	f3 0f 10 40 0c 	movss	0xc(%rax), %xmm0
0000000100002778	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000277c	f3 0f 5e 40 0c 	divss	0xc(%rax), %xmm0
0000000100002781	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100002785	f3 0f 11 40 3c 	movss	%xmm0, 0x3c(%rax)
000000010000278a	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000278e	c7 40 38 01 00 00 00 	movl	$0x1, 0x38(%rax)
0000000100002795	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100002799	48 89 c7 	movq	%rax, %rdi
000000010000279c	e8 cf 80 00 00 	callq	_btree_create_leaf
00000001000027a1	48 89 45 d8 	movq	%rax, -0x28(%rbp)
00000001000027a5	48 83 f8 00 	cmpq	$0x0, %rax
00000001000027a9	0f 85 17 00 00 00 	jne	0x1000027c6
00000001000027af	48 8d 35 b1 c0 00 00 	leaq	0xc0b1(%rip), %rsi ## literal pool for: "Leaf doesnt create\n"
00000001000027b6	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000027ba	e8 41 22 00 00 	callq	_end_of_program
00000001000027bf	89 c7 	movl	%eax, %edi
00000001000027c1	e8 b4 bb 00 00 	callq	0x10000e37a ## symbol stub for: _exit
00000001000027c6	48 8d 15 53 fe ff ff 	leaq	_cmp_dist(%rip), %rdx
00000001000027cd	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000027d1	48 05 d0 2b 00 00 	addq	$0x2bd0, %rax
00000001000027d7	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
00000001000027db	48 8b 71 10 	movq	0x10(%rcx), %rsi
00000001000027df	48 89 c7 	movq	%rax, %rdi
00000001000027e2	e8 19 82 00 00 	callq	_btree_finsert_infix_data
00000001000027e7	48 83 c4 30 	addq	$0x30, %rsp
00000001000027eb	5d 	popq	%rbp
00000001000027ec	c3 	retq
00000001000027ed	90 	nop
00000001000027ee	90 	nop
00000001000027ef	90 	nop
_direction_raycast:
00000001000027f0	55 	pushq	%rbp
00000001000027f1	48 89 e5 	movq	%rsp, %rbp
00000001000027f4	0f 57 c0 	xorps	%xmm0, %xmm0
00000001000027f7	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000027fb	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000027ff	0f 2e 47 08 	ucomiss	0x8(%rdi), %xmm0
0000000100002803	0f 86 38 00 00 00 	jbe	0x100002841
0000000100002809	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000280d	c7 40 3c ff ff ff ff 	movl	$0xffffffff, 0x3c(%rax)
0000000100002814	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002818	f3 0f 10 40 20 	movss	0x20(%rax), %xmm0
000000010000281d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002821	f3 0f 2a 48 48 	cvtsi2ssl	0x48(%rax), %xmm1
0000000100002826	f3 0f 5c c1 	subss	%xmm1, %xmm0
000000010000282a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000282e	f3 0f 59 40 2c 	mulss	0x2c(%rax), %xmm0
0000000100002833	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002837	f3 0f 11 40 34 	movss	%xmm0, 0x34(%rax)
000000010000283c	e9 34 00 00 00 	jmp	0x100002875
0000000100002841	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002845	c7 40 3c 01 00 00 00 	movl	$0x1, 0x3c(%rax)
000000010000284c	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002850	8b 48 48 	movl	0x48(%rax), %ecx
0000000100002853	83 c1 01 	addl	$0x1, %ecx
0000000100002856	f3 0f 2a c1 	cvtsi2ssl	%ecx, %xmm0
000000010000285a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000285e	f3 0f 5c 40 20 	subss	0x20(%rax), %xmm0
0000000100002863	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002867	f3 0f 59 40 2c 	mulss	0x2c(%rax), %xmm0
000000010000286c	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002870	f3 0f 11 40 34 	movss	%xmm0, 0x34(%rax)
0000000100002875	0f 57 c0 	xorps	%xmm0, %xmm0
0000000100002878	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000287c	0f 2e 40 0c 	ucomiss	0xc(%rax), %xmm0
0000000100002880	0f 86 38 00 00 00 	jbe	0x1000028be
0000000100002886	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000288a	c7 40 40 ff ff ff ff 	movl	$0xffffffff, 0x40(%rax)
0000000100002891	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002895	f3 0f 10 40 24 	movss	0x24(%rax), %xmm0
000000010000289a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000289e	f3 0f 2a 48 4c 	cvtsi2ssl	0x4c(%rax), %xmm1
00000001000028a3	f3 0f 5c c1 	subss	%xmm1, %xmm0
00000001000028a7	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000028ab	f3 0f 59 40 30 	mulss	0x30(%rax), %xmm0
00000001000028b0	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000028b4	f3 0f 11 40 38 	movss	%xmm0, 0x38(%rax)
00000001000028b9	e9 34 00 00 00 	jmp	0x1000028f2
00000001000028be	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000028c2	c7 40 40 01 00 00 00 	movl	$0x1, 0x40(%rax)
00000001000028c9	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000028cd	8b 48 4c 	movl	0x4c(%rax), %ecx
00000001000028d0	83 c1 01 	addl	$0x1, %ecx
00000001000028d3	f3 0f 2a c1 	cvtsi2ssl	%ecx, %xmm0
00000001000028d7	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000028db	f3 0f 5c 40 24 	subss	0x24(%rax), %xmm0
00000001000028e0	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000028e4	f3 0f 59 40 30 	mulss	0x30(%rax), %xmm0
00000001000028e9	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000028ed	f3 0f 11 40 38 	movss	%xmm0, 0x38(%rax)
00000001000028f2	5d 	popq	%rbp
00000001000028f3	c3 	retq
00000001000028f4	66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_init_raycast:
0000000100002900	55 	pushq	%rbp
0000000100002901	48 89 e5 	movq	%rsp, %rbp
0000000100002904	48 83 ec 40 	subq	$0x40, %rsp
0000000100002908	f2 0f 10 15 c0 c7 00 00 	movsd	0xc7c0(%rip), %xmm2
0000000100002910	0f 13 45 f8 	movlps	%xmm0, -0x8(%rbp)
0000000100002914	0f 13 4d f0 	movlps	%xmm1, -0x10(%rbp)
0000000100002918	48 89 7d e8 	movq	%rdi, -0x18(%rbp)
000000010000291c	48 89 75 e0 	movq	%rsi, -0x20(%rbp)
0000000100002920	48 8b 75 e0 	movq	-0x20(%rbp), %rsi
0000000100002924	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100002928	48 89 37 	movq	%rsi, (%rdi)
000000010000292b	f3 0f 2c 45 f8 	cvttss2si	-0x8(%rbp), %eax
0000000100002930	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100002934	89 46 48 	movl	%eax, 0x48(%rsi)
0000000100002937	f3 0f 2c 45 fc 	cvttss2si	-0x4(%rbp), %eax
000000010000293c	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100002940	89 46 4c 	movl	%eax, 0x4c(%rsi)
0000000100002943	f3 0f 10 45 f8 	movss	-0x8(%rbp), %xmm0
0000000100002948	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
000000010000294c	f3 0f 11 46 20 	movss	%xmm0, 0x20(%rsi)
0000000100002951	f3 0f 10 45 fc 	movss	-0x4(%rbp), %xmm0
0000000100002956	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
000000010000295a	f3 0f 11 46 24 	movss	%xmm0, 0x24(%rsi)
000000010000295f	f3 0f 10 45 f4 	movss	-0xc(%rbp), %xmm0
0000000100002964	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100002968	f3 0f 11 46 0c 	movss	%xmm0, 0xc(%rsi)
000000010000296d	f3 0f 10 45 f0 	movss	-0x10(%rbp), %xmm0
0000000100002972	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100002976	f3 0f 11 46 08 	movss	%xmm0, 0x8(%rsi)
000000010000297b	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
000000010000297f	f3 0f 5a 46 0c 	cvtss2sd	0xc(%rsi), %xmm0
0000000100002984	f2 0f 10 0d 4c c7 00 00 	movsd	0xc74c(%rip), %xmm1
000000010000298c	f2 0f 11 55 d8 	movsd	%xmm2, -0x28(%rbp)
0000000100002991	e8 04 bb 00 00 	callq	0x10000e49a ## symbol stub for: _pow
0000000100002996	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
000000010000299a	f3 0f 5a 4e 08 	cvtss2sd	0x8(%rsi), %xmm1
000000010000299f	f2 0f 10 15 31 c7 00 00 	movsd	0xc731(%rip), %xmm2
00000001000029a7	f2 0f 11 45 d0 	movsd	%xmm0, -0x30(%rbp)
00000001000029ac	0f 28 c1 	movaps	%xmm1, %xmm0
00000001000029af	0f 28 ca 	movaps	%xmm2, %xmm1
00000001000029b2	e8 e3 ba 00 00 	callq	0x10000e49a ## symbol stub for: _pow
00000001000029b7	f2 0f 10 4d d0 	movsd	-0x30(%rbp), %xmm1
00000001000029bc	f2 0f 5e c8 	divsd	%xmm0, %xmm1
00000001000029c0	f2 0f 10 45 d8 	movsd	-0x28(%rbp), %xmm0
00000001000029c5	f2 0f 58 c1 	addsd	%xmm1, %xmm0
00000001000029c9	f2 0f 51 c0 	sqrtsd	%xmm0, %xmm0
00000001000029cd	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
00000001000029d1	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
00000001000029d5	f3 0f 11 46 2c 	movss	%xmm0, 0x2c(%rsi)
00000001000029da	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
00000001000029de	f3 0f 5a 46 08 	cvtss2sd	0x8(%rsi), %xmm0
00000001000029e3	f2 0f 10 0d ed c6 00 00 	movsd	0xc6ed(%rip), %xmm1
00000001000029eb	e8 aa ba 00 00 	callq	0x10000e49a ## symbol stub for: _pow
00000001000029f0	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
00000001000029f4	f3 0f 5a 4e 0c 	cvtss2sd	0xc(%rsi), %xmm1
00000001000029f9	f2 0f 10 15 d7 c6 00 00 	movsd	0xc6d7(%rip), %xmm2
0000000100002a01	f2 0f 11 45 c8 	movsd	%xmm0, -0x38(%rbp)
0000000100002a06	0f 28 c1 	movaps	%xmm1, %xmm0
0000000100002a09	0f 28 ca 	movaps	%xmm2, %xmm1
0000000100002a0c	e8 89 ba 00 00 	callq	0x10000e49a ## symbol stub for: _pow
0000000100002a11	f2 0f 10 4d c8 	movsd	-0x38(%rbp), %xmm1
0000000100002a16	f2 0f 5e c8 	divsd	%xmm0, %xmm1
0000000100002a1a	f2 0f 10 45 d8 	movsd	-0x28(%rbp), %xmm0
0000000100002a1f	f2 0f 58 c1 	addsd	%xmm1, %xmm0
0000000100002a23	f2 0f 51 c0 	sqrtsd	%xmm0, %xmm0
0000000100002a27	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
0000000100002a2b	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100002a2f	f3 0f 11 46 30 	movss	%xmm0, 0x30(%rsi)
0000000100002a34	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100002a38	e8 b3 fd ff ff 	callq	_direction_raycast
0000000100002a3d	48 83 c4 40 	addq	$0x40, %rsp
0000000100002a41	5d 	popq	%rbp
0000000100002a42	c3 	retq
0000000100002a43	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_raycast_hit:
0000000100002a50	55 	pushq	%rbp
0000000100002a51	48 89 e5 	movq	%rsp, %rbp
0000000100002a54	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100002a58	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100002a5c	c7 47 28 00 00 00 00 	movl	$0x0, 0x28(%rdi)
0000000100002a63	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100002a67	c7 47 44 00 00 00 00 	movl	$0x0, 0x44(%rdi)
0000000100002a6e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002a72	83 78 28 00 	cmpl	$0x0, 0x28(%rax)
0000000100002a76	0f 95 c1 	setne	%cl
0000000100002a79	80 f1 ff 	xorb	$-0x1, %cl
0000000100002a7c	f6 c1 01 	testb	$0x1, %cl
0000000100002a7f	0f 85 05 00 00 00 	jne	0x100002a8a
0000000100002a85	e9 ea 00 00 00 	jmp	0x100002b74
0000000100002a8a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002a8e	f3 0f 10 40 34 	movss	0x34(%rax), %xmm0
0000000100002a93	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002a97	f3 0f 10 48 38 	movss	0x38(%rax), %xmm1
0000000100002a9c	0f 2e c8 	ucomiss	%xmm0, %xmm1
0000000100002a9f	0f 86 38 00 00 00 	jbe	0x100002add
0000000100002aa5	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002aa9	8b 48 3c 	movl	0x3c(%rax), %ecx
0000000100002aac	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002ab0	03 48 48 	addl	0x48(%rax), %ecx
0000000100002ab3	89 48 48 	movl	%ecx, 0x48(%rax)
0000000100002ab6	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002aba	f3 0f 10 40 2c 	movss	0x2c(%rax), %xmm0
0000000100002abf	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002ac3	f3 0f 58 40 34 	addss	0x34(%rax), %xmm0
0000000100002ac8	f3 0f 11 40 34 	movss	%xmm0, 0x34(%rax)
0000000100002acd	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002ad1	c7 40 44 78 00 00 00 	movl	$0x78, 0x44(%rax)
0000000100002ad8	e9 33 00 00 00 	jmp	0x100002b10
0000000100002add	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002ae1	8b 48 40 	movl	0x40(%rax), %ecx
0000000100002ae4	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002ae8	03 48 4c 	addl	0x4c(%rax), %ecx
0000000100002aeb	89 48 4c 	movl	%ecx, 0x4c(%rax)
0000000100002aee	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002af2	f3 0f 10 40 30 	movss	0x30(%rax), %xmm0
0000000100002af7	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002afb	f3 0f 58 40 38 	addss	0x38(%rax), %xmm0
0000000100002b00	f3 0f 11 40 38 	movss	%xmm0, 0x38(%rax)
0000000100002b05	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002b09	c7 40 44 79 00 00 00 	movl	$0x79, 0x44(%rax)
0000000100002b10	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002b14	48 63 40 48 	movslq	0x48(%rax), %rax
0000000100002b18	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100002b1c	48 63 49 4c 	movslq	0x4c(%rcx), %rcx
0000000100002b20	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002b24	48 8b 12 	movq	(%rdx), %rdx
0000000100002b27	48 8b 12 	movq	(%rdx), %rdx
0000000100002b2a	48 8b 0c ca 	movq	(%rdx,%rcx,8), %rcx
0000000100002b2e	0f be 34 01 	movsbl	(%rcx,%rax), %esi
0000000100002b32	83 fe 30 	cmpl	$0x30, %esi
0000000100002b35	0f 84 34 00 00 00 	je	0x100002b6f
0000000100002b3b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002b3f	48 63 40 48 	movslq	0x48(%rax), %rax
0000000100002b43	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100002b47	48 63 49 4c 	movslq	0x4c(%rcx), %rcx
0000000100002b4b	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002b4f	48 8b 12 	movq	(%rdx), %rdx
0000000100002b52	48 8b 12 	movq	(%rdx), %rdx
0000000100002b55	48 8b 0c ca 	movq	(%rdx,%rcx,8), %rcx
0000000100002b59	0f be 34 01 	movsbl	(%rcx,%rax), %esi
0000000100002b5d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002b61	89 70 50 	movl	%esi, 0x50(%rax)
0000000100002b64	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002b68	c7 40 28 01 00 00 00 	movl	$0x1, 0x28(%rax)
0000000100002b6f	e9 fa fe ff ff 	jmp	0x100002a6e
0000000100002b74	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002b78	8b 40 28 	movl	0x28(%rax), %eax
0000000100002b7b	5d 	popq	%rbp
0000000100002b7c	c3 	retq
0000000100002b7d	0f 1f 00 	nopl	(%rax)
_raycast_dist_wall:
0000000100002b80	55 	pushq	%rbp
0000000100002b81	48 89 e5 	movq	%rsp, %rbp
0000000100002b84	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100002b88	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100002b8c	83 7f 44 78 	cmpl	$0x78, 0x44(%rdi)
0000000100002b90	0f 85 4d 00 00 00 	jne	0x100002be3
0000000100002b96	b8 02 00 00 00 	movl	$0x2, %eax
0000000100002b9b	b9 01 00 00 00 	movl	$0x1, %ecx
0000000100002ba0	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002ba4	f3 0f 2a 42 48 	cvtsi2ssl	0x48(%rdx), %xmm0
0000000100002ba9	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002bad	f3 0f 5c 42 20 	subss	0x20(%rdx), %xmm0
0000000100002bb2	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002bb6	2b 4a 3c 	subl	0x3c(%rdx), %ecx
0000000100002bb9	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100002bbc	89 c8 	movl	%ecx, %eax
0000000100002bbe	99 	cltd
0000000100002bbf	8b 4d f4 	movl	-0xc(%rbp), %ecx
0000000100002bc2	f7 f9 	idivl	%ecx
0000000100002bc4	f3 0f 2a c8 	cvtsi2ssl	%eax, %xmm1
0000000100002bc8	f3 0f 58 c1 	addss	%xmm1, %xmm0
0000000100002bcc	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100002bd0	f3 0f 5e 46 08 	divss	0x8(%rsi), %xmm0
0000000100002bd5	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100002bd9	f3 0f 11 46 10 	movss	%xmm0, 0x10(%rsi)
0000000100002bde	e9 48 00 00 00 	jmp	0x100002c2b
0000000100002be3	b8 02 00 00 00 	movl	$0x2, %eax
0000000100002be8	b9 01 00 00 00 	movl	$0x1, %ecx
0000000100002bed	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002bf1	f3 0f 2a 42 4c 	cvtsi2ssl	0x4c(%rdx), %xmm0
0000000100002bf6	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002bfa	f3 0f 5c 42 24 	subss	0x24(%rdx), %xmm0
0000000100002bff	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002c03	2b 4a 40 	subl	0x40(%rdx), %ecx
0000000100002c06	89 45 f0 	movl	%eax, -0x10(%rbp)
0000000100002c09	89 c8 	movl	%ecx, %eax
0000000100002c0b	99 	cltd
0000000100002c0c	8b 4d f0 	movl	-0x10(%rbp), %ecx
0000000100002c0f	f7 f9 	idivl	%ecx
0000000100002c11	f3 0f 2a c8 	cvtsi2ssl	%eax, %xmm1
0000000100002c15	f3 0f 58 c1 	addss	%xmm1, %xmm0
0000000100002c19	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100002c1d	f3 0f 5e 46 0c 	divss	0xc(%rsi), %xmm0
0000000100002c22	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100002c26	f3 0f 11 46 10 	movss	%xmm0, 0x10(%rsi)
0000000100002c2b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002c2f	83 78 44 78 	cmpl	$0x78, 0x44(%rax)
0000000100002c33	0f 85 2d 00 00 00 	jne	0x100002c66
0000000100002c39	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002c3d	f3 0f 10 40 24 	movss	0x24(%rax), %xmm0
0000000100002c42	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002c46	f3 0f 10 48 10 	movss	0x10(%rax), %xmm1
0000000100002c4b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002c4f	f3 0f 59 48 0c 	mulss	0xc(%rax), %xmm1
0000000100002c54	f3 0f 58 c1 	addss	%xmm1, %xmm0
0000000100002c58	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002c5c	f3 0f 11 40 14 	movss	%xmm0, 0x14(%rax)
0000000100002c61	e9 28 00 00 00 	jmp	0x100002c8e
0000000100002c66	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002c6a	f3 0f 10 40 20 	movss	0x20(%rax), %xmm0
0000000100002c6f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002c73	f3 0f 10 48 10 	movss	0x10(%rax), %xmm1
0000000100002c78	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002c7c	f3 0f 59 48 08 	mulss	0x8(%rax), %xmm1
0000000100002c81	f3 0f 58 c1 	addss	%xmm1, %xmm0
0000000100002c85	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002c89	f3 0f 11 40 14 	movss	%xmm0, 0x14(%rax)
0000000100002c8e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002c92	f3 0f 2c 48 14 	cvttss2si	0x14(%rax), %ecx
0000000100002c97	f3 0f 2a c1 	cvtsi2ssl	%ecx, %xmm0
0000000100002c9b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002c9f	f3 0f 10 48 14 	movss	0x14(%rax), %xmm1
0000000100002ca4	f3 0f 5c c8 	subss	%xmm0, %xmm1
0000000100002ca8	f3 0f 11 48 14 	movss	%xmm1, 0x14(%rax)
0000000100002cad	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002cb1	83 78 44 78 	cmpl	$0x78, 0x44(%rax)
0000000100002cb5	0f 85 37 00 00 00 	jne	0x100002cf2
0000000100002cbb	b8 02 00 00 00 	movl	$0x2, %eax
0000000100002cc0	b9 01 00 00 00 	movl	$0x1, %ecx
0000000100002cc5	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002cc9	8b 72 48 	movl	0x48(%rdx), %esi
0000000100002ccc	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002cd0	2b 4a 3c 	subl	0x3c(%rdx), %ecx
0000000100002cd3	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100002cd6	89 c8 	movl	%ecx, %eax
0000000100002cd8	99 	cltd
0000000100002cd9	8b 4d ec 	movl	-0x14(%rbp), %ecx
0000000100002cdc	f7 f9 	idivl	%ecx
0000000100002cde	01 c6 	addl	%eax, %esi
0000000100002ce0	f3 0f 2a c6 	cvtsi2ssl	%esi, %xmm0
0000000100002ce4	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100002ce8	f3 0f 11 47 18 	movss	%xmm0, 0x18(%rdi)
0000000100002ced	e9 1b 00 00 00 	jmp	0x100002d0d
0000000100002cf2	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002cf6	f3 0f 2a 40 48 	cvtsi2ssl	0x48(%rax), %xmm0
0000000100002cfb	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002cff	f3 0f 58 40 14 	addss	0x14(%rax), %xmm0
0000000100002d04	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002d08	f3 0f 11 40 18 	movss	%xmm0, 0x18(%rax)
0000000100002d0d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002d11	83 78 44 79 	cmpl	$0x79, 0x44(%rax)
0000000100002d15	0f 85 37 00 00 00 	jne	0x100002d52
0000000100002d1b	b8 02 00 00 00 	movl	$0x2, %eax
0000000100002d20	b9 01 00 00 00 	movl	$0x1, %ecx
0000000100002d25	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002d29	8b 72 4c 	movl	0x4c(%rdx), %esi
0000000100002d2c	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100002d30	2b 4a 40 	subl	0x40(%rdx), %ecx
0000000100002d33	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100002d36	89 c8 	movl	%ecx, %eax
0000000100002d38	99 	cltd
0000000100002d39	8b 4d e8 	movl	-0x18(%rbp), %ecx
0000000100002d3c	f7 f9 	idivl	%ecx
0000000100002d3e	01 c6 	addl	%eax, %esi
0000000100002d40	f3 0f 2a c6 	cvtsi2ssl	%esi, %xmm0
0000000100002d44	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100002d48	f3 0f 11 47 1c 	movss	%xmm0, 0x1c(%rdi)
0000000100002d4d	e9 1b 00 00 00 	jmp	0x100002d6d
0000000100002d52	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002d56	f3 0f 2a 40 4c 	cvtsi2ssl	0x4c(%rax), %xmm0
0000000100002d5b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002d5f	f3 0f 58 40 14 	addss	0x14(%rax), %xmm0
0000000100002d64	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100002d68	f3 0f 11 40 1c 	movss	%xmm0, 0x1c(%rax)
0000000100002d6d	5d 	popq	%rbp
0000000100002d6e	c3 	retq
0000000100002d6f	90 	nop
_raycast:
0000000100002d70	55 	pushq	%rbp
0000000100002d71	48 89 e5 	movq	%rsp, %rbp
0000000100002d74	48 83 ec 30 	subq	$0x30, %rsp
0000000100002d78	0f 13 45 f0 	movlps	%xmm0, -0x10(%rbp)
0000000100002d7c	0f 13 4d e8 	movlps	%xmm1, -0x18(%rbp)
0000000100002d80	48 89 7d e0 	movq	%rdi, -0x20(%rbp)
0000000100002d84	48 89 75 d8 	movq	%rsi, -0x28(%rbp)
0000000100002d88	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
0000000100002d8c	f3 0f 7e 45 f0 	movq	-0x10(%rbp), %xmm0
0000000100002d91	f3 0f 7e 4d e8 	movq	-0x18(%rbp), %xmm1
0000000100002d96	e8 65 fb ff ff 	callq	_init_raycast
0000000100002d9b	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
0000000100002d9f	e8 ac fc ff ff 	callq	_raycast_hit
0000000100002da4	83 f8 00 	cmpl	$0x0, %eax
0000000100002da7	0f 85 0c 00 00 00 	jne	0x100002db9
0000000100002dad	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100002db4	e9 10 00 00 00 	jmp	0x100002dc9
0000000100002db9	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
0000000100002dbd	e8 be fd ff ff 	callq	_raycast_dist_wall
0000000100002dc2	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100002dc9	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100002dcc	48 83 c4 30 	addq	$0x30, %rsp
0000000100002dd0	5d 	popq	%rbp
0000000100002dd1	c3 	retq
0000000100002dd2	90 	nop
0000000100002dd3	90 	nop
0000000100002dd4	90 	nop
0000000100002dd5	90 	nop
0000000100002dd6	90 	nop
0000000100002dd7	90 	nop
0000000100002dd8	90 	nop
0000000100002dd9	90 	nop
0000000100002dda	90 	nop
0000000100002ddb	90 	nop
0000000100002ddc	90 	nop
0000000100002ddd	90 	nop
0000000100002dde	90 	nop
0000000100002ddf	90 	nop
_raycast_wolf_part:
0000000100002de0	55 	pushq	%rbp
0000000100002de1	48 89 e5 	movq	%rsp, %rbp
0000000100002de4	48 81 ec c0 00 00 00 	subq	$0xc0, %rsp
0000000100002deb	b8 58 00 00 00 	movl	$0x58, %eax
0000000100002df0	89 c6 	movl	%eax, %esi
0000000100002df2	48 8d 4d 88 	leaq	-0x78(%rbp), %rcx
0000000100002df6	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100002dfa	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100002dfe	48 89 7d e8 	movq	%rdi, -0x18(%rbp)
0000000100002e02	48 89 cf 	movq	%rcx, %rdi
0000000100002e05	e8 a6 1c 00 00 	callq	_ft_bzero
0000000100002e0a	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002e0e	f3 0f 10 40 10 	movss	0x10(%rax), %xmm0
0000000100002e13	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002e17	f3 0f 10 48 14 	movss	0x14(%rax), %xmm1
0000000100002e1c	0f 2e c8 	ucomiss	%xmm0, %xmm1
0000000100002e1f	0f 86 79 01 00 00 	jbe	0x100002f9e
0000000100002e25	48 8d 45 88 	leaq	-0x78(%rbp), %rax
0000000100002e29	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
0000000100002e2d	f3 0f 10 41 10 	movss	0x10(%rcx), %xmm0
0000000100002e32	f3 0f 58 c0 	addss	%xmm0, %xmm0
0000000100002e36	48 8b 09 	movq	(%rcx), %rcx
0000000100002e39	f3 0f 2a 49 78 	cvtsi2ssl	0x78(%rcx), %xmm1
0000000100002e3e	f3 0f 5e c1 	divss	%xmm1, %xmm0
0000000100002e42	f3 0f 10 0d 96 c2 00 00 	movss	0xc296(%rip), %xmm1
0000000100002e4a	f3 0f 58 c1 	addss	%xmm1, %xmm0
0000000100002e4e	f3 0f 11 45 e4 	movss	%xmm0, -0x1c(%rbp)
0000000100002e53	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
0000000100002e57	48 8b 11 	movq	(%rcx), %rdx
0000000100002e5a	48 8b 49 08 	movq	0x8(%rcx), %rcx
0000000100002e5e	48 81 c2 20 2b 00 00 	addq	$0x2b20, %rdx
0000000100002e65	f3 0f 10 01 	movss	(%rcx), %xmm0
0000000100002e69	f3 0f 10 49 04 	movss	0x4(%rcx), %xmm1
0000000100002e6e	48 89 85 70 ff ff ff 	movq	%rax, -0x90(%rbp)
0000000100002e75	48 89 95 68 ff ff ff 	movq	%rdx, -0x98(%rbp)
0000000100002e7c	e8 4f 1a 00 00 	callq	_fvector2d_construct
0000000100002e81	0f 13 45 80 	movlps	%xmm0, -0x80(%rbp)
0000000100002e85	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002e89	48 8b 40 08 	movq	0x8(%rax), %rax
0000000100002e8d	f3 0f 10 40 10 	movss	0x10(%rax), %xmm0
0000000100002e92	f3 0f 10 4d e4 	movss	-0x1c(%rbp), %xmm1
0000000100002e97	f3 0f 59 c1 	mulss	%xmm1, %xmm0
0000000100002e9b	f3 0f 10 50 08 	movss	0x8(%rax), %xmm2
0000000100002ea0	f3 0f 10 58 0c 	movss	0xc(%rax), %xmm3
0000000100002ea5	f3 0f 58 d0 	addss	%xmm0, %xmm2
0000000100002ea9	f3 0f 10 40 14 	movss	0x14(%rax), %xmm0
0000000100002eae	f3 0f 59 c1 	mulss	%xmm1, %xmm0
0000000100002eb2	f3 0f 58 d8 	addss	%xmm0, %xmm3
0000000100002eb6	0f 28 c2 	movaps	%xmm2, %xmm0
0000000100002eb9	0f 28 cb 	movaps	%xmm3, %xmm1
0000000100002ebc	e8 0f 1a 00 00 	callq	_fvector2d_construct
0000000100002ec1	0f 13 85 78 ff ff ff 	movlps	%xmm0, -0x88(%rbp)
0000000100002ec8	f3 0f 7e 4d 80 	movq	-0x80(%rbp), %xmm1
0000000100002ecd	48 8d 7d 88 	leaq	-0x78(%rbp), %rdi
0000000100002ed1	48 8b b5 68 ff ff ff 	movq	-0x98(%rbp), %rsi
0000000100002ed8	0f 29 85 50 ff ff ff 	movaps	%xmm0, -0xb0(%rbp)
0000000100002edf	0f 28 c1 	movaps	%xmm1, %xmm0
0000000100002ee2	0f 28 8d 50 ff ff ff 	movaps	-0xb0(%rbp), %xmm1
0000000100002ee9	e8 82 fe ff ff 	callq	_raycast
0000000100002eee	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
0000000100002ef2	48 8b 09 	movq	(%rcx), %rcx
0000000100002ef5	44 8b 41 70 	movl	0x70(%rcx), %r8d
0000000100002ef9	41 83 e0 02 	andl	$0x2, %r8d
0000000100002efd	41 83 f8 00 	cmpl	$0x0, %r8d
0000000100002f01	89 85 4c ff ff ff 	movl	%eax, -0xb4(%rbp)
0000000100002f07	0f 84 19 00 00 00 	je	0x100002f26
0000000100002f0d	48 8d 75 88 	leaq	-0x78(%rbp), %rsi
0000000100002f11	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002f15	48 8b 38 	movq	(%rax), %rdi
0000000100002f18	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002f1c	f3 0f 2c 50 10 	cvttss2si	0x10(%rax), %edx
0000000100002f21	e8 0a f2 ff ff 	callq	_raycast_aff
0000000100002f26	48 8d 55 88 	leaq	-0x78(%rbp), %rdx
0000000100002f2a	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002f2e	f3 0f 2c 48 10 	cvttss2si	0x10(%rax), %ecx
0000000100002f33	48 63 c1 	movslq	%ecx, %rax
0000000100002f36	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100002f3a	48 8b 36 	movq	(%rsi), %rsi
0000000100002f3d	48 8b 7d a0 	movq	-0x60(%rbp), %rdi
0000000100002f41	48 89 bc c6 f8 2b 00 00 	movq	%rdi, 0x2bf8(%rsi,%rax,8)
0000000100002f49	f3 0f 10 45 98 	movss	-0x68(%rbp), %xmm0
0000000100002f4e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002f52	f3 0f 2c 48 10 	cvttss2si	0x10(%rax), %ecx
0000000100002f57	48 63 c1 	movslq	%ecx, %rax
0000000100002f5a	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100002f5e	48 8b 36 	movq	(%rsi), %rsi
0000000100002f61	f3 0f 11 84 86 b4 04 00 00 	movss	%xmm0, 0x4b4(%rsi,%rax,4)
0000000100002f6a	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100002f6e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002f72	48 8b 30 	movq	(%rax), %rsi
0000000100002f75	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002f79	f3 0f 2c 48 10 	cvttss2si	0x10(%rax), %ecx
0000000100002f7e	e8 bd f6 ff ff 	callq	_sprite_hit
0000000100002f83	f3 0f 10 05 59 c1 00 00 	movss	0xc159(%rip), %xmm0
0000000100002f8b	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100002f8f	f3 0f 58 40 10 	addss	0x10(%rax), %xmm0
0000000100002f94	f3 0f 11 40 10 	movss	%xmm0, 0x10(%rax)
0000000100002f99	e9 6c fe ff ff 	jmp	0x100002e0a
0000000100002f9e	31 c0 	xorl	%eax, %eax
0000000100002fa0	89 c7 	movl	%eax, %edi
0000000100002fa2	e8 ff b4 00 00 	callq	0x10000e4a6 ## symbol stub for: _pthread_exit
0000000100002fa7	66 0f 1f 84 00 00 00 00 00 	nopw	(%rax,%rax)
_raycast_wolf:
0000000100002fb0	55 	pushq	%rbp
0000000100002fb1	48 89 e5 	movq	%rsp, %rbp
0000000100002fb4	48 81 ec e0 00 00 00 	subq	$0xe0, %rsp
0000000100002fbb	31 c0 	xorl	%eax, %eax
0000000100002fbd	89 c1 	movl	%eax, %ecx
0000000100002fbf	48 8b 15 5a 30 02 00 	movq	0x2305a(%rip), %rdx ## literal pool symbol address: ___stack_chk_guard
0000000100002fc6	48 8b 12 	movq	(%rdx), %rdx
0000000100002fc9	48 89 55 f8 	movq	%rdx, -0x8(%rbp)
0000000100002fcd	48 89 bd 48 ff ff ff 	movq	%rdi, -0xb8(%rbp)
0000000100002fd4	48 89 b5 40 ff ff ff 	movq	%rsi, -0xc0(%rbp)
0000000100002fdb	48 8b 95 48 ff ff ff 	movq	-0xb8(%rbp), %rdx
0000000100002fe2	48 83 c2 30 	addq	$0x30, %rdx
0000000100002fe6	48 89 d7 	movq	%rdx, %rdi
0000000100002fe9	48 89 ce 	movq	%rcx, %rsi
0000000100002fec	e8 c7 b4 00 00 	callq	0x10000e4b8 ## symbol stub for: _pthread_mutex_init
0000000100002ff1	41 b8 04 00 00 00 	movl	$0x4, %r8d
0000000100002ff7	48 8b 8d 48 ff ff ff 	movq	-0xb8(%rbp), %rcx
0000000100002ffe	44 8b 49 78 	movl	0x78(%rcx), %r9d
0000000100003002	89 85 34 ff ff ff 	movl	%eax, -0xcc(%rbp)
0000000100003008	44 89 c8 	movl	%r9d, %eax
000000010000300b	99 	cltd
000000010000300c	41 f7 f8 	idivl	%r8d
000000010000300f	89 85 38 ff ff ff 	movl	%eax, -0xc8(%rbp)
0000000100003015	c7 85 3c ff ff ff 00 00 00 00 	movl	$0x0, -0xc4(%rbp)
000000010000301f	83 bd 3c ff ff ff 04 	cmpl	$0x4, -0xc4(%rbp)
0000000100003026	0f 8d 0e 01 00 00 	jge	0x10000313a
000000010000302c	31 c0 	xorl	%eax, %eax
000000010000302e	89 c6 	movl	%eax, %esi
0000000100003030	48 8d 15 a9 fd ff ff 	leaq	_raycast_wolf_part(%rip), %rdx
0000000100003037	48 8d 8d 70 ff ff ff 	leaq	-0x90(%rbp), %rcx
000000010000303e	48 8d bd 50 ff ff ff 	leaq	-0xb0(%rbp), %rdi
0000000100003045	4c 8b 85 40 ff ff ff 	movq	-0xc0(%rbp), %r8
000000010000304c	4c 63 8d 3c ff ff ff 	movslq	-0xc4(%rbp), %r9
0000000100003053	49 c1 e1 05 	shlq	$0x5, %r9
0000000100003057	49 89 ca 	movq	%rcx, %r10
000000010000305a	4d 01 ca 	addq	%r9, %r10
000000010000305d	4d 89 42 08 	movq	%r8, 0x8(%r10)
0000000100003061	4c 8b 85 48 ff ff ff 	movq	-0xb8(%rbp), %r8
0000000100003068	4c 63 8d 3c ff ff ff 	movslq	-0xc4(%rbp), %r9
000000010000306f	49 c1 e1 05 	shlq	$0x5, %r9
0000000100003073	49 89 ca 	movq	%rcx, %r10
0000000100003076	4d 01 ca 	addq	%r9, %r10
0000000100003079	4d 89 02 	movq	%r8, (%r10)
000000010000307c	8b 85 3c ff ff ff 	movl	-0xc4(%rbp), %eax
0000000100003082	83 c0 01 	addl	$0x1, %eax
0000000100003085	4c 63 85 3c ff ff ff 	movslq	-0xc4(%rbp), %r8
000000010000308c	49 c1 e0 05 	shlq	$0x5, %r8
0000000100003090	49 89 c9 	movq	%rcx, %r9
0000000100003093	4d 01 c1 	addq	%r8, %r9
0000000100003096	41 89 41 18 	movl	%eax, 0x18(%r9)
000000010000309a	8b 85 3c ff ff ff 	movl	-0xc4(%rbp), %eax
00000001000030a0	0f af 85 38 ff ff ff 	imull	-0xc8(%rbp), %eax
00000001000030a7	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
00000001000030ab	4c 63 85 3c ff ff ff 	movslq	-0xc4(%rbp), %r8
00000001000030b2	49 c1 e0 05 	shlq	$0x5, %r8
00000001000030b6	49 89 c9 	movq	%rcx, %r9
00000001000030b9	4d 01 c1 	addq	%r8, %r9
00000001000030bc	f3 41 0f 11 41 10 	movss	%xmm0, 0x10(%r9)
00000001000030c2	4c 63 85 3c ff ff ff 	movslq	-0xc4(%rbp), %r8
00000001000030c9	49 c1 e0 05 	shlq	$0x5, %r8
00000001000030cd	49 89 c9 	movq	%rcx, %r9
00000001000030d0	4d 01 c1 	addq	%r8, %r9
00000001000030d3	f3 41 0f 10 41 10 	movss	0x10(%r9), %xmm0
00000001000030d9	f3 0f 2a 8d 38 ff ff ff 	cvtsi2ssl	-0xc8(%rbp), %xmm1
00000001000030e1	f3 0f 58 c1 	addss	%xmm1, %xmm0
00000001000030e5	4c 63 85 3c ff ff ff 	movslq	-0xc4(%rbp), %r8
00000001000030ec	49 c1 e0 05 	shlq	$0x5, %r8
00000001000030f0	49 89 c9 	movq	%rcx, %r9
00000001000030f3	4d 01 c1 	addq	%r8, %r9
00000001000030f6	f3 41 0f 11 41 14 	movss	%xmm0, 0x14(%r9)
00000001000030fc	4c 63 85 3c ff ff ff 	movslq	-0xc4(%rbp), %r8
0000000100003103	49 c1 e0 03 	shlq	$0x3, %r8
0000000100003107	4c 01 c7 	addq	%r8, %rdi
000000010000310a	4c 63 85 3c ff ff ff 	movslq	-0xc4(%rbp), %r8
0000000100003111	49 c1 e0 05 	shlq	$0x5, %r8
0000000100003115	4c 01 c1 	addq	%r8, %rcx
0000000100003118	e8 83 b3 00 00 	callq	0x10000e4a0 ## symbol stub for: _pthread_create
000000010000311d	44 8b 9d 3c ff ff ff 	movl	-0xc4(%rbp), %r11d
0000000100003124	41 83 c3 01 	addl	$0x1, %r11d
0000000100003128	44 89 9d 3c ff ff ff 	movl	%r11d, -0xc4(%rbp)
000000010000312f	89 85 30 ff ff ff 	movl	%eax, -0xd0(%rbp)
0000000100003135	e9 e5 fe ff ff 	jmp	0x10000301f
000000010000313a	c7 85 3c ff ff ff 00 00 00 00 	movl	$0x0, -0xc4(%rbp)
0000000100003144	83 bd 3c ff ff ff 04 	cmpl	$0x4, -0xc4(%rbp)
000000010000314b	0f 8d 32 00 00 00 	jge	0x100003183
0000000100003151	31 c0 	xorl	%eax, %eax
0000000100003153	89 c6 	movl	%eax, %esi
0000000100003155	48 63 8d 3c ff ff ff 	movslq	-0xc4(%rbp), %rcx
000000010000315c	48 8b bc cd 50 ff ff ff 	movq	-0xb0(%rbp,%rcx,8), %rdi
0000000100003164	e8 43 b3 00 00 	callq	0x10000e4ac ## symbol stub for: _pthread_join
0000000100003169	8b 95 3c ff ff ff 	movl	-0xc4(%rbp), %edx
000000010000316f	83 c2 01 	addl	$0x1, %edx
0000000100003172	89 95 3c ff ff ff 	movl	%edx, -0xc4(%rbp)
0000000100003178	89 85 2c ff ff ff 	movl	%eax, -0xd4(%rbp)
000000010000317e	e9 c1 ff ff ff 	jmp	0x100003144
0000000100003183	48 8b 85 48 ff ff ff 	movq	-0xb8(%rbp), %rax
000000010000318a	48 83 c0 30 	addq	$0x30, %rax
000000010000318e	48 89 c7 	movq	%rax, %rdi
0000000100003191	e8 1c b3 00 00 	callq	0x10000e4b2 ## symbol stub for: _pthread_mutex_destroy
0000000100003196	48 8b 3d 83 2e 02 00 	movq	0x22e83(%rip), %rdi ## literal pool symbol address: ___stack_chk_guard
000000010000319d	48 8b 3f 	movq	(%rdi), %rdi
00000001000031a0	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000031a4	48 39 cf 	cmpq	%rcx, %rdi
00000001000031a7	89 85 28 ff ff ff 	movl	%eax, -0xd8(%rbp)
00000001000031ad	0f 85 09 00 00 00 	jne	0x1000031bc
00000001000031b3	48 81 c4 e0 00 00 00 	addq	$0xe0, %rsp
00000001000031ba	5d 	popq	%rbp
00000001000031bb	c3 	retq
00000001000031bc	e8 a1 b1 00 00 	callq	0x10000e362 ## symbol stub for: ___stack_chk_fail
00000001000031c1	90 	nop
00000001000031c2	90 	nop
00000001000031c3	90 	nop
00000001000031c4	90 	nop
00000001000031c5	90 	nop
00000001000031c6	90 	nop
00000001000031c7	90 	nop
00000001000031c8	90 	nop
00000001000031c9	90 	nop
00000001000031ca	90 	nop
00000001000031cb	90 	nop
00000001000031cc	90 	nop
00000001000031cd	90 	nop
00000001000031ce	90 	nop
00000001000031cf	90 	nop
_free_lst_sprite:
00000001000031d0	55 	pushq	%rbp
00000001000031d1	48 89 e5 	movq	%rsp, %rbp
00000001000031d4	48 83 ec 20 	subq	$0x20, %rsp
00000001000031d8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000031dc	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000031e0	48 8b bf c8 2b 00 00 	movq	0x2bc8(%rdi), %rdi
00000001000031e7	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
00000001000031eb	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
00000001000031f0	0f 84 31 00 00 00 	je	0x100003227
00000001000031f6	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000031fa	48 8b 40 10 	movq	0x10(%rax), %rax
00000001000031fe	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100003202	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100003206	48 8b 38 	movq	(%rax), %rdi
0000000100003209	e8 78 b1 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000320e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100003212	48 89 c7 	movq	%rax, %rdi
0000000100003215	e8 6c b1 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000321a	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000321e	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100003222	e9 c4 ff ff ff 	jmp	0x1000031eb
0000000100003227	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000322b	48 c7 80 c8 2b 00 00 00 00 00 00 	movq	$0x0, 0x2bc8(%rax)
0000000100003236	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000323a	c7 80 b0 04 00 00 00 00 00 00 	movl	$0x0, 0x4b0(%rax)
0000000100003244	48 83 c4 20 	addq	$0x20, %rsp
0000000100003248	5d 	popq	%rbp
0000000100003249	c3 	retq
000000010000324a	66 0f 1f 44 00 00 	nopw	(%rax,%rax)
_free_btree_sprite:
0000000100003250	55 	pushq	%rbp
0000000100003251	48 89 e5 	movq	%rsp, %rbp
0000000100003254	48 83 ec 10 	subq	$0x10, %rsp
0000000100003258	48 8d 35 31 00 00 00 	leaq	_wolf_free_btree(%rip), %rsi
000000010000325f	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100003263	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100003267	48 8b bf d0 2b 00 00 	movq	0x2bd0(%rdi), %rdi
000000010000326e	e8 fd 76 00 00 	callq	_btree_apply_free
0000000100003273	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003277	48 c7 86 d0 2b 00 00 00 00 00 00 	movq	$0x0, 0x2bd0(%rsi)
0000000100003282	48 83 c4 10 	addq	$0x10, %rsp
0000000100003286	5d 	popq	%rbp
0000000100003287	c3 	retq
0000000100003288	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_wolf_free_btree:
0000000100003290	55 	pushq	%rbp
0000000100003291	48 89 e5 	movq	%rsp, %rbp
0000000100003294	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100003298	5d 	popq	%rbp
0000000100003299	c3 	retq
000000010000329a	66 0f 1f 44 00 00 	nopw	(%rax,%rax)
_free_env:
00000001000032a0	55 	pushq	%rbp
00000001000032a1	48 89 e5 	movq	%rsp, %rbp
00000001000032a4	48 83 ec 10 	subq	$0x10, %rsp
00000001000032a8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000032ac	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
00000001000032b3	83 7d f4 06 	cmpl	$0x6, -0xc(%rbp)
00000001000032b7	0f 8d 2c 00 00 00 	jge	0x1000032e9
00000001000032bd	48 63 45 f4 	movslq	-0xc(%rbp), %rax
00000001000032c1	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000032c5	48 81 c1 68 2b 00 00 	addq	$0x2b68, %rcx
00000001000032cc	48 c1 e0 04 	shlq	$0x4, %rax
00000001000032d0	48 01 c1 	addq	%rax, %rcx
00000001000032d3	48 89 cf 	movq	%rcx, %rdi
00000001000032d6	e8 95 1b 00 00 	callq	_ft_strdel
00000001000032db	8b 55 f4 	movl	-0xc(%rbp), %edx
00000001000032de	83 c2 01 	addl	$0x1, %edx
00000001000032e1	89 55 f4 	movl	%edx, -0xc(%rbp)
00000001000032e4	e9 ca ff ff ff 	jmp	0x1000032b3
00000001000032e9	48 83 c4 10 	addq	$0x10, %rsp
00000001000032ed	5d 	popq	%rbp
00000001000032ee	c3 	retq
00000001000032ef	90 	nop
_free_mlx:
00000001000032f0	55 	pushq	%rbp
00000001000032f1	48 89 e5 	movq	%rsp, %rbp
00000001000032f4	48 83 ec 10 	subq	$0x10, %rsp
00000001000032f8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000032fc	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
0000000100003301	0f 84 0f 00 00 00 	je	0x100003316
0000000100003307	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000330b	48 83 78 10 00 	cmpq	$0x0, 0x10(%rax)
0000000100003310	0f 85 05 00 00 00 	jne	0x10000331b
0000000100003316	e9 8a 00 00 00 	jmp	0x1000033a5
000000010000331b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000331f	48 83 38 00 	cmpq	$0x0, (%rax)
0000000100003323	0f 84 29 00 00 00 	je	0x100003352
0000000100003329	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000332d	48 83 78 10 00 	cmpq	$0x0, 0x10(%rax)
0000000100003332	0f 84 1a 00 00 00 	je	0x100003352
0000000100003338	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000333c	48 8b 38 	movq	(%rax), %rdi
000000010000333f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003343	48 8b 40 10 	movq	0x10(%rax), %rax
0000000100003347	48 8b 30 	movq	(%rax), %rsi
000000010000334a	e8 c1 ae 00 00 	callq	_mlx_destroy_image
000000010000334f	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100003352	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003356	48 83 38 00 	cmpq	$0x0, (%rax)
000000010000335a	0f 84 26 00 00 00 	je	0x100003386
0000000100003360	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003364	48 83 78 08 00 	cmpq	$0x0, 0x8(%rax)
0000000100003369	0f 84 17 00 00 00 	je	0x100003386
000000010000336f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003373	48 8b 38 	movq	(%rax), %rdi
0000000100003376	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000337a	48 8b 70 08 	movq	0x8(%rax), %rsi
000000010000337e	e8 0d a3 00 00 	callq	_mlx_destroy_window
0000000100003383	89 45 f0 	movl	%eax, -0x10(%rbp)
0000000100003386	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000338a	48 83 78 10 00 	cmpq	$0x0, 0x10(%rax)
000000010000338f	0f 84 10 00 00 00 	je	0x1000033a5
0000000100003395	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003399	48 8b 40 10 	movq	0x10(%rax), %rax
000000010000339d	48 89 c7 	movq	%rax, %rdi
00000001000033a0	e8 e1 af 00 00 	callq	0x10000e386 ## symbol stub for: _free
00000001000033a5	48 83 c4 10 	addq	$0x10, %rsp
00000001000033a9	5d 	popq	%rbp
00000001000033aa	c3 	retq
00000001000033ab	90 	nop
00000001000033ac	90 	nop
00000001000033ad	90 	nop
00000001000033ae	90 	nop
00000001000033af	90 	nop
_radar:
00000001000033b0	55 	pushq	%rbp
00000001000033b1	48 89 e5 	movq	%rsp, %rbp
00000001000033b4	48 83 ec 20 	subq	$0x20, %rsp
00000001000033b8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000033bc	48 81 c7 44 2b 00 00 	addq	$0x2b44, %rdi
00000001000033c3	48 89 7d e8 	movq	%rdi, -0x18(%rbp)
00000001000033c7	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000033cb	48 89 f8 	movq	%rdi, %rax
00000001000033ce	48 05 30 2b 00 00 	addq	$0x2b30, %rax
00000001000033d4	48 89 45 f0 	movq	%rax, -0x10(%rbp)
00000001000033d8	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000033dc	8b b7 38 2b 00 00 	movl	0x2b38(%rdi), %esi
00000001000033e2	48 89 c7 	movq	%rax, %rdi
00000001000033e5	e8 86 00 00 00 	callq	_draw_map
00000001000033ea	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000033ee	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
00000001000033f2	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000033f6	8b 50 08 	movl	0x8(%rax), %edx
00000001000033f9	e8 92 01 00 00 	callq	_draw_pos_player
00000001000033fe	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100003402	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100003406	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000340a	8b 76 08 	movl	0x8(%rsi), %esi
000000010000340d	f3 0f 7e 40 08 	movq	0x8(%rax), %xmm0
0000000100003412	ba 88 f1 70 00 	movl	$0x70f188, %edx
0000000100003417	e8 b4 02 00 00 	callq	_draw_vector_on_player
000000010000341c	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003420	48 8b 80 c8 2b 00 00 	movq	0x2bc8(%rax), %rax
0000000100003427	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000342b	48 83 7d e0 00 	cmpq	$0x0, -0x20(%rbp)
0000000100003430	0f 84 2b 00 00 00 	je	0x100003461
0000000100003436	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000343a	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000343e	48 8b 00 	movq	(%rax), %rax
0000000100003441	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003445	8b 51 08 	movl	0x8(%rcx), %edx
0000000100003448	48 89 c6 	movq	%rax, %rsi
000000010000344b	e8 50 03 00 00 	callq	_draw_sprite
0000000100003450	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100003454	48 8b 40 10 	movq	0x10(%rax), %rax
0000000100003458	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000345c	e9 ca ff ff ff 	jmp	0x10000342b
0000000100003461	48 83 c4 20 	addq	$0x20, %rsp
0000000100003465	5d 	popq	%rbp
0000000100003466	c3 	retq
0000000100003467	66 0f 1f 84 00 00 00 00 00 	nopw	(%rax,%rax)
_draw_map:
0000000100003470	55 	pushq	%rbp
0000000100003471	48 89 e5 	movq	%rsp, %rbp
0000000100003474	48 83 ec 20 	subq	$0x20, %rsp
0000000100003478	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000347c	89 75 f4 	movl	%esi, -0xc(%rbp)
000000010000347f	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100003486	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100003489	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000348d	3b 81 2c 2b 00 00 	cmpl	0x2b2c(%rcx), %eax
0000000100003493	0f 8d e2 00 00 00 	jge	0x10000357b
0000000100003499	c7 45 f0 00 00 00 00 	movl	$0x0, -0x10(%rbp)
00000001000034a0	8b 45 f0 	movl	-0x10(%rbp), %eax
00000001000034a3	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000034a7	3b 81 28 2b 00 00 	cmpl	0x2b28(%rcx), %eax
00000001000034ad	0f 8d ba 00 00 00 	jge	0x10000356d
00000001000034b3	48 63 45 f0 	movslq	-0x10(%rbp), %rax
00000001000034b7	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
00000001000034bb	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
00000001000034bf	48 8b 92 20 2b 00 00 	movq	0x2b20(%rdx), %rdx
00000001000034c6	48 8b 0c ca 	movq	(%rdx,%rcx,8), %rcx
00000001000034ca	0f be 34 01 	movsbl	(%rcx,%rax), %esi
00000001000034ce	83 fe 30 	cmpl	$0x30, %esi
00000001000034d1	0f 84 88 00 00 00 	je	0x10000355f
00000001000034d7	8b 45 f0 	movl	-0x10(%rbp), %eax
00000001000034da	0f af 45 f4 	imull	-0xc(%rbp), %eax
00000001000034de	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000034e2	89 41 1c 	movl	%eax, 0x1c(%rcx)
00000001000034e5	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000034e9	8b 41 1c 	movl	0x1c(%rcx), %eax
00000001000034ec	03 45 f4 	addl	-0xc(%rbp), %eax
00000001000034ef	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000034f3	89 41 20 	movl	%eax, 0x20(%rcx)
00000001000034f6	8b 45 ec 	movl	-0x14(%rbp), %eax
00000001000034f9	0f af 45 f4 	imull	-0xc(%rbp), %eax
00000001000034fd	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003501	89 41 24 	movl	%eax, 0x24(%rcx)
0000000100003504	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003508	8b 41 24 	movl	0x24(%rcx), %eax
000000010000350b	03 45 f4 	addl	-0xc(%rbp), %eax
000000010000350e	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003512	89 41 28 	movl	%eax, 0x28(%rcx)
0000000100003515	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003519	8b 41 1c 	movl	0x1c(%rcx), %eax
000000010000351c	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003520	3b 41 78 	cmpl	0x78(%rcx), %eax
0000000100003523	0f 8d 31 00 00 00 	jge	0x10000355a
0000000100003529	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000352d	8b 48 24 	movl	0x24(%rax), %ecx
0000000100003530	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003534	3b 48 74 	cmpl	0x74(%rax), %ecx
0000000100003537	0f 8d 1d 00 00 00 	jge	0x10000355a
000000010000353d	ba 00 00 8b 00 	movl	$0x8b0000, %edx
0000000100003542	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003546	48 8b 78 10 	movq	0x10(%rax), %rdi
000000010000354a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000354e	48 83 c0 1c 	addq	$0x1c, %rax
0000000100003552	48 89 c6 	movq	%rax, %rsi
0000000100003555	e8 76 7a 00 00 	callq	_mlxji_draw_case
000000010000355a	e9 00 00 00 00 	jmp	0x10000355f
000000010000355f	8b 45 f0 	movl	-0x10(%rbp), %eax
0000000100003562	83 c0 01 	addl	$0x1, %eax
0000000100003565	89 45 f0 	movl	%eax, -0x10(%rbp)
0000000100003568	e9 33 ff ff ff 	jmp	0x1000034a0
000000010000356d	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100003570	83 c0 01 	addl	$0x1, %eax
0000000100003573	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100003576	e9 0b ff ff ff 	jmp	0x100003486
000000010000357b	48 83 c4 20 	addq	$0x20, %rsp
000000010000357f	5d 	popq	%rbp
0000000100003580	c3 	retq
0000000100003581	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_draw_pos_player:
0000000100003590	55 	pushq	%rbp
0000000100003591	48 89 e5 	movq	%rsp, %rbp
0000000100003594	48 83 ec 20 	subq	$0x20, %rsp
0000000100003598	b8 ff bf 00 00 	movl	$0xbfff, %eax
000000010000359d	b9 05 00 00 00 	movl	$0x5, %ecx
00000001000035a2	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000035a6	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000035aa	89 55 ec 	movl	%edx, -0x14(%rbp)
00000001000035ad	8b 55 ec 	movl	-0x14(%rbp), %edx
00000001000035b0	89 45 e0 	movl	%eax, -0x20(%rbp)
00000001000035b3	89 d0 	movl	%edx, %eax
00000001000035b5	99 	cltd
00000001000035b6	f7 f9 	idivl	%ecx
00000001000035b8	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
00000001000035bc	f3 0f 11 45 e4 	movss	%xmm0, -0x1c(%rbp)
00000001000035c1	f3 0f 2a 45 ec 	cvtsi2ssl	-0x14(%rbp), %xmm0
00000001000035c6	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000035ca	f3 0f 10 0e 	movss	(%rsi), %xmm1
00000001000035ce	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000035d2	f3 0f 2c 06 	cvttss2si	(%rsi), %eax
00000001000035d6	f3 0f 2a d0 	cvtsi2ssl	%eax, %xmm2
00000001000035da	f3 0f 5c ca 	subss	%xmm2, %xmm1
00000001000035de	f3 0f 59 c1 	mulss	%xmm1, %xmm0
00000001000035e2	f3 0f 2c c0 	cvttss2si	%xmm0, %eax
00000001000035e6	89 45 e8 	movl	%eax, -0x18(%rbp)
00000001000035e9	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000035ed	f3 0f 2c 06 	cvttss2si	(%rsi), %eax
00000001000035f1	0f af 45 ec 	imull	-0x14(%rbp), %eax
00000001000035f5	03 45 e8 	addl	-0x18(%rbp), %eax
00000001000035f8	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
00000001000035fc	f3 0f 5c 45 e4 	subss	-0x1c(%rbp), %xmm0
0000000100003601	f3 0f 2c c0 	cvttss2si	%xmm0, %eax
0000000100003605	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003609	89 46 1c 	movl	%eax, 0x1c(%rsi)
000000010000360c	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003610	f3 0f 2c 06 	cvttss2si	(%rsi), %eax
0000000100003614	0f af 45 ec 	imull	-0x14(%rbp), %eax
0000000100003618	03 45 e8 	addl	-0x18(%rbp), %eax
000000010000361b	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
000000010000361f	f3 0f 58 45 e4 	addss	-0x1c(%rbp), %xmm0
0000000100003624	f3 0f 2c c0 	cvttss2si	%xmm0, %eax
0000000100003628	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
000000010000362c	89 46 20 	movl	%eax, 0x20(%rsi)
000000010000362f	f3 0f 2a 45 ec 	cvtsi2ssl	-0x14(%rbp), %xmm0
0000000100003634	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003638	f3 0f 10 4e 04 	movss	0x4(%rsi), %xmm1
000000010000363d	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003641	f3 0f 2c 46 04 	cvttss2si	0x4(%rsi), %eax
0000000100003646	f3 0f 2a d0 	cvtsi2ssl	%eax, %xmm2
000000010000364a	f3 0f 5c ca 	subss	%xmm2, %xmm1
000000010000364e	f3 0f 59 c1 	mulss	%xmm1, %xmm0
0000000100003652	f3 0f 2c c0 	cvttss2si	%xmm0, %eax
0000000100003656	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100003659	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000365d	f3 0f 2c 46 04 	cvttss2si	0x4(%rsi), %eax
0000000100003662	0f af 45 ec 	imull	-0x14(%rbp), %eax
0000000100003666	03 45 e8 	addl	-0x18(%rbp), %eax
0000000100003669	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
000000010000366d	f3 0f 5c 45 e4 	subss	-0x1c(%rbp), %xmm0
0000000100003672	f3 0f 2c c0 	cvttss2si	%xmm0, %eax
0000000100003676	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
000000010000367a	89 46 24 	movl	%eax, 0x24(%rsi)
000000010000367d	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003681	f3 0f 2c 46 04 	cvttss2si	0x4(%rsi), %eax
0000000100003686	0f af 45 ec 	imull	-0x14(%rbp), %eax
000000010000368a	03 45 e8 	addl	-0x18(%rbp), %eax
000000010000368d	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
0000000100003691	f3 0f 58 45 e4 	addss	-0x1c(%rbp), %xmm0
0000000100003696	f3 0f 2c c0 	cvttss2si	%xmm0, %eax
000000010000369a	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
000000010000369e	89 46 28 	movl	%eax, 0x28(%rsi)
00000001000036a1	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000036a5	48 8b 7e 10 	movq	0x10(%rsi), %rdi
00000001000036a9	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000036ad	48 83 c6 1c 	addq	$0x1c, %rsi
00000001000036b1	8b 45 e0 	movl	-0x20(%rbp), %eax
00000001000036b4	89 c2 	movl	%eax, %edx
00000001000036b6	e8 15 79 00 00 	callq	_mlxji_draw_case
00000001000036bb	48 83 c4 20 	addq	$0x20, %rsp
00000001000036bf	5d 	popq	%rbp
00000001000036c0	c3 	retq
00000001000036c1	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_draw_vector_on_player:
00000001000036d0	55 	pushq	%rbp
00000001000036d1	48 89 e5 	movq	%rsp, %rbp
00000001000036d4	48 83 ec 20 	subq	$0x20, %rsp
00000001000036d8	0f 13 45 f8 	movlps	%xmm0, -0x8(%rbp)
00000001000036dc	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
00000001000036e0	89 75 ec 	movl	%esi, -0x14(%rbp)
00000001000036e3	89 55 e8 	movl	%edx, -0x18(%rbp)
00000001000036e6	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000036ea	f3 0f 10 87 44 2b 00 00 	movss	0x2b44(%rdi), %xmm0
00000001000036f2	f3 0f 2a 4d ec 	cvtsi2ssl	-0x14(%rbp), %xmm1
00000001000036f7	f3 0f 59 c1 	mulss	%xmm1, %xmm0
00000001000036fb	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
00000001000036ff	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100003703	89 57 1c 	movl	%edx, 0x1c(%rdi)
0000000100003706	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000370a	f3 0f 10 87 48 2b 00 00 	movss	0x2b48(%rdi), %xmm0
0000000100003712	f3 0f 2a 4d ec 	cvtsi2ssl	-0x14(%rbp), %xmm1
0000000100003717	f3 0f 59 c1 	mulss	%xmm1, %xmm0
000000010000371b	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
000000010000371f	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100003723	89 57 24 	movl	%edx, 0x24(%rdi)
0000000100003726	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000372a	f3 0f 10 87 44 2b 00 00 	movss	0x2b44(%rdi), %xmm0
0000000100003732	f3 0f 58 45 f8 	addss	-0x8(%rbp), %xmm0
0000000100003737	f3 0f 2a 4d ec 	cvtsi2ssl	-0x14(%rbp), %xmm1
000000010000373c	f3 0f 59 c1 	mulss	%xmm1, %xmm0
0000000100003740	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
0000000100003744	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100003748	89 57 20 	movl	%edx, 0x20(%rdi)
000000010000374b	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000374f	f3 0f 10 87 48 2b 00 00 	movss	0x2b48(%rdi), %xmm0
0000000100003757	f3 0f 58 45 fc 	addss	-0x4(%rbp), %xmm0
000000010000375c	f3 0f 2a 4d ec 	cvtsi2ssl	-0x14(%rbp), %xmm1
0000000100003761	f3 0f 59 c1 	mulss	%xmm1, %xmm0
0000000100003765	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
0000000100003769	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000376d	89 57 28 	movl	%edx, 0x28(%rdi)
0000000100003770	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100003774	48 8b 7f 10 	movq	0x10(%rdi), %rdi
0000000100003778	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000377c	48 83 c0 1c 	addq	$0x1c, %rax
0000000100003780	8b 55 e8 	movl	-0x18(%rbp), %edx
0000000100003783	48 89 c6 	movq	%rax, %rsi
0000000100003786	e8 b5 73 00 00 	callq	_mlxji_draw_line
000000010000378b	89 45 e4 	movl	%eax, -0x1c(%rbp)
000000010000378e	48 83 c4 20 	addq	$0x20, %rsp
0000000100003792	5d 	popq	%rbp
0000000100003793	c3 	retq
0000000100003794	66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_draw_sprite:
00000001000037a0	55 	pushq	%rbp
00000001000037a1	48 89 e5 	movq	%rsp, %rbp
00000001000037a4	48 83 ec 20 	subq	$0x20, %rsp
00000001000037a8	b8 9f a2 ff 00 	movl	$0xffa29f, %eax
00000001000037ad	f3 0f 10 05 2f b9 00 00 	movss	0xb92f(%rip), %xmm0
00000001000037b5	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000037b9	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000037bd	89 55 ec 	movl	%edx, -0x14(%rbp)
00000001000037c0	f3 0f 11 45 e4 	movss	%xmm0, -0x1c(%rbp)
00000001000037c5	f3 0f 2a 45 ec 	cvtsi2ssl	-0x14(%rbp), %xmm0
00000001000037ca	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000037ce	f3 0f 10 0e 	movss	(%rsi), %xmm1
00000001000037d2	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000037d6	f3 0f 2c 16 	cvttss2si	(%rsi), %edx
00000001000037da	f3 0f 2a d2 	cvtsi2ssl	%edx, %xmm2
00000001000037de	f3 0f 5c ca 	subss	%xmm2, %xmm1
00000001000037e2	f3 0f 59 c1 	mulss	%xmm1, %xmm0
00000001000037e6	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
00000001000037ea	89 55 e8 	movl	%edx, -0x18(%rbp)
00000001000037ed	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000037f1	f3 0f 2c 16 	cvttss2si	(%rsi), %edx
00000001000037f5	0f af 55 ec 	imull	-0x14(%rbp), %edx
00000001000037f9	03 55 e8 	addl	-0x18(%rbp), %edx
00000001000037fc	f3 0f 2a c2 	cvtsi2ssl	%edx, %xmm0
0000000100003800	f3 0f 5c 45 e4 	subss	-0x1c(%rbp), %xmm0
0000000100003805	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
0000000100003809	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
000000010000380d	89 56 1c 	movl	%edx, 0x1c(%rsi)
0000000100003810	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003814	f3 0f 2c 16 	cvttss2si	(%rsi), %edx
0000000100003818	0f af 55 ec 	imull	-0x14(%rbp), %edx
000000010000381c	03 55 e8 	addl	-0x18(%rbp), %edx
000000010000381f	f3 0f 2a c2 	cvtsi2ssl	%edx, %xmm0
0000000100003823	f3 0f 58 45 e4 	addss	-0x1c(%rbp), %xmm0
0000000100003828	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
000000010000382c	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003830	89 56 20 	movl	%edx, 0x20(%rsi)
0000000100003833	f3 0f 2a 45 ec 	cvtsi2ssl	-0x14(%rbp), %xmm0
0000000100003838	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000383c	f3 0f 10 4e 04 	movss	0x4(%rsi), %xmm1
0000000100003841	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003845	f3 0f 2c 56 04 	cvttss2si	0x4(%rsi), %edx
000000010000384a	f3 0f 2a d2 	cvtsi2ssl	%edx, %xmm2
000000010000384e	f3 0f 5c ca 	subss	%xmm2, %xmm1
0000000100003852	f3 0f 59 c1 	mulss	%xmm1, %xmm0
0000000100003856	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
000000010000385a	89 55 e8 	movl	%edx, -0x18(%rbp)
000000010000385d	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003861	f3 0f 2c 56 04 	cvttss2si	0x4(%rsi), %edx
0000000100003866	0f af 55 ec 	imull	-0x14(%rbp), %edx
000000010000386a	03 55 e8 	addl	-0x18(%rbp), %edx
000000010000386d	f3 0f 2a c2 	cvtsi2ssl	%edx, %xmm0
0000000100003871	f3 0f 5c 45 e4 	subss	-0x1c(%rbp), %xmm0
0000000100003876	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
000000010000387a	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
000000010000387e	89 56 24 	movl	%edx, 0x24(%rsi)
0000000100003881	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003885	f3 0f 2c 56 04 	cvttss2si	0x4(%rsi), %edx
000000010000388a	0f af 55 ec 	imull	-0x14(%rbp), %edx
000000010000388e	03 55 e8 	addl	-0x18(%rbp), %edx
0000000100003891	f3 0f 2a c2 	cvtsi2ssl	%edx, %xmm0
0000000100003895	f3 0f 58 45 e4 	addss	-0x1c(%rbp), %xmm0
000000010000389a	f3 0f 2c d0 	cvttss2si	%xmm0, %edx
000000010000389e	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000038a2	89 56 28 	movl	%edx, 0x28(%rsi)
00000001000038a5	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000038a9	48 8b 7e 10 	movq	0x10(%rsi), %rdi
00000001000038ad	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000038b1	48 83 c6 1c 	addq	$0x1c, %rsi
00000001000038b5	89 c2 	movl	%eax, %edx
00000001000038b7	e8 14 77 00 00 	callq	_mlxji_draw_case
00000001000038bc	48 83 c4 20 	addq	$0x20, %rsp
00000001000038c0	5d 	popq	%rbp
00000001000038c1	c3 	retq
00000001000038c2	90 	nop
00000001000038c3	90 	nop
00000001000038c4	90 	nop
00000001000038c5	90 	nop
00000001000038c6	90 	nop
00000001000038c7	90 	nop
00000001000038c8	90 	nop
00000001000038c9	90 	nop
00000001000038ca	90 	nop
00000001000038cb	90 	nop
00000001000038cc	90 	nop
00000001000038cd	90 	nop
00000001000038ce	90 	nop
00000001000038cf	90 	nop
_move_player:
00000001000038d0	55 	pushq	%rbp
00000001000038d1	48 89 e5 	movq	%rsp, %rbp
00000001000038d4	48 83 ec 30 	subq	$0x30, %rsp
00000001000038d8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000038dc	89 75 f4 	movl	%esi, -0xc(%rbp)
00000001000038df	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000038e3	f3 0f 5a 87 44 2b 00 00 	cvtss2sd	0x2b44(%rdi), %xmm0
00000001000038eb	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000038ef	f3 0f 10 8f 60 2b 00 00 	movss	0x2b60(%rdi), %xmm1
00000001000038f7	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000038fb	f3 0f 59 8f 18 2b 00 00 	mulss	0x2b18(%rdi), %xmm1
0000000100003903	f3 0f 5a c9 	cvtss2sd	%xmm1, %xmm1
0000000100003907	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000390b	f3 0f 5a 97 5c 2b 00 00 	cvtss2sd	0x2b5c(%rdi), %xmm2
0000000100003913	f2 0f 11 45 e8 	movsd	%xmm0, -0x18(%rbp)
0000000100003918	0f 28 c2 	movaps	%xmm2, %xmm0
000000010000391b	f2 0f 11 4d e0 	movsd	%xmm1, -0x20(%rbp)
0000000100003920	e8 4f aa 00 00 	callq	0x10000e374 ## symbol stub for: _cos
0000000100003925	f2 0f 10 4d e0 	movsd	-0x20(%rbp), %xmm1
000000010000392a	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
000000010000392e	f2 0f 2a 45 f4 	cvtsi2sdl	-0xc(%rbp), %xmm0
0000000100003933	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
0000000100003937	f2 0f 10 45 e8 	movsd	-0x18(%rbp), %xmm0
000000010000393c	f2 0f 58 c1 	addsd	%xmm1, %xmm0
0000000100003940	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
0000000100003944	f3 0f 11 45 f0 	movss	%xmm0, -0x10(%rbp)
0000000100003949	f3 0f 2c 75 f0 	cvttss2si	-0x10(%rbp), %esi
000000010000394e	48 63 fe 	movslq	%esi, %rdi
0000000100003951	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003955	f3 0f 2c b0 48 2b 00 00 	cvttss2si	0x2b48(%rax), %esi
000000010000395d	48 63 c6 	movslq	%esi, %rax
0000000100003960	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003964	48 8b 89 20 2b 00 00 	movq	0x2b20(%rcx), %rcx
000000010000396b	48 8b 04 c1 	movq	(%rcx,%rax,8), %rax
000000010000396f	0f be 34 38 	movsbl	(%rax,%rdi), %esi
0000000100003973	83 fe 30 	cmpl	$0x30, %esi
0000000100003976	0f 85 11 00 00 00 	jne	0x10000398d
000000010000397c	f3 0f 10 45 f0 	movss	-0x10(%rbp), %xmm0
0000000100003981	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003985	f3 0f 11 80 44 2b 00 00 	movss	%xmm0, 0x2b44(%rax)
000000010000398d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003991	f3 0f 5a 80 48 2b 00 00 	cvtss2sd	0x2b48(%rax), %xmm0
0000000100003999	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000399d	f3 0f 10 88 60 2b 00 00 	movss	0x2b60(%rax), %xmm1
00000001000039a5	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000039a9	f3 0f 59 88 18 2b 00 00 	mulss	0x2b18(%rax), %xmm1
00000001000039b1	f3 0f 5a c9 	cvtss2sd	%xmm1, %xmm1
00000001000039b5	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000039b9	f3 0f 5a 90 5c 2b 00 00 	cvtss2sd	0x2b5c(%rax), %xmm2
00000001000039c1	f2 0f 11 45 d8 	movsd	%xmm0, -0x28(%rbp)
00000001000039c6	0f 28 c2 	movaps	%xmm2, %xmm0
00000001000039c9	f2 0f 11 4d d0 	movsd	%xmm1, -0x30(%rbp)
00000001000039ce	e8 fd aa 00 00 	callq	0x10000e4d0 ## symbol stub for: _sin
00000001000039d3	f2 0f 10 4d d0 	movsd	-0x30(%rbp), %xmm1
00000001000039d8	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
00000001000039dc	f2 0f 2a 45 f4 	cvtsi2sdl	-0xc(%rbp), %xmm0
00000001000039e1	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
00000001000039e5	f2 0f 10 45 d8 	movsd	-0x28(%rbp), %xmm0
00000001000039ea	f2 0f 58 c1 	addsd	%xmm1, %xmm0
00000001000039ee	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
00000001000039f2	f3 0f 11 45 f0 	movss	%xmm0, -0x10(%rbp)
00000001000039f7	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000039fb	f3 0f 2c 88 44 2b 00 00 	cvttss2si	0x2b44(%rax), %ecx
0000000100003a03	48 63 c1 	movslq	%ecx, %rax
0000000100003a06	f3 0f 2c 4d f0 	cvttss2si	-0x10(%rbp), %ecx
0000000100003a0b	48 63 d1 	movslq	%ecx, %rdx
0000000100003a0e	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003a12	48 8b b6 20 2b 00 00 	movq	0x2b20(%rsi), %rsi
0000000100003a19	48 8b 14 d6 	movq	(%rsi,%rdx,8), %rdx
0000000100003a1d	0f be 0c 02 	movsbl	(%rdx,%rax), %ecx
0000000100003a21	83 f9 30 	cmpl	$0x30, %ecx
0000000100003a24	0f 85 11 00 00 00 	jne	0x100003a3b
0000000100003a2a	f3 0f 10 45 f0 	movss	-0x10(%rbp), %xmm0
0000000100003a2f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003a33	f3 0f 11 80 48 2b 00 00 	movss	%xmm0, 0x2b48(%rax)
0000000100003a3b	48 83 c4 30 	addq	$0x30, %rsp
0000000100003a3f	5d 	popq	%rbp
0000000100003a40	c3 	retq
0000000100003a41	90 	nop
0000000100003a42	90 	nop
0000000100003a43	90 	nop
0000000100003a44	90 	nop
0000000100003a45	90 	nop
0000000100003a46	90 	nop
0000000100003a47	90 	nop
0000000100003a48	90 	nop
0000000100003a49	90 	nop
0000000100003a4a	90 	nop
0000000100003a4b	90 	nop
0000000100003a4c	90 	nop
0000000100003a4d	90 	nop
0000000100003a4e	90 	nop
0000000100003a4f	90 	nop
_ft_max:
0000000100003a50	55 	pushq	%rbp
0000000100003a51	48 89 e5 	movq	%rsp, %rbp
0000000100003a54	89 7d f8 	movl	%edi, -0x8(%rbp)
0000000100003a57	89 75 f4 	movl	%esi, -0xc(%rbp)
0000000100003a5a	8b 75 f8 	movl	-0x8(%rbp), %esi
0000000100003a5d	3b 75 f4 	cmpl	-0xc(%rbp), %esi
0000000100003a60	0f 8e 0b 00 00 00 	jle	0x100003a71
0000000100003a66	8b 45 f8 	movl	-0x8(%rbp), %eax
0000000100003a69	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100003a6c	e9 06 00 00 00 	jmp	0x100003a77
0000000100003a71	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100003a74	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100003a77	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100003a7a	5d 	popq	%rbp
0000000100003a7b	c3 	retq
0000000100003a7c	0f 1f 40 00 	nopl	(%rax)
_ft_min:
0000000100003a80	55 	pushq	%rbp
0000000100003a81	48 89 e5 	movq	%rsp, %rbp
0000000100003a84	89 7d f8 	movl	%edi, -0x8(%rbp)
0000000100003a87	89 75 f4 	movl	%esi, -0xc(%rbp)
0000000100003a8a	8b 75 f8 	movl	-0x8(%rbp), %esi
0000000100003a8d	3b 75 f4 	cmpl	-0xc(%rbp), %esi
0000000100003a90	0f 8d 0b 00 00 00 	jge	0x100003aa1
0000000100003a96	8b 45 f8 	movl	-0x8(%rbp), %eax
0000000100003a99	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100003a9c	e9 06 00 00 00 	jmp	0x100003aa7
0000000100003aa1	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100003aa4	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100003aa7	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100003aaa	5d 	popq	%rbp
0000000100003aab	c3 	retq
0000000100003aac	90 	nop
0000000100003aad	90 	nop
0000000100003aae	90 	nop
0000000100003aaf	90 	nop
_init_env:
0000000100003ab0	55 	pushq	%rbp
0000000100003ab1	48 89 e5 	movq	%rsp, %rbp
0000000100003ab4	48 83 ec 10 	subq	$0x10, %rsp
0000000100003ab8	b8 d8 51 00 00 	movl	$0x51d8, %eax
0000000100003abd	89 c6 	movl	%eax, %esi
0000000100003abf	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100003ac3	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100003ac7	e8 e4 0f 00 00 	callq	_ft_bzero
0000000100003acc	f3 0f 10 05 14 b6 00 00 	movss	0xb614(%rip), %xmm0
0000000100003ad4	b8 02 00 00 00 	movl	$0x2, %eax
0000000100003ad9	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003add	c7 46 74 d0 02 00 00 	movl	$0x2d0, 0x74(%rsi)
0000000100003ae4	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003ae8	c7 46 78 b0 04 00 00 	movl	$0x4b0, 0x78(%rsi)
0000000100003aef	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003af3	8b 4e 74 	movl	0x74(%rsi), %ecx
0000000100003af6	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003afa	89 8e c8 51 00 00 	movl	%ecx, 0x51c8(%rsi)
0000000100003b00	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003b04	8b 4e 74 	movl	0x74(%rsi), %ecx
0000000100003b07	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100003b0a	89 c8 	movl	%ecx, %eax
0000000100003b0c	99 	cltd
0000000100003b0d	8b 4d f4 	movl	-0xc(%rbp), %ecx
0000000100003b10	f7 f9 	idivl	%ecx
0000000100003b12	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003b16	89 86 cc 51 00 00 	movl	%eax, 0x51cc(%rsi)
0000000100003b1c	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003b20	8b 46 70 	movl	0x70(%rsi), %eax
0000000100003b23	83 c8 02 	orl	$0x2, %eax
0000000100003b26	89 46 70 	movl	%eax, 0x70(%rsi)
0000000100003b29	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003b2d	f3 0f 11 86 18 2b 00 00 	movss	%xmm0, 0x2b18(%rsi)
0000000100003b35	48 83 c4 10 	addq	$0x10, %rsp
0000000100003b39	5d 	popq	%rbp
0000000100003b3a	c3 	retq
0000000100003b3b	0f 1f 44 00 00 	nopl	(%rax,%rax)
_init_var:
0000000100003b40	55 	pushq	%rbp
0000000100003b41	48 89 e5 	movq	%rsp, %rbp
0000000100003b44	48 83 ec 10 	subq	$0x10, %rsp
0000000100003b48	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100003b4c	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100003b50	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003b54	48 05 44 2b 00 00 	addq	$0x2b44, %rax
0000000100003b5a	48 89 c6 	movq	%rax, %rsi
0000000100003b5d	e8 2e 00 00 00 	callq	_init_player
0000000100003b62	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100003b66	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003b6a	48 05 30 2b 00 00 	addq	$0x2b30, %rax
0000000100003b70	48 89 c6 	movq	%rax, %rsi
0000000100003b73	e8 38 01 00 00 	callq	_init_radar
0000000100003b78	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100003b7c	e8 1f 02 00 00 	callq	_init_mlx
0000000100003b81	48 83 c4 10 	addq	$0x10, %rsp
0000000100003b85	5d 	popq	%rbp
0000000100003b86	c3 	retq
0000000100003b87	66 0f 1f 84 00 00 00 00 00 	nopw	(%rax,%rax)
_init_player:
0000000100003b90	55 	pushq	%rbp
0000000100003b91	48 89 e5 	movq	%rsp, %rbp
0000000100003b94	f3 0f 10 05 50 b5 00 00 	movss	0xb550(%rip), %xmm0
0000000100003b9c	f3 0f 10 0d 40 b5 00 00 	movss	0xb540(%rip), %xmm1
0000000100003ba4	f3 0f 10 15 44 b5 00 00 	movss	0xb544(%rip), %xmm2
0000000100003bac	f3 0f 10 1d ec b4 00 00 	movss	0xb4ec(%rip), %xmm3
0000000100003bb4	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100003bb8	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100003bbc	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003bc0	f3 0f 11 5e 1c 	movss	%xmm3, 0x1c(%rsi)
0000000100003bc5	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003bc9	f3 0f 11 56 20 	movss	%xmm2, 0x20(%rsi)
0000000100003bce	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003bd2	f3 0f 11 4e 08 	movss	%xmm1, 0x8(%rsi)
0000000100003bd7	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003bdb	f3 0f 11 46 14 	movss	%xmm0, 0x14(%rsi)
0000000100003be0	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100003be7	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100003bea	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003bee	3b 81 2c 2b 00 00 	cmpl	0x2b2c(%rcx), %eax
0000000100003bf4	0f 8d ad 00 00 00 	jge	0x100003ca7
0000000100003bfa	c7 45 e8 00 00 00 00 	movl	$0x0, -0x18(%rbp)
0000000100003c01	8b 45 e8 	movl	-0x18(%rbp), %eax
0000000100003c04	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003c08	3b 81 28 2b 00 00 	cmpl	0x2b28(%rcx), %eax
0000000100003c0e	0f 8d 85 00 00 00 	jge	0x100003c99
0000000100003c14	48 63 45 e8 	movslq	-0x18(%rbp), %rax
0000000100003c18	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
0000000100003c1c	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100003c20	48 8b 92 20 2b 00 00 	movq	0x2b20(%rdx), %rdx
0000000100003c27	48 8b 0c ca 	movq	(%rdx,%rcx,8), %rcx
0000000100003c2b	0f be 34 01 	movsbl	(%rcx,%rax), %esi
0000000100003c2f	83 fe 78 	cmpl	$0x78, %esi
0000000100003c32	0f 85 53 00 00 00 	jne	0x100003c8b
0000000100003c38	f2 0f 10 05 b8 b4 00 00 	movsd	0xb4b8(%rip), %xmm0
0000000100003c40	f2 0f 2a 4d e8 	cvtsi2sdl	-0x18(%rbp), %xmm1
0000000100003c45	f2 0f 58 c8 	addsd	%xmm0, %xmm1
0000000100003c49	f2 0f 5a c9 	cvtsd2ss	%xmm1, %xmm1
0000000100003c4d	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100003c51	f3 0f 11 08 	movss	%xmm1, (%rax)
0000000100003c55	f2 0f 2a 4d ec 	cvtsi2sdl	-0x14(%rbp), %xmm1
0000000100003c5a	f2 0f 58 c8 	addsd	%xmm0, %xmm1
0000000100003c5e	f2 0f 5a c1 	cvtsd2ss	%xmm1, %xmm0
0000000100003c62	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100003c66	f3 0f 11 40 04 	movss	%xmm0, 0x4(%rax)
0000000100003c6b	48 63 45 e8 	movslq	-0x18(%rbp), %rax
0000000100003c6f	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
0000000100003c73	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100003c77	48 8b 92 20 2b 00 00 	movq	0x2b20(%rdx), %rdx
0000000100003c7e	48 8b 0c ca 	movq	(%rdx,%rcx,8), %rcx
0000000100003c82	c6 04 01 30 	movb	$0x30, (%rcx,%rax)
0000000100003c86	e9 1c 00 00 00 	jmp	0x100003ca7
0000000100003c8b	8b 45 e8 	movl	-0x18(%rbp), %eax
0000000100003c8e	83 c0 01 	addl	$0x1, %eax
0000000100003c91	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100003c94	e9 68 ff ff ff 	jmp	0x100003c01
0000000100003c99	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100003c9c	83 c0 01 	addl	$0x1, %eax
0000000100003c9f	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100003ca2	e9 40 ff ff ff 	jmp	0x100003be7
0000000100003ca7	5d 	popq	%rbp
0000000100003ca8	c3 	retq
0000000100003ca9	0f 1f 80 00 00 00 00 	nopl	(%rax)
_init_radar:
0000000100003cb0	55 	pushq	%rbp
0000000100003cb1	48 89 e5 	movq	%rsp, %rbp
0000000100003cb4	48 83 ec 20 	subq	$0x20, %rsp
0000000100003cb8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100003cbc	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100003cc0	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003cc4	8b 7e 78 	movl	0x78(%rsi), %edi
0000000100003cc7	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100003ccb	8b 76 74 	movl	0x74(%rsi), %esi
0000000100003cce	e8 7d fd ff ff 	callq	_ft_max
0000000100003cd3	be 08 00 00 00 	movl	$0x8, %esi
0000000100003cd8	99 	cltd
0000000100003cd9	f7 fe 	idivl	%esi
0000000100003cdb	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003cdf	89 01 	movl	%eax, (%rcx)
0000000100003ce1	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003ce5	8b 79 78 	movl	0x78(%rcx), %edi
0000000100003ce8	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003cec	8b 71 74 	movl	0x74(%rcx), %esi
0000000100003cef	e8 8c fd ff ff 	callq	_ft_min
0000000100003cf4	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003cf8	89 41 04 	movl	%eax, 0x4(%rcx)
0000000100003cfb	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003cff	8b b9 28 2b 00 00 	movl	0x2b28(%rcx), %edi
0000000100003d05	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003d09	8b b1 2c 2b 00 00 	movl	0x2b2c(%rcx), %esi
0000000100003d0f	e8 3c fd ff ff 	callq	_ft_max
0000000100003d14	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003d18	8b 31 	movl	(%rcx), %esi
0000000100003d1a	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100003d1d	89 f0 	movl	%esi, %eax
0000000100003d1f	99 	cltd
0000000100003d20	8b 75 ec 	movl	-0x14(%rbp), %esi
0000000100003d23	f7 fe 	idivl	%esi
0000000100003d25	89 01 	movl	%eax, (%rcx)
0000000100003d27	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003d2b	8b b9 28 2b 00 00 	movl	0x2b28(%rcx), %edi
0000000100003d31	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003d35	8b b1 2c 2b 00 00 	movl	0x2b2c(%rcx), %esi
0000000100003d3b	e8 40 fd ff ff 	callq	_ft_min
0000000100003d40	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003d44	8b 71 04 	movl	0x4(%rcx), %esi
0000000100003d47	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100003d4a	89 f0 	movl	%esi, %eax
0000000100003d4c	99 	cltd
0000000100003d4d	8b 75 e8 	movl	-0x18(%rbp), %esi
0000000100003d50	f7 fe 	idivl	%esi
0000000100003d52	89 41 04 	movl	%eax, 0x4(%rcx)
0000000100003d55	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003d59	8b 01 	movl	(%rcx), %eax
0000000100003d5b	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003d5f	0f af 81 28 2b 00 00 	imull	0x2b28(%rcx), %eax
0000000100003d66	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003d6a	89 41 0c 	movl	%eax, 0xc(%rcx)
0000000100003d6d	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003d71	8b 01 	movl	(%rcx), %eax
0000000100003d73	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100003d77	0f af 81 2c 2b 00 00 	imull	0x2b2c(%rcx), %eax
0000000100003d7e	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003d82	89 41 10 	movl	%eax, 0x10(%rcx)
0000000100003d85	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003d89	8b 01 	movl	(%rcx), %eax
0000000100003d8b	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003d8f	89 41 08 	movl	%eax, 0x8(%rcx)
0000000100003d92	48 83 c4 20 	addq	$0x20, %rsp
0000000100003d96	5d 	popq	%rbp
0000000100003d97	c3 	retq
0000000100003d98	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_init_mlx:
0000000100003da0	55 	pushq	%rbp
0000000100003da1	48 89 e5 	movq	%rsp, %rbp
0000000100003da4	48 83 ec 10 	subq	$0x10, %rsp
0000000100003da8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100003dac	b0 00 	movb	$0x0, %al
0000000100003dae	e8 4d 9a 00 00 	callq	_mlx_init
0000000100003db3	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100003db7	48 89 07 	movq	%rax, (%rdi)
0000000100003dba	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003dbe	48 8b 38 	movq	(%rax), %rdi
0000000100003dc1	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003dc5	8b 70 78 	movl	0x78(%rax), %esi
0000000100003dc8	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003dcc	8b 50 74 	movl	0x74(%rax), %edx
0000000100003dcf	e8 8c 70 00 00 	callq	_mlxji_new_img
0000000100003dd4	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100003dd8	48 89 47 10 	movq	%rax, 0x10(%rdi)
0000000100003ddc	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003de0	48 83 78 10 00 	cmpq	$0x0, 0x10(%rax)
0000000100003de5	0f 85 13 00 00 00 	jne	0x100003dfe
0000000100003deb	48 8d 3d 89 aa 00 00 	leaq	0xaa89(%rip), %rdi ## literal pool for: "Img non cree\n"
0000000100003df2	e8 39 1b 00 00 	callq	_ft_ret_error
0000000100003df7	89 c7 	movl	%eax, %edi
0000000100003df9	e8 7c a5 00 00 	callq	0x10000e37a ## symbol stub for: _exit
0000000100003dfe	48 8d 0d 84 aa 00 00 	leaq	0xaa84(%rip), %rcx ## literal pool for: "Wolf3d"
0000000100003e05	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003e09	48 8b 38 	movq	(%rax), %rdi
0000000100003e0c	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003e10	8b 70 78 	movl	0x78(%rax), %esi
0000000100003e13	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003e17	8b 50 74 	movl	0x74(%rax), %edx
0000000100003e1a	e8 91 95 00 00 	callq	_mlx_new_window
0000000100003e1f	be 02 00 00 00 	movl	$0x2, %esi
0000000100003e24	ba 01 00 00 00 	movl	$0x1, %edx
0000000100003e29	48 8d 0d 70 d0 ff ff 	leaq	_event_key_on(%rip), %rcx
0000000100003e30	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100003e34	48 89 47 08 	movq	%rax, 0x8(%rdi)
0000000100003e38	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003e3c	48 8b 78 08 	movq	0x8(%rax), %rdi
0000000100003e40	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100003e44	49 89 c0 	movq	%rax, %r8
0000000100003e47	e8 64 97 00 00 	callq	_mlx_hook
0000000100003e4c	be 03 00 00 00 	movl	$0x3, %esi
0000000100003e51	ba 02 00 00 00 	movl	$0x2, %edx
0000000100003e56	48 8d 0d 53 d2 ff ff 	leaq	_event_key_off(%rip), %rcx
0000000100003e5d	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100003e61	48 8b 7f 08 	movq	0x8(%rdi), %rdi
0000000100003e65	4c 8b 45 f8 	movq	-0x8(%rbp), %r8
0000000100003e69	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100003e6c	e8 3f 97 00 00 	callq	_mlx_hook
0000000100003e71	89 45 f0 	movl	%eax, -0x10(%rbp)
0000000100003e74	48 83 c4 10 	addq	$0x10, %rsp
0000000100003e78	5d 	popq	%rbp
0000000100003e79	c3 	retq
0000000100003e7a	90 	nop
0000000100003e7b	90 	nop
0000000100003e7c	90 	nop
0000000100003e7d	90 	nop
0000000100003e7e	90 	nop
0000000100003e7f	90 	nop
_init_map:
0000000100003e80	55 	pushq	%rbp
0000000100003e81	48 89 e5 	movq	%rsp, %rbp
0000000100003e84	48 83 ec 30 	subq	$0x30, %rsp
0000000100003e88	31 c0 	xorl	%eax, %eax
0000000100003e8a	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100003e8e	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100003e92	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100003e96	89 c6 	movl	%eax, %esi
0000000100003e98	b0 00 	movb	$0x0, %al
0000000100003e9a	e8 f5 a5 00 00 	callq	0x10000e494 ## symbol stub for: _open
0000000100003e9f	89 45 e4 	movl	%eax, -0x1c(%rbp)
0000000100003ea2	48 c7 45 d8 00 00 00 00 	movq	$0x0, -0x28(%rbp)
0000000100003eaa	83 7d e4 00 	cmpl	$0x0, -0x1c(%rbp)
0000000100003eae	0f 85 14 00 00 00 	jne	0x100003ec8
0000000100003eb4	48 8d 3d d5 a9 00 00 	leaq	0xa9d5(%rip), %rdi ## literal pool for: "Erreur de fichier\n"
0000000100003ebb	e8 70 1a 00 00 	callq	_ft_ret_error
0000000100003ec0	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100003ec3	e9 f2 00 00 00 	jmp	0x100003fba
0000000100003ec8	b8 50 00 00 00 	movl	$0x50, %eax
0000000100003ecd	89 c7 	movl	%eax, %edi
0000000100003ecf	e8 ac 0e 00 00 	callq	_ft_memalloc
0000000100003ed4	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100003ed8	48 89 87 20 2b 00 00 	movq	%rax, 0x2b20(%rdi)
0000000100003edf	48 83 f8 00 	cmpq	$0x0, %rax
0000000100003ee3	0f 85 18 00 00 00 	jne	0x100003f01
0000000100003ee9	48 8d 35 b3 a9 00 00 	leaq	0xa9b3(%rip), %rsi ## literal pool for: "Malencontreuse mallocationnage\n"
0000000100003ef0	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100003ef4	e8 07 0b 00 00 	callq	_end_of_program
0000000100003ef9	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100003efc	e9 b9 00 00 00 	jmp	0x100003fba
0000000100003f01	e9 00 00 00 00 	jmp	0x100003f06
0000000100003f06	48 8d 75 d8 	leaq	-0x28(%rbp), %rsi
0000000100003f0a	8b 7d e4 	movl	-0x1c(%rbp), %edi
0000000100003f0d	e8 de 14 00 00 	callq	_get_next_line
0000000100003f12	89 45 e0 	movl	%eax, -0x20(%rbp)
0000000100003f15	83 f8 01 	cmpl	$0x1, %eax
0000000100003f18	0f 85 43 00 00 00 	jne	0x100003f61
0000000100003f1e	48 83 7d d8 00 	cmpq	$0x0, -0x28(%rbp)
0000000100003f23	0f 84 33 00 00 00 	je	0x100003f5c
0000000100003f29	48 8d 75 d8 	leaq	-0x28(%rbp), %rsi
0000000100003f2d	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100003f31	e8 9a 00 00 00 	callq	_add_line
0000000100003f36	83 f8 00 	cmpl	$0x0, %eax
0000000100003f39	0f 85 18 00 00 00 	jne	0x100003f57
0000000100003f3f	48 8d 35 7d a9 00 00 	leaq	0xa97d(%rip), %rsi ## literal pool for: "ERROR\n"
0000000100003f46	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100003f4a	e8 b1 0a 00 00 	callq	_end_of_program
0000000100003f4f	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100003f52	e9 63 00 00 00 	jmp	0x100003fba
0000000100003f57	e9 00 00 00 00 	jmp	0x100003f5c
0000000100003f5c	e9 a5 ff ff ff 	jmp	0x100003f06
0000000100003f61	83 7d e0 ff 	cmpl	$-0x1, -0x20(%rbp)
0000000100003f65	0f 85 18 00 00 00 	jne	0x100003f83
0000000100003f6b	48 8d 35 1e a9 00 00 	leaq	0xa91e(%rip), %rsi ## literal pool for: "Erreur de fichier\n"
0000000100003f72	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100003f76	e8 85 0a 00 00 	callq	_end_of_program
0000000100003f7b	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100003f7e	e9 37 00 00 00 	jmp	0x100003fba
0000000100003f83	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100003f87	e8 84 01 00 00 	callq	_verif_border
0000000100003f8c	83 f8 00 	cmpl	$0x0, %eax
0000000100003f8f	0f 84 12 00 00 00 	je	0x100003fa7
0000000100003f95	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100003f99	e8 b2 02 00 00 	callq	_verif_player
0000000100003f9e	83 f8 00 	cmpl	$0x0, %eax
0000000100003fa1	0f 85 0c 00 00 00 	jne	0x100003fb3
0000000100003fa7	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100003fae	e9 07 00 00 00 	jmp	0x100003fba
0000000100003fb3	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100003fba	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100003fbd	48 83 c4 30 	addq	$0x30, %rsp
0000000100003fc1	5d 	popq	%rbp
0000000100003fc2	c3 	retq
0000000100003fc3	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_add_line:
0000000100003fd0	55 	pushq	%rbp
0000000100003fd1	48 89 e5 	movq	%rsp, %rbp
0000000100003fd4	48 83 ec 30 	subq	$0x30, %rsp
0000000100003fd8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100003fdc	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100003fe0	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100003fe4	83 be 2c 2b 00 00 00 	cmpl	$0x0, 0x2b2c(%rsi)
0000000100003feb	0f 84 8d 00 00 00 	je	0x10000407e
0000000100003ff1	b8 0a 00 00 00 	movl	$0xa, %eax
0000000100003ff6	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100003ffa	8b 91 2c 2b 00 00 	movl	0x2b2c(%rcx), %edx
0000000100004000	89 45 e0 	movl	%eax, -0x20(%rbp)
0000000100004003	89 d0 	movl	%edx, %eax
0000000100004005	99 	cltd
0000000100004006	8b 75 e0 	movl	-0x20(%rbp), %esi
0000000100004009	f7 fe 	idivl	%esi
000000010000400b	83 fa 00 	cmpl	$0x0, %edx
000000010000400e	0f 85 6a 00 00 00 	jne	0x10000407e
0000000100004014	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100004018	48 8b 80 20 2b 00 00 	movq	0x2b20(%rax), %rax
000000010000401f	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100004023	48 63 89 2c 2b 00 00 	movslq	0x2b2c(%rcx), %rcx
000000010000402a	48 c1 e1 03 	shlq	$0x3, %rcx
000000010000402e	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100004032	48 63 92 2c 2b 00 00 	movslq	0x2b2c(%rdx), %rdx
0000000100004039	48 c1 e2 03 	shlq	$0x3, %rdx
000000010000403d	48 83 c2 50 	addq	$0x50, %rdx
0000000100004041	48 89 c7 	movq	%rax, %rdi
0000000100004044	48 89 ce 	movq	%rcx, %rsi
0000000100004047	e8 14 19 00 00 	callq	_ft_memrealloc
000000010000404c	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100004050	48 89 81 20 2b 00 00 	movq	%rax, 0x2b20(%rcx)
0000000100004057	48 83 f8 00 	cmpq	$0x0, %rax
000000010000405b	0f 85 18 00 00 00 	jne	0x100004079
0000000100004061	48 8d 35 62 a8 00 00 	leaq	0xa862(%rip), %rsi ## literal pool for: "Realloc error\n"
0000000100004068	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000406c	e8 8f 09 00 00 	callq	_end_of_program
0000000100004071	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100004074	e9 82 00 00 00 	jmp	0x1000040fb
0000000100004079	e9 00 00 00 00 	jmp	0x10000407e
000000010000407e	c7 45 e4 ff ff ff ff 	movl	$0xffffffff, -0x1c(%rbp)
0000000100004085	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100004089	48 8b 00 	movq	(%rax), %rax
000000010000408c	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100004090	48 63 89 2c 2b 00 00 	movslq	0x2b2c(%rcx), %rcx
0000000100004097	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000409b	48 8b 92 20 2b 00 00 	movq	0x2b20(%rdx), %rdx
00000001000040a2	48 89 04 ca 	movq	%rax, (%rdx,%rcx,8)
00000001000040a6	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000040aa	8b b8 28 2b 00 00 	movl	0x2b28(%rax), %edi
00000001000040b0	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000040b4	48 8b 00 	movq	(%rax), %rax
00000001000040b7	89 7d dc 	movl	%edi, -0x24(%rbp)
00000001000040ba	48 89 c7 	movq	%rax, %rdi
00000001000040bd	e8 be 0a 00 00 	callq	_ft_strlen
00000001000040c2	89 c6 	movl	%eax, %esi
00000001000040c4	8b 7d dc 	movl	-0x24(%rbp), %edi
00000001000040c7	e8 84 f9 ff ff 	callq	_ft_max
00000001000040cc	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000040d0	89 81 28 2b 00 00 	movl	%eax, 0x2b28(%rcx)
00000001000040d6	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
00000001000040da	48 c7 01 00 00 00 00 	movq	$0x0, (%rcx)
00000001000040e1	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000040e5	8b 81 2c 2b 00 00 	movl	0x2b2c(%rcx), %eax
00000001000040eb	83 c0 01 	addl	$0x1, %eax
00000001000040ee	89 81 2c 2b 00 00 	movl	%eax, 0x2b2c(%rcx)
00000001000040f4	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
00000001000040fb	8b 45 fc 	movl	-0x4(%rbp), %eax
00000001000040fe	48 83 c4 30 	addq	$0x30, %rsp
0000000100004102	5d 	popq	%rbp
0000000100004103	c3 	retq
0000000100004104	66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_verif_border:
0000000100004110	55 	pushq	%rbp
0000000100004111	48 89 e5 	movq	%rsp, %rbp
0000000100004114	48 83 ec 20 	subq	$0x20, %rsp
0000000100004118	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000411c	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100004123	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100004126	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000412a	3b 81 2c 2b 00 00 	cmpl	0x2b2c(%rcx), %eax
0000000100004130	0f 8d 75 00 00 00 	jge	0x1000041ab
0000000100004136	48 63 45 ec 	movslq	-0x14(%rbp), %rax
000000010000413a	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000413e	48 8b 89 20 2b 00 00 	movq	0x2b20(%rcx), %rcx
0000000100004145	48 8b 04 c1 	movq	(%rcx,%rax,8), %rax
0000000100004149	0f be 10 	movsbl	(%rax), %edx
000000010000414c	83 fa 31 	cmpl	$0x31, %edx
000000010000414f	0f 84 48 00 00 00 	je	0x10000419d
0000000100004155	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100004159	8b 88 28 2b 00 00 	movl	0x2b28(%rax), %ecx
000000010000415f	83 e9 01 	subl	$0x1, %ecx
0000000100004162	48 63 c1 	movslq	%ecx, %rax
0000000100004165	48 63 55 ec 	movslq	-0x14(%rbp), %rdx
0000000100004169	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000416d	48 8b b6 20 2b 00 00 	movq	0x2b20(%rsi), %rsi
0000000100004174	48 8b 14 d6 	movq	(%rsi,%rdx,8), %rdx
0000000100004178	0f be 0c 02 	movsbl	(%rdx,%rax), %ecx
000000010000417c	83 f9 00 	cmpl	$0x0, %ecx
000000010000417f	0f 84 18 00 00 00 	je	0x10000419d
0000000100004185	48 8d 35 4d a7 00 00 	leaq	0xa74d(%rip), %rsi ## literal pool for: "Petit coquin va !\n"
000000010000418c	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100004190	e8 6b 08 00 00 	callq	_end_of_program
0000000100004195	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100004198	e9 a4 00 00 00 	jmp	0x100004241
000000010000419d	8b 45 ec 	movl	-0x14(%rbp), %eax
00000001000041a0	83 c0 01 	addl	$0x1, %eax
00000001000041a3	89 45 ec 	movl	%eax, -0x14(%rbp)
00000001000041a6	e9 78 ff ff ff 	jmp	0x100004123
00000001000041ab	c7 45 e8 00 00 00 00 	movl	$0x0, -0x18(%rbp)
00000001000041b2	8b 45 e8 	movl	-0x18(%rbp), %eax
00000001000041b5	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000041b9	3b 81 28 2b 00 00 	cmpl	0x2b28(%rcx), %eax
00000001000041bf	0f 8d 75 00 00 00 	jge	0x10000423a
00000001000041c5	48 63 45 e8 	movslq	-0x18(%rbp), %rax
00000001000041c9	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000041cd	48 8b 89 20 2b 00 00 	movq	0x2b20(%rcx), %rcx
00000001000041d4	48 8b 09 	movq	(%rcx), %rcx
00000001000041d7	0f be 14 01 	movsbl	(%rcx,%rax), %edx
00000001000041db	83 fa 31 	cmpl	$0x31, %edx
00000001000041de	0f 84 48 00 00 00 	je	0x10000422c
00000001000041e4	48 63 45 e8 	movslq	-0x18(%rbp), %rax
00000001000041e8	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000041ec	8b 91 2c 2b 00 00 	movl	0x2b2c(%rcx), %edx
00000001000041f2	83 ea 01 	subl	$0x1, %edx
00000001000041f5	48 63 ca 	movslq	%edx, %rcx
00000001000041f8	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000041fc	48 8b b6 20 2b 00 00 	movq	0x2b20(%rsi), %rsi
0000000100004203	48 8b 0c ce 	movq	(%rsi,%rcx,8), %rcx
0000000100004207	0f be 14 01 	movsbl	(%rcx,%rax), %edx
000000010000420b	83 fa 00 	cmpl	$0x0, %edx
000000010000420e	0f 84 18 00 00 00 	je	0x10000422c
0000000100004214	48 8d 35 be a6 00 00 	leaq	0xa6be(%rip), %rsi ## literal pool for: "Petit coquin va !\n"
000000010000421b	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000421f	e8 dc 07 00 00 	callq	_end_of_program
0000000100004224	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100004227	e9 15 00 00 00 	jmp	0x100004241
000000010000422c	8b 45 e8 	movl	-0x18(%rbp), %eax
000000010000422f	83 c0 01 	addl	$0x1, %eax
0000000100004232	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100004235	e9 78 ff ff ff 	jmp	0x1000041b2
000000010000423a	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100004241	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100004244	48 83 c4 20 	addq	$0x20, %rsp
0000000100004248	5d 	popq	%rbp
0000000100004249	c3 	retq
000000010000424a	66 0f 1f 44 00 00 	nopw	(%rax,%rax)
_verif_player:
0000000100004250	55 	pushq	%rbp
0000000100004251	48 89 e5 	movq	%rsp, %rbp
0000000100004254	48 83 ec 20 	subq	$0x20, %rsp
0000000100004258	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000425c	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100004263	c7 45 e4 00 00 00 00 	movl	$0x0, -0x1c(%rbp)
000000010000426a	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000426d	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100004271	3b 81 2c 2b 00 00 	cmpl	0x2b2c(%rcx), %eax
0000000100004277	0f 8d ab 00 00 00 	jge	0x100004328
000000010000427d	c7 45 e8 00 00 00 00 	movl	$0x0, -0x18(%rbp)
0000000100004284	8b 45 e8 	movl	-0x18(%rbp), %eax
0000000100004287	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000428b	3b 81 28 2b 00 00 	cmpl	0x2b28(%rcx), %eax
0000000100004291	0f 8d 83 00 00 00 	jge	0x10000431a
0000000100004297	48 63 45 e8 	movslq	-0x18(%rbp), %rax
000000010000429b	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
000000010000429f	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000042a3	48 8b 92 20 2b 00 00 	movq	0x2b20(%rdx), %rdx
00000001000042aa	48 8b 0c ca 	movq	(%rdx,%rcx,8), %rcx
00000001000042ae	0f be 34 01 	movsbl	(%rcx,%rax), %esi
00000001000042b2	83 fe 78 	cmpl	$0x78, %esi
00000001000042b5	0f 85 09 00 00 00 	jne	0x1000042c4
00000001000042bb	8b 45 e4 	movl	-0x1c(%rbp), %eax
00000001000042be	83 c0 01 	addl	$0x1, %eax
00000001000042c1	89 45 e4 	movl	%eax, -0x1c(%rbp)
00000001000042c4	48 8d 3d 21 a6 00 00 	leaq	0xa621(%rip), %rdi ## literal pool for: "012345xB"
00000001000042cb	48 63 45 e8 	movslq	-0x18(%rbp), %rax
00000001000042cf	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
00000001000042d3	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000042d7	48 8b 92 20 2b 00 00 	movq	0x2b20(%rdx), %rdx
00000001000042de	48 8b 0c ca 	movq	(%rdx,%rcx,8), %rcx
00000001000042e2	0f be 34 01 	movsbl	(%rcx,%rax), %esi
00000001000042e6	e8 85 17 00 00 	callq	_ft_isin
00000001000042eb	83 f8 00 	cmpl	$0x0, %eax
00000001000042ee	0f 85 18 00 00 00 	jne	0x10000430c
00000001000042f4	48 8d 35 fa a5 00 00 	leaq	0xa5fa(%rip), %rsi ## literal pool for: "Probleme d'indication de block\n"
00000001000042fb	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000042ff	e8 fc 06 00 00 	callq	_end_of_program
0000000100004304	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100004307	e9 45 00 00 00 	jmp	0x100004351
000000010000430c	8b 45 e8 	movl	-0x18(%rbp), %eax
000000010000430f	83 c0 01 	addl	$0x1, %eax
0000000100004312	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100004315	e9 6a ff ff ff 	jmp	0x100004284
000000010000431a	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000431d	83 c0 01 	addl	$0x1, %eax
0000000100004320	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100004323	e9 42 ff ff ff 	jmp	0x10000426a
0000000100004328	83 7d e4 01 	cmpl	$0x1, -0x1c(%rbp)
000000010000432c	0f 84 18 00 00 00 	je	0x10000434a
0000000100004332	48 8d 35 dc a5 00 00 	leaq	0xa5dc(%rip), %rsi ## literal pool for: "Probleme joueur\n"
0000000100004339	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000433d	e8 be 06 00 00 	callq	_end_of_program
0000000100004342	89 45 fc 	movl	%eax, -0x4(%rbp)
0000000100004345	e9 07 00 00 00 	jmp	0x100004351
000000010000434a	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100004351	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100004354	48 83 c4 20 	addq	$0x20, %rsp
0000000100004358	5d 	popq	%rbp
0000000100004359	c3 	retq
000000010000435a	90 	nop
000000010000435b	90 	nop
000000010000435c	90 	nop
000000010000435d	90 	nop
000000010000435e	90 	nop
000000010000435f	90 	nop
_import_texture:
0000000100004360	55 	pushq	%rbp
0000000100004361	48 89 e5 	movq	%rsp, %rbp
0000000100004364	48 83 ec 20 	subq	$0x20, %rsp
0000000100004368	31 f6 	xorl	%esi, %esi
000000010000436a	48 8d 15 b5 a5 00 00 	leaq	0xa5b5(%rip), %rdx ## literal pool for: "tex/skybox"
0000000100004371	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100004375	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100004379	48 81 c7 68 2b 00 00 	addq	$0x2b68, %rdi
0000000100004380	e8 6b 01 00 00 	callq	_import_tex
0000000100004385	83 f8 00 	cmpl	$0x0, %eax
0000000100004388	0f 85 0c 00 00 00 	jne	0x10000439a
000000010000438e	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100004395	e9 43 01 00 00 	jmp	0x1000044dd
000000010000439a	be 01 00 00 00 	movl	$0x1, %esi
000000010000439f	48 8d 15 8b a5 00 00 	leaq	0xa58b(%rip), %rdx ## literal pool for: "tex/wall_herbe.img"
00000001000043a6	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000043aa	48 05 68 2b 00 00 	addq	$0x2b68, %rax
00000001000043b0	48 89 c7 	movq	%rax, %rdi
00000001000043b3	e8 38 01 00 00 	callq	_import_tex
00000001000043b8	83 f8 00 	cmpl	$0x0, %eax
00000001000043bb	0f 85 0c 00 00 00 	jne	0x1000043cd
00000001000043c1	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
00000001000043c8	e9 10 01 00 00 	jmp	0x1000044dd
00000001000043cd	be 02 00 00 00 	movl	$0x2, %esi
00000001000043d2	48 8d 15 6b a5 00 00 	leaq	0xa56b(%rip), %rdx ## literal pool for: "tex/wall.img"
00000001000043d9	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000043dd	48 05 68 2b 00 00 	addq	$0x2b68, %rax
00000001000043e3	48 89 c7 	movq	%rax, %rdi
00000001000043e6	e8 05 01 00 00 	callq	_import_tex
00000001000043eb	83 f8 00 	cmpl	$0x0, %eax
00000001000043ee	0f 85 0c 00 00 00 	jne	0x100004400
00000001000043f4	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
00000001000043fb	e9 dd 00 00 00 	jmp	0x1000044dd
0000000100004400	be 03 00 00 00 	movl	$0x3, %esi
0000000100004405	48 8d 15 45 a5 00 00 	leaq	0xa545(%rip), %rdx ## literal pool for: "tex/wall_stone.img"
000000010000440c	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100004410	48 05 68 2b 00 00 	addq	$0x2b68, %rax
0000000100004416	48 89 c7 	movq	%rax, %rdi
0000000100004419	e8 d2 00 00 00 	callq	_import_tex
000000010000441e	83 f8 00 	cmpl	$0x0, %eax
0000000100004421	0f 85 0c 00 00 00 	jne	0x100004433
0000000100004427	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
000000010000442e	e9 aa 00 00 00 	jmp	0x1000044dd
0000000100004433	be 04 00 00 00 	movl	$0x4, %esi
0000000100004438	48 8d 15 25 a5 00 00 	leaq	0xa525(%rip), %rdx ## literal pool for: "tex/wall_stone_plant.img"
000000010000443f	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100004443	48 05 68 2b 00 00 	addq	$0x2b68, %rax
0000000100004449	48 89 c7 	movq	%rax, %rdi
000000010000444c	e8 9f 00 00 00 	callq	_import_tex
0000000100004451	83 f8 00 	cmpl	$0x0, %eax
0000000100004454	0f 85 0c 00 00 00 	jne	0x100004466
000000010000445a	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100004461	e9 77 00 00 00 	jmp	0x1000044dd
0000000100004466	be 05 00 00 00 	movl	$0x5, %esi
000000010000446b	48 8d 15 0b a5 00 00 	leaq	0xa50b(%rip), %rdx ## literal pool for: "tex/wall_brick.img"
0000000100004472	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100004476	48 05 68 2b 00 00 	addq	$0x2b68, %rax
000000010000447c	48 89 c7 	movq	%rax, %rdi
000000010000447f	e8 6c 00 00 00 	callq	_import_tex
0000000100004484	83 f8 00 	cmpl	$0x0, %eax
0000000100004487	0f 85 0c 00 00 00 	jne	0x100004499
000000010000448d	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100004494	e9 44 00 00 00 	jmp	0x1000044dd
0000000100004499	31 f6 	xorl	%esi, %esi
000000010000449b	48 8d 15 ee a4 00 00 	leaq	0xa4ee(%rip), %rdx ## literal pool for: "tex/potato.img"
00000001000044a2	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000044a6	48 05 d8 2b 00 00 	addq	$0x2bd8, %rax
00000001000044ac	48 89 c7 	movq	%rax, %rdi
00000001000044af	e8 3c 00 00 00 	callq	_import_tex
00000001000044b4	be 01 00 00 00 	movl	$0x1, %esi
00000001000044b9	48 8d 15 df a4 00 00 	leaq	0xa4df(%rip), %rdx ## literal pool for: "tex/prevo.img"
00000001000044c0	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000044c4	48 81 c7 d8 2b 00 00 	addq	$0x2bd8, %rdi
00000001000044cb	89 45 ec 	movl	%eax, -0x14(%rbp)
00000001000044ce	e8 1d 00 00 00 	callq	_import_tex
00000001000044d3	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
00000001000044da	89 45 e8 	movl	%eax, -0x18(%rbp)
00000001000044dd	8b 45 fc 	movl	-0x4(%rbp), %eax
00000001000044e0	48 83 c4 20 	addq	$0x20, %rsp
00000001000044e4	5d 	popq	%rbp
00000001000044e5	c3 	retq
00000001000044e6	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_import_tex:
00000001000044f0	55 	pushq	%rbp
00000001000044f1	48 89 e5 	movq	%rsp, %rbp
00000001000044f4	48 83 ec 40 	subq	$0x40, %rsp
00000001000044f8	31 c0 	xorl	%eax, %eax
00000001000044fa	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
00000001000044fe	89 75 ec 	movl	%esi, -0x14(%rbp)
0000000100004501	48 89 55 e0 	movq	%rdx, -0x20(%rbp)
0000000100004505	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
0000000100004509	89 c6 	movl	%eax, %esi
000000010000450b	b0 00 	movb	$0x0, %al
000000010000450d	e8 82 9f 00 00 	callq	0x10000e494 ## symbol stub for: _open
0000000100004512	89 45 dc 	movl	%eax, -0x24(%rbp)
0000000100004515	83 f8 00 	cmpl	$0x0, %eax
0000000100004518	0f 85 0c 00 00 00 	jne	0x10000452a
000000010000451e	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100004525	e9 4e 01 00 00 	jmp	0x100004678
000000010000452a	b8 04 00 00 00 	movl	$0x4, %eax
000000010000452f	89 c2 	movl	%eax, %edx
0000000100004531	8b 7d dc 	movl	-0x24(%rbp), %edi
0000000100004534	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
0000000100004538	48 c1 e1 04 	shlq	$0x4, %rcx
000000010000453c	48 03 4d f0 	addq	-0x10(%rbp), %rcx
0000000100004540	48 83 c1 08 	addq	$0x8, %rcx
0000000100004544	48 89 ce 	movq	%rcx, %rsi
0000000100004547	e8 7e 9f 00 00 	callq	0x10000e4ca ## symbol stub for: _read
000000010000454c	bf 04 00 00 00 	movl	$0x4, %edi
0000000100004551	89 fa 	movl	%edi, %edx
0000000100004553	8b 7d dc 	movl	-0x24(%rbp), %edi
0000000100004556	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
000000010000455a	48 c1 e1 04 	shlq	$0x4, %rcx
000000010000455e	48 03 4d f0 	addq	-0x10(%rbp), %rcx
0000000100004562	48 83 c1 0c 	addq	$0xc, %rcx
0000000100004566	48 89 ce 	movq	%rcx, %rsi
0000000100004569	48 89 45 d0 	movq	%rax, -0x30(%rbp)
000000010000456d	e8 58 9f 00 00 	callq	0x10000e4ca ## symbol stub for: _read
0000000100004572	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
0000000100004576	48 c1 e1 04 	shlq	$0x4, %rcx
000000010000457a	48 03 4d f0 	addq	-0x10(%rbp), %rcx
000000010000457e	8b 79 08 	movl	0x8(%rcx), %edi
0000000100004581	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
0000000100004585	48 c1 e1 04 	shlq	$0x4, %rcx
0000000100004589	48 03 4d f0 	addq	-0x10(%rbp), %rcx
000000010000458d	0f af 79 0c 	imull	0xc(%rcx), %edi
0000000100004591	c1 e7 02 	shll	$0x2, %edi
0000000100004594	89 7d d8 	movl	%edi, -0x28(%rbp)
0000000100004597	83 7d ec 00 	cmpl	$0x0, -0x14(%rbp)
000000010000459b	48 89 45 c8 	movq	%rax, -0x38(%rbp)
000000010000459f	0f 84 6a 00 00 00 	je	0x10000460f
00000001000045a5	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000045a9	48 c1 e0 04 	shlq	$0x4, %rax
00000001000045ad	48 03 45 f0 	addq	-0x10(%rbp), %rax
00000001000045b1	81 78 08 78 05 00 00 	cmpl	$0x578, 0x8(%rax)
00000001000045b8	0f 8f 45 00 00 00 	jg	0x100004603
00000001000045be	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000045c2	48 c1 e0 04 	shlq	$0x4, %rax
00000001000045c6	48 03 45 f0 	addq	-0x10(%rbp), %rax
00000001000045ca	81 78 0c 78 05 00 00 	cmpl	$0x578, 0xc(%rax)
00000001000045d1	0f 8f 2c 00 00 00 	jg	0x100004603
00000001000045d7	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000045db	48 c1 e0 04 	shlq	$0x4, %rax
00000001000045df	48 03 45 f0 	addq	-0x10(%rbp), %rax
00000001000045e3	83 78 0c 00 	cmpl	$0x0, 0xc(%rax)
00000001000045e7	0f 8c 16 00 00 00 	jl	0x100004603
00000001000045ed	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000045f1	48 c1 e0 04 	shlq	$0x4, %rax
00000001000045f5	48 03 45 f0 	addq	-0x10(%rbp), %rax
00000001000045f9	83 78 08 00 	cmpl	$0x0, 0x8(%rax)
00000001000045fd	0f 8d 0c 00 00 00 	jge	0x10000460f
0000000100004603	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
000000010000460a	e9 69 00 00 00 	jmp	0x100004678
000000010000460f	48 63 7d d8 	movslq	-0x28(%rbp), %rdi
0000000100004613	e8 68 07 00 00 	callq	_ft_memalloc
0000000100004618	48 63 7d ec 	movslq	-0x14(%rbp), %rdi
000000010000461c	48 c1 e7 04 	shlq	$0x4, %rdi
0000000100004620	48 03 7d f0 	addq	-0x10(%rbp), %rdi
0000000100004624	48 89 07 	movq	%rax, (%rdi)
0000000100004627	48 83 f8 00 	cmpq	$0x0, %rax
000000010000462b	0f 85 0c 00 00 00 	jne	0x10000463d
0000000100004631	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100004638	e9 3b 00 00 00 	jmp	0x100004678
000000010000463d	8b 7d dc 	movl	-0x24(%rbp), %edi
0000000100004640	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100004644	48 c1 e0 04 	shlq	$0x4, %rax
0000000100004648	48 03 45 f0 	addq	-0x10(%rbp), %rax
000000010000464c	48 8b 30 	movq	(%rax), %rsi
000000010000464f	48 63 55 d8 	movslq	-0x28(%rbp), %rdx
0000000100004653	e8 72 9e 00 00 	callq	0x10000e4ca ## symbol stub for: _read
0000000100004658	48 63 55 d8 	movslq	-0x28(%rbp), %rdx
000000010000465c	48 39 d0 	cmpq	%rdx, %rax
000000010000465f	0f 84 0c 00 00 00 	je	0x100004671
0000000100004665	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
000000010000466c	e9 07 00 00 00 	jmp	0x100004678
0000000100004671	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100004678	8b 45 fc 	movl	-0x4(%rbp), %eax
000000010000467b	48 83 c4 40 	addq	$0x40, %rsp
000000010000467f	5d 	popq	%rbp
0000000100004680	c3 	retq
0000000100004681	90 	nop
0000000100004682	90 	nop
0000000100004683	90 	nop
0000000100004684	90 	nop
0000000100004685	90 	nop
0000000100004686	90 	nop
0000000100004687	90 	nop
0000000100004688	90 	nop
0000000100004689	90 	nop
000000010000468a	90 	nop
000000010000468b	90 	nop
000000010000468c	90 	nop
000000010000468d	90 	nop
000000010000468e	90 	nop
000000010000468f	90 	nop
_fvector2d_magnitude:
0000000100004690	55 	pushq	%rbp
0000000100004691	48 89 e5 	movq	%rsp, %rbp
0000000100004694	f3 0f 10 0d 2c aa 00 00 	movss	0xaa2c(%rip), %xmm1
000000010000469c	0f 13 45 f8 	movlps	%xmm0, -0x8(%rbp)
00000001000046a0	0f 28 c1 	movaps	%xmm1, %xmm0
00000001000046a3	f3 0f 59 45 f8 	mulss	-0x8(%rbp), %xmm0
00000001000046a8	f3 0f 5a c0 	cvtss2sd	%xmm0, %xmm0
00000001000046ac	66 0f 28 15 4c aa 00 00 	movapd	0xaa4c(%rip), %xmm2
00000001000046b4	66 0f 54 c2 	andpd	%xmm2, %xmm0
00000001000046b8	f3 0f 59 4d fc 	mulss	-0x4(%rbp), %xmm1
00000001000046bd	f3 0f 5a c9 	cvtss2sd	%xmm1, %xmm1
00000001000046c1	66 0f 28 15 37 aa 00 00 	movapd	0xaa37(%rip), %xmm2
00000001000046c9	66 0f 54 ca 	andpd	%xmm2, %xmm1
00000001000046cd	f2 0f 58 c1 	addsd	%xmm1, %xmm0
00000001000046d1	f2 0f 51 c0 	sqrtsd	%xmm0, %xmm0
00000001000046d5	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
00000001000046d9	5d 	popq	%rbp
00000001000046da	c3 	retq
00000001000046db	90 	nop
00000001000046dc	90 	nop
00000001000046dd	90 	nop
00000001000046de	90 	nop
00000001000046df	90 	nop
_fvector2d_distance:
00000001000046e0	55 	pushq	%rbp
00000001000046e1	48 89 e5 	movq	%rsp, %rbp
00000001000046e4	48 83 ec 10 	subq	$0x10, %rsp
00000001000046e8	0f 13 45 f8 	movlps	%xmm0, -0x8(%rbp)
00000001000046ec	0f 13 4d f0 	movlps	%xmm1, -0x10(%rbp)
00000001000046f0	f3 0f 10 45 f0 	movss	-0x10(%rbp), %xmm0
00000001000046f5	f3 0f 10 4d f8 	movss	-0x8(%rbp), %xmm1
00000001000046fa	f3 0f 5c c8 	subss	%xmm0, %xmm1
00000001000046fe	f3 0f 11 4d f8 	movss	%xmm1, -0x8(%rbp)
0000000100004703	f3 0f 10 45 f4 	movss	-0xc(%rbp), %xmm0
0000000100004708	f3 0f 10 4d fc 	movss	-0x4(%rbp), %xmm1
000000010000470d	f3 0f 5c c8 	subss	%xmm0, %xmm1
0000000100004711	f3 0f 11 4d fc 	movss	%xmm1, -0x4(%rbp)
0000000100004716	f3 0f 7e 45 f8 	movq	-0x8(%rbp), %xmm0
000000010000471b	e8 70 ff ff ff 	callq	_fvector2d_magnitude
0000000100004720	48 83 c4 10 	addq	$0x10, %rsp
0000000100004724	5d 	popq	%rbp
0000000100004725	c3 	retq
0000000100004726	90 	nop
0000000100004727	90 	nop
0000000100004728	90 	nop
0000000100004729	90 	nop
000000010000472a	90 	nop
000000010000472b	90 	nop
000000010000472c	90 	nop
000000010000472d	90 	nop
000000010000472e	90 	nop
000000010000472f	90 	nop
_fvector2d_normalize:
0000000100004730	55 	pushq	%rbp
0000000100004731	48 89 e5 	movq	%rsp, %rbp
0000000100004734	48 83 ec 10 	subq	$0x10, %rsp
0000000100004738	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000473c	f3 0f 7e 07 	movq	(%rdi), %xmm0
0000000100004740	e8 4b ff ff ff 	callq	_fvector2d_magnitude
0000000100004745	f3 0f 11 45 f4 	movss	%xmm0, -0xc(%rbp)
000000010000474a	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000474e	f3 0f 10 07 	movss	(%rdi), %xmm0
0000000100004752	f3 0f 5e 45 f4 	divss	-0xc(%rbp), %xmm0
0000000100004757	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000475b	f3 0f 11 07 	movss	%xmm0, (%rdi)
000000010000475f	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100004763	f3 0f 10 47 04 	movss	0x4(%rdi), %xmm0
0000000100004768	f3 0f 5e 45 f4 	divss	-0xc(%rbp), %xmm0
000000010000476d	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100004771	f3 0f 11 47 04 	movss	%xmm0, 0x4(%rdi)
0000000100004776	48 83 c4 10 	addq	$0x10, %rsp
000000010000477a	5d 	popq	%rbp
000000010000477b	c3 	retq
000000010000477c	90 	nop
000000010000477d	90 	nop
000000010000477e	90 	nop
000000010000477f	90 	nop
_fvector2d_normalized:
0000000100004780	55 	pushq	%rbp
0000000100004781	48 89 e5 	movq	%rsp, %rbp
0000000100004784	48 83 ec 20 	subq	$0x20, %rsp
0000000100004788	0f 13 45 f0 	movlps	%xmm0, -0x10(%rbp)
000000010000478c	f3 0f 10 4d f0 	movss	-0x10(%rbp), %xmm1
0000000100004791	f3 0f 11 4d e4 	movss	%xmm1, -0x1c(%rbp)
0000000100004796	e8 f5 fe ff ff 	callq	_fvector2d_magnitude
000000010000479b	f3 0f 10 4d e4 	movss	-0x1c(%rbp), %xmm1
00000001000047a0	f3 0f 5e c8 	divss	%xmm0, %xmm1
00000001000047a4	f3 0f 11 4d e8 	movss	%xmm1, -0x18(%rbp)
00000001000047a9	f3 0f 10 45 f4 	movss	-0xc(%rbp), %xmm0
00000001000047ae	f3 0f 7e 4d f0 	movq	-0x10(%rbp), %xmm1
00000001000047b3	f3 0f 11 45 e0 	movss	%xmm0, -0x20(%rbp)
00000001000047b8	0f 28 c1 	movaps	%xmm1, %xmm0
00000001000047bb	e8 d0 fe ff ff 	callq	_fvector2d_magnitude
00000001000047c0	f3 0f 10 4d e0 	movss	-0x20(%rbp), %xmm1
00000001000047c5	f3 0f 5e c8 	divss	%xmm0, %xmm1
00000001000047c9	f3 0f 11 4d ec 	movss	%xmm1, -0x14(%rbp)
00000001000047ce	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000047d2	48 89 45 f8 	movq	%rax, -0x8(%rbp)
00000001000047d6	f3 0f 7e 45 f8 	movq	-0x8(%rbp), %xmm0
00000001000047db	48 83 c4 20 	addq	$0x20, %rsp
00000001000047df	5d 	popq	%rbp
00000001000047e0	c3 	retq
00000001000047e1	90 	nop
00000001000047e2	90 	nop
00000001000047e3	90 	nop
00000001000047e4	90 	nop
00000001000047e5	90 	nop
00000001000047e6	90 	nop
00000001000047e7	90 	nop
00000001000047e8	90 	nop
00000001000047e9	90 	nop
00000001000047ea	90 	nop
00000001000047eb	90 	nop
00000001000047ec	90 	nop
00000001000047ed	90 	nop
00000001000047ee	90 	nop
00000001000047ef	90 	nop
_fvector2d_aequals:
00000001000047f0	55 	pushq	%rbp
00000001000047f1	48 89 e5 	movq	%rsp, %rbp
00000001000047f4	48 83 ec 20 	subq	$0x20, %rsp
00000001000047f8	0f 13 45 f0 	movlps	%xmm0, -0x10(%rbp)
00000001000047fc	0f 13 4d e8 	movlps	%xmm1, -0x18(%rbp)
0000000100004800	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100004804	66 48 0f 6e c0 	movd	%rax, %xmm0
0000000100004809	e8 82 fe ff ff 	callq	_fvector2d_magnitude
000000010000480e	f3 0f 7e 4d e8 	movq	-0x18(%rbp), %xmm1
0000000100004813	f3 0f 11 45 e4 	movss	%xmm0, -0x1c(%rbp)
0000000100004818	0f 28 c1 	movaps	%xmm1, %xmm0
000000010000481b	e8 70 fe ff ff 	callq	_fvector2d_magnitude
0000000100004820	f2 0f 10 0d e8 a8 00 00 	movsd	0xa8e8(%rip), %xmm1
0000000100004828	f3 0f 10 55 e4 	movss	-0x1c(%rbp), %xmm2
000000010000482d	f3 0f 5c d0 	subss	%xmm0, %xmm2
0000000100004831	f3 0f 5a c2 	cvtss2sd	%xmm2, %xmm0
0000000100004835	66 0f 28 15 c3 a8 00 00 	movapd	0xa8c3(%rip), %xmm2
000000010000483d	66 0f 54 c2 	andpd	%xmm2, %xmm0
0000000100004841	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
0000000100004845	0f 86 09 00 00 00 	jbe	0x100004854
000000010000484b	c6 45 ff 01 	movb	$0x1, -0x1(%rbp)
000000010000484f	e9 04 00 00 00 	jmp	0x100004858
0000000100004854	c6 45 ff 00 	movb	$0x0, -0x1(%rbp)
0000000100004858	0f be 45 ff 	movsbl	-0x1(%rbp), %eax
000000010000485c	48 83 c4 20 	addq	$0x20, %rsp
0000000100004860	5d 	popq	%rbp
0000000100004861	c3 	retq
0000000100004862	90 	nop
0000000100004863	90 	nop
0000000100004864	90 	nop
0000000100004865	90 	nop
0000000100004866	90 	nop
0000000100004867	90 	nop
0000000100004868	90 	nop
0000000100004869	90 	nop
000000010000486a	90 	nop
000000010000486b	90 	nop
000000010000486c	90 	nop
000000010000486d	90 	nop
000000010000486e	90 	nop
000000010000486f	90 	nop
_fvector2d_limit:
0000000100004870	55 	pushq	%rbp
0000000100004871	48 89 e5 	movq	%rsp, %rbp
0000000100004874	48 83 ec 10 	subq	$0x10, %rsp
0000000100004878	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000487c	f3 0f 11 45 f4 	movss	%xmm0, -0xc(%rbp)
0000000100004881	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100004885	f3 0f 7e 07 	movq	(%rdi), %xmm0
0000000100004889	e8 02 fe ff ff 	callq	_fvector2d_magnitude
000000010000488e	0f 2e 45 f4 	ucomiss	-0xc(%rbp), %xmm0
0000000100004892	0f 86 2d 00 00 00 	jbe	0x1000048c5
0000000100004898	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000489c	e8 8f fe ff ff 	callq	_fvector2d_normalize
00000001000048a1	f3 0f 10 45 f4 	movss	-0xc(%rbp), %xmm0
00000001000048a6	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000048aa	f3 0f 59 07 	mulss	(%rdi), %xmm0
00000001000048ae	f3 0f 11 07 	movss	%xmm0, (%rdi)
00000001000048b2	f3 0f 10 45 f4 	movss	-0xc(%rbp), %xmm0
00000001000048b7	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000048bb	f3 0f 59 47 04 	mulss	0x4(%rdi), %xmm0
00000001000048c0	f3 0f 11 47 04 	movss	%xmm0, 0x4(%rdi)
00000001000048c5	48 83 c4 10 	addq	$0x10, %rsp
00000001000048c9	5d 	popq	%rbp
00000001000048ca	c3 	retq
00000001000048cb	90 	nop
00000001000048cc	90 	nop
00000001000048cd	90 	nop
00000001000048ce	90 	nop
00000001000048cf	90 	nop
_fvector2d_construct:
00000001000048d0	55 	pushq	%rbp
00000001000048d1	48 89 e5 	movq	%rsp, %rbp
00000001000048d4	f3 0f 11 45 f4 	movss	%xmm0, -0xc(%rbp)
00000001000048d9	f3 0f 11 4d f0 	movss	%xmm1, -0x10(%rbp)
00000001000048de	f3 0f 10 45 f4 	movss	-0xc(%rbp), %xmm0
00000001000048e3	f3 0f 11 45 e8 	movss	%xmm0, -0x18(%rbp)
00000001000048e8	f3 0f 10 45 f0 	movss	-0x10(%rbp), %xmm0
00000001000048ed	f3 0f 11 45 ec 	movss	%xmm0, -0x14(%rbp)
00000001000048f2	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000048f6	48 89 45 f8 	movq	%rax, -0x8(%rbp)
00000001000048fa	f3 0f 7e 45 f8 	movq	-0x8(%rbp), %xmm0
00000001000048ff	5d 	popq	%rbp
0000000100004900	c3 	retq
0000000100004901	90 	nop
0000000100004902	90 	nop
0000000100004903	90 	nop
0000000100004904	90 	nop
0000000100004905	90 	nop
0000000100004906	90 	nop
0000000100004907	90 	nop
0000000100004908	90 	nop
0000000100004909	90 	nop
000000010000490a	90 	nop
000000010000490b	90 	nop
000000010000490c	90 	nop
000000010000490d	90 	nop
000000010000490e	90 	nop
000000010000490f	90 	nop
_fvector_rotation:
0000000100004910	55 	pushq	%rbp
0000000100004911	48 89 e5 	movq	%rsp, %rbp
0000000100004914	48 83 ec 40 	subq	$0x40, %rsp
0000000100004918	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000491c	f3 0f 11 45 f4 	movss	%xmm0, -0xc(%rbp)
0000000100004921	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100004925	f3 0f 5a 07 	cvtss2sd	(%rdi), %xmm0
0000000100004929	f3 0f 5a 4d f4 	cvtss2sd	-0xc(%rbp), %xmm1
000000010000492e	f2 0f 11 45 e8 	movsd	%xmm0, -0x18(%rbp)
0000000100004933	0f 28 c1 	movaps	%xmm1, %xmm0
0000000100004936	e8 39 9a 00 00 	callq	0x10000e374 ## symbol stub for: _cos
000000010000493b	f2 0f 10 4d e8 	movsd	-0x18(%rbp), %xmm1
0000000100004940	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
0000000100004944	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100004948	f3 0f 5a 47 04 	cvtss2sd	0x4(%rdi), %xmm0
000000010000494d	f3 0f 5a 55 f4 	cvtss2sd	-0xc(%rbp), %xmm2
0000000100004952	f2 0f 11 45 e0 	movsd	%xmm0, -0x20(%rbp)
0000000100004957	0f 28 c2 	movaps	%xmm2, %xmm0
000000010000495a	f2 0f 11 4d d8 	movsd	%xmm1, -0x28(%rbp)
000000010000495f	e8 6c 9b 00 00 	callq	0x10000e4d0 ## symbol stub for: _sin
0000000100004964	f2 0f 10 4d e0 	movsd	-0x20(%rbp), %xmm1
0000000100004969	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
000000010000496d	f2 0f 10 45 d8 	movsd	-0x28(%rbp), %xmm0
0000000100004972	f2 0f 5c c1 	subsd	%xmm1, %xmm0
0000000100004976	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
000000010000497a	f3 0f 11 45 f0 	movss	%xmm0, -0x10(%rbp)
000000010000497f	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100004983	f3 0f 5a 47 04 	cvtss2sd	0x4(%rdi), %xmm0
0000000100004988	f3 0f 5a 4d f4 	cvtss2sd	-0xc(%rbp), %xmm1
000000010000498d	f2 0f 11 45 d0 	movsd	%xmm0, -0x30(%rbp)
0000000100004992	0f 28 c1 	movaps	%xmm1, %xmm0
0000000100004995	e8 da 99 00 00 	callq	0x10000e374 ## symbol stub for: _cos
000000010000499a	f2 0f 10 4d d0 	movsd	-0x30(%rbp), %xmm1
000000010000499f	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
00000001000049a3	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000049a7	f3 0f 5a 07 	cvtss2sd	(%rdi), %xmm0
00000001000049ab	f3 0f 5a 55 f4 	cvtss2sd	-0xc(%rbp), %xmm2
00000001000049b0	f2 0f 11 45 c8 	movsd	%xmm0, -0x38(%rbp)
00000001000049b5	0f 28 c2 	movaps	%xmm2, %xmm0
00000001000049b8	f2 0f 11 4d c0 	movsd	%xmm1, -0x40(%rbp)
00000001000049bd	e8 0e 9b 00 00 	callq	0x10000e4d0 ## symbol stub for: _sin
00000001000049c2	f2 0f 10 4d c8 	movsd	-0x38(%rbp), %xmm1
00000001000049c7	f2 0f 59 c8 	mulsd	%xmm0, %xmm1
00000001000049cb	f2 0f 10 45 c0 	movsd	-0x40(%rbp), %xmm0
00000001000049d0	f2 0f 58 c1 	addsd	%xmm1, %xmm0
00000001000049d4	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
00000001000049d8	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000049dc	f3 0f 11 47 04 	movss	%xmm0, 0x4(%rdi)
00000001000049e1	f3 0f 10 45 f0 	movss	-0x10(%rbp), %xmm0
00000001000049e6	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000049ea	f3 0f 11 07 	movss	%xmm0, (%rdi)
00000001000049ee	48 83 c4 40 	addq	$0x40, %rsp
00000001000049f2	5d 	popq	%rbp
00000001000049f3	c3 	retq
00000001000049f4	90 	nop
00000001000049f5	90 	nop
00000001000049f6	90 	nop
00000001000049f7	90 	nop
00000001000049f8	90 	nop
00000001000049f9	90 	nop
00000001000049fa	90 	nop
00000001000049fb	90 	nop
00000001000049fc	90 	nop
00000001000049fd	90 	nop
00000001000049fe	90 	nop
00000001000049ff	90 	nop
_end_of_program:
0000000100004a00	55 	pushq	%rbp
0000000100004a01	48 89 e5 	movq	%rsp, %rbp
0000000100004a04	48 83 ec 10 	subq	$0x10, %rsp
0000000100004a08	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100004a0c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100004a10	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100004a14	e8 d7 e8 ff ff 	callq	_free_mlx
0000000100004a19	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100004a1d	e8 7e e8 ff ff 	callq	_free_env
0000000100004a22	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100004a27	0f 84 0e 00 00 00 	je	0x100004a3b
0000000100004a2d	be 02 00 00 00 	movl	$0x2, %esi
0000000100004a32	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100004a36	e8 95 08 00 00 	callq	_ft_putstr_fd
0000000100004a3b	31 c0 	xorl	%eax, %eax
0000000100004a3d	48 83 c4 10 	addq	$0x10, %rsp
0000000100004a41	5d 	popq	%rbp
0000000100004a42	c3 	retq
0000000100004a43	90 	nop
0000000100004a44	90 	nop
0000000100004a45	90 	nop
0000000100004a46	90 	nop
0000000100004a47	90 	nop
0000000100004a48	90 	nop
0000000100004a49	90 	nop
0000000100004a4a	90 	nop
0000000100004a4b	90 	nop
0000000100004a4c	90 	nop
0000000100004a4d	90 	nop
0000000100004a4e	90 	nop
0000000100004a4f	90 	nop
_ft_memset:
0000000100004a50	55 	pushq	%rbp
0000000100004a51	48 89 e5 	movq	%rsp, %rbp
0000000100004a54	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100004a58	89 75 f4 	movl	%esi, -0xc(%rbp)
0000000100004a5b	48 89 55 e8 	movq	%rdx, -0x18(%rbp)
0000000100004a5f	48 c7 45 d8 00 00 00 00 	movq	$0x0, -0x28(%rbp)
0000000100004a67	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100004a6b	48 89 55 e0 	movq	%rdx, -0x20(%rbp)
0000000100004a6f	48 8b 45 d8 	movq	-0x28(%rbp), %rax
0000000100004a73	48 3b 45 e8 	cmpq	-0x18(%rbp), %rax
0000000100004a77	0f 83 21 00 00 00 	jae	0x100004a9e
0000000100004a7d	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100004a80	88 c1 	movb	%al, %cl
0000000100004a82	48 8b 55 d8 	movq	-0x28(%rbp), %rdx
0000000100004a86	48 8b 75 e0 	movq	-0x20(%rbp), %rsi
0000000100004a8a	88 0c 16 	movb	%cl, (%rsi,%rdx)
0000000100004a8d	48 8b 55 d8 	movq	-0x28(%rbp), %rdx
0000000100004a91	48 83 c2 01 	addq	$0x1, %rdx
0000000100004a95	48 89 55 d8 	movq	%rdx, -0x28(%rbp)
0000000100004a99	e9 d1 ff ff ff 	jmp	0x100004a6f
0000000100004a9e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100004aa2	5d 	popq	%rbp
0000000100004aa3	c3 	retq
0000000100004aa4	90 	nop
0000000100004aa5	90 	nop
0000000100004aa6	90 	nop
0000000100004aa7	90 	nop
0000000100004aa8	90 	nop
0000000100004aa9	90 	nop
0000000100004aaa	90 	nop
0000000100004aab	90 	nop
0000000100004aac	90 	nop
0000000100004aad	90 	nop
0000000100004aae	90 	nop
0000000100004aaf	90 	nop
_ft_bzero:
0000000100004ab0	55 	pushq	%rbp
0000000100004ab1	48 89 e5 	movq	%rsp, %rbp
0000000100004ab4	48 83 ec 20 	subq	$0x20, %rsp
0000000100004ab8	31 c0 	xorl	%eax, %eax
0000000100004aba	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100004abe	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100004ac2	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100004ac6	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100004aca	89 c6 	movl	%eax, %esi
0000000100004acc	e8 7f ff ff ff 	callq	_ft_memset
0000000100004ad1	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100004ad5	48 83 c4 20 	addq	$0x20, %rsp
0000000100004ad9	5d 	popq	%rbp
0000000100004ada	c3 	retq
0000000100004adb	90 	nop
0000000100004adc	90 	nop
0000000100004add	90 	nop
0000000100004ade	90 	nop
0000000100004adf	90 	nop
_ft_memcpy:
0000000100004ae0	55 	pushq	%rbp
0000000100004ae1	48 89 e5 	movq	%rsp, %rbp
0000000100004ae4	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100004ae8	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100004aec	48 89 55 e0 	movq	%rdx, -0x20(%rbp)
0000000100004af0	48 83 7d e0 00 	cmpq	$0x0, -0x20(%rbp)
0000000100004af5	0f 84 16 00 00 00 	je	0x100004b11
0000000100004afb	48 83 7d e8 00 	cmpq	$0x0, -0x18(%rbp)
0000000100004b00	0f 84 0b 00 00 00 	je	0x100004b11
0000000100004b06	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100004b0b	0f 85 0d 00 00 00 	jne	0x100004b1e
0000000100004b11	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100004b15	48 89 45 f8 	movq	%rax, -0x8(%rbp)
0000000100004b19	e9 55 00 00 00 	jmp	0x100004b73
0000000100004b1e	48 c7 45 c8 00 00 00 00 	movq	$0x0, -0x38(%rbp)
0000000100004b26	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100004b2a	48 89 45 d0 	movq	%rax, -0x30(%rbp)
0000000100004b2e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100004b32	48 89 45 d8 	movq	%rax, -0x28(%rbp)
0000000100004b36	48 8b 45 c8 	movq	-0x38(%rbp), %rax
0000000100004b3a	48 3b 45 e0 	cmpq	-0x20(%rbp), %rax
0000000100004b3e	0f 83 27 00 00 00 	jae	0x100004b6b
0000000100004b44	48 8b 45 c8 	movq	-0x38(%rbp), %rax
0000000100004b48	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
0000000100004b4c	8a 14 01 	movb	(%rcx,%rax), %dl
0000000100004b4f	48 8b 45 c8 	movq	-0x38(%rbp), %rax
0000000100004b53	48 8b 4d d0 	movq	-0x30(%rbp), %rcx
0000000100004b57	88 14 01 	movb	%dl, (%rcx,%rax)
0000000100004b5a	48 8b 45 c8 	movq	-0x38(%rbp), %rax
0000000100004b5e	48 83 c0 01 	addq	$0x1, %rax
0000000100004b62	48 89 45 c8 	movq	%rax, -0x38(%rbp)
0000000100004b66	e9 cb ff ff ff 	jmp	0x100004b36
0000000100004b6b	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100004b6f	48 89 45 f8 	movq	%rax, -0x8(%rbp)
0000000100004b73	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100004b77	5d 	popq	%rbp
0000000100004b78	c3 	retq
0000000100004b79	90 	nop
0000000100004b7a	90 	nop
0000000100004b7b	90 	nop
0000000100004b7c	90 	nop
0000000100004b7d	90 	nop
0000000100004b7e	90 	nop
0000000100004b7f	90 	nop
_ft_strlen:
0000000100004b80	55 	pushq	%rbp
0000000100004b81	48 89 e5 	movq	%rsp, %rbp
0000000100004b84	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100004b88	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
0000000100004b8f	48 63 45 f4 	movslq	-0xc(%rbp), %rax
0000000100004b93	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100004b97	80 3c 01 00 	cmpb	$0x0, (%rcx,%rax)
0000000100004b9b	0f 84 0e 00 00 00 	je	0x100004baf
0000000100004ba1	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100004ba4	83 c0 01 	addl	$0x1, %eax
0000000100004ba7	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100004baa	e9 e0 ff ff ff 	jmp	0x100004b8f
0000000100004baf	48 63 45 f4 	movslq	-0xc(%rbp), %rax
0000000100004bb3	5d 	popq	%rbp
0000000100004bb4	c3 	retq
0000000100004bb5	90 	nop
0000000100004bb6	90 	nop
0000000100004bb7	90 	nop
0000000100004bb8	90 	nop
0000000100004bb9	90 	nop
0000000100004bba	90 	nop
0000000100004bbb	90 	nop
0000000100004bbc	90 	nop
0000000100004bbd	90 	nop
0000000100004bbe	90 	nop
0000000100004bbf	90 	nop
_ft_strdup:
0000000100004bc0	55 	pushq	%rbp
0000000100004bc1	48 89 e5 	movq	%rsp, %rbp
0000000100004bc4	48 83 ec 20 	subq	$0x20, %rsp
0000000100004bc8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100004bcc	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100004bd0	e8 ab ff ff ff 	callq	_ft_strlen
0000000100004bd5	48 c1 e0 00 	shlq	$0x0, %rax
0000000100004bd9	48 83 c0 01 	addq	$0x1, %rax
0000000100004bdd	48 89 c7 	movq	%rax, %rdi
0000000100004be0	e8 9b 01 00 00 	callq	_ft_memalloc
0000000100004be5	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100004be9	48 83 f8 00 	cmpq	$0x0, %rax
0000000100004bed	0f 85 0d 00 00 00 	jne	0x100004c00
0000000100004bf3	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100004bfb	e9 19 00 00 00 	jmp	0x100004c19
0000000100004c00	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100004c04	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100004c08	e8 23 00 00 00 	callq	_ft_strcpy
0000000100004c0d	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100004c11	48 89 75 f8 	movq	%rsi, -0x8(%rbp)
0000000100004c15	48 89 45 e0 	movq	%rax, -0x20(%rbp)
0000000100004c19	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100004c1d	48 83 c4 20 	addq	$0x20, %rsp
0000000100004c21	5d 	popq	%rbp
0000000100004c22	c3 	retq
0000000100004c23	90 	nop
0000000100004c24	90 	nop
0000000100004c25	90 	nop
0000000100004c26	90 	nop
0000000100004c27	90 	nop
0000000100004c28	90 	nop
0000000100004c29	90 	nop
0000000100004c2a	90 	nop
0000000100004c2b	90 	nop
0000000100004c2c	90 	nop
0000000100004c2d	90 	nop
0000000100004c2e	90 	nop
0000000100004c2f	90 	nop
_ft_strcpy:
0000000100004c30	55 	pushq	%rbp
0000000100004c31	48 89 e5 	movq	%rsp, %rbp
0000000100004c34	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100004c38	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100004c3c	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100004c43	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100004c47	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100004c4b	80 3c 01 00 	cmpb	$0x0, (%rcx,%rax)
0000000100004c4f	0f 84 24 00 00 00 	je	0x100004c79
0000000100004c55	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100004c59	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100004c5d	8a 14 01 	movb	(%rcx,%rax), %dl
0000000100004c60	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100004c64	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100004c68	88 14 01 	movb	%dl, (%rcx,%rax)
0000000100004c6b	8b 75 ec 	movl	-0x14(%rbp), %esi
0000000100004c6e	83 c6 01 	addl	$0x1, %esi
0000000100004c71	89 75 ec 	movl	%esi, -0x14(%rbp)
0000000100004c74	e9 ca ff ff ff 	jmp	0x100004c43
0000000100004c79	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100004c7d	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100004c81	8a 14 01 	movb	(%rcx,%rax), %dl
0000000100004c84	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100004c88	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100004c8c	88 14 01 	movb	%dl, (%rcx,%rax)
0000000100004c8f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100004c93	5d 	popq	%rbp
0000000100004c94	c3 	retq
0000000100004c95	90 	nop
0000000100004c96	90 	nop
0000000100004c97	90 	nop
0000000100004c98	90 	nop
0000000100004c99	90 	nop
0000000100004c9a	90 	nop
0000000100004c9b	90 	nop
0000000100004c9c	90 	nop
0000000100004c9d	90 	nop
0000000100004c9e	90 	nop
0000000100004c9f	90 	nop
_ft_strchr:
0000000100004ca0	55 	pushq	%rbp
0000000100004ca1	48 89 e5 	movq	%rsp, %rbp
0000000100004ca4	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100004ca8	89 75 ec 	movl	%esi, -0x14(%rbp)
0000000100004cab	c7 45 e8 00 00 00 00 	movl	$0x0, -0x18(%rbp)
0000000100004cb2	48 63 45 e8 	movslq	-0x18(%rbp), %rax
0000000100004cb6	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100004cba	80 3c 01 00 	cmpb	$0x0, (%rcx,%rax)
0000000100004cbe	0f 84 3d 00 00 00 	je	0x100004d01
0000000100004cc4	48 63 45 e8 	movslq	-0x18(%rbp), %rax
0000000100004cc8	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100004ccc	0f be 14 01 	movsbl	(%rcx,%rax), %edx
0000000100004cd0	8b 75 ec 	movl	-0x14(%rbp), %esi
0000000100004cd3	40 88 f7 	movb	%sil, %dil
0000000100004cd6	40 0f be f7 	movsbl	%dil, %esi
0000000100004cda	39 f2 	cmpl	%esi, %edx
0000000100004cdc	0f 85 11 00 00 00 	jne	0x100004cf3
0000000100004ce2	48 63 45 e8 	movslq	-0x18(%rbp), %rax
0000000100004ce6	48 03 45 f0 	addq	-0x10(%rbp), %rax
0000000100004cea	48 89 45 f8 	movq	%rax, -0x8(%rbp)
0000000100004cee	e9 45 00 00 00 	jmp	0x100004d38
0000000100004cf3	8b 45 e8 	movl	-0x18(%rbp), %eax
0000000100004cf6	83 c0 01 	addl	$0x1, %eax
0000000100004cf9	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100004cfc	e9 b1 ff ff ff 	jmp	0x100004cb2
0000000100004d01	48 63 45 e8 	movslq	-0x18(%rbp), %rax
0000000100004d05	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100004d09	0f be 14 01 	movsbl	(%rcx,%rax), %edx
0000000100004d0d	8b 75 ec 	movl	-0x14(%rbp), %esi
0000000100004d10	40 88 f7 	movb	%sil, %dil
0000000100004d13	40 0f be f7 	movsbl	%dil, %esi
0000000100004d17	39 f2 	cmpl	%esi, %edx
0000000100004d19	0f 85 11 00 00 00 	jne	0x100004d30
0000000100004d1f	48 63 45 e8 	movslq	-0x18(%rbp), %rax
0000000100004d23	48 03 45 f0 	addq	-0x10(%rbp), %rax
0000000100004d27	48 89 45 f8 	movq	%rax, -0x8(%rbp)
0000000100004d2b	e9 08 00 00 00 	jmp	0x100004d38
0000000100004d30	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100004d38	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100004d3c	5d 	popq	%rbp
0000000100004d3d	c3 	retq
0000000100004d3e	90 	nop
0000000100004d3f	90 	nop
_ft_isdigit:
0000000100004d40	55 	pushq	%rbp
0000000100004d41	48 89 e5 	movq	%rsp, %rbp
0000000100004d44	89 7d f8 	movl	%edi, -0x8(%rbp)
0000000100004d47	83 7d f8 30 	cmpl	$0x30, -0x8(%rbp)
0000000100004d4b	0f 8c 16 00 00 00 	jl	0x100004d67
0000000100004d51	83 7d f8 39 	cmpl	$0x39, -0x8(%rbp)
0000000100004d55	0f 8f 0c 00 00 00 	jg	0x100004d67
0000000100004d5b	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100004d62	e9 07 00 00 00 	jmp	0x100004d6e
0000000100004d67	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100004d6e	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100004d71	5d 	popq	%rbp
0000000100004d72	c3 	retq
0000000100004d73	90 	nop
0000000100004d74	90 	nop
0000000100004d75	90 	nop
0000000100004d76	90 	nop
0000000100004d77	90 	nop
0000000100004d78	90 	nop
0000000100004d79	90 	nop
0000000100004d7a	90 	nop
0000000100004d7b	90 	nop
0000000100004d7c	90 	nop
0000000100004d7d	90 	nop
0000000100004d7e	90 	nop
0000000100004d7f	90 	nop
_ft_memalloc:
0000000100004d80	55 	pushq	%rbp
0000000100004d81	48 89 e5 	movq	%rsp, %rbp
0000000100004d84	48 83 ec 20 	subq	$0x20, %rsp
0000000100004d88	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100004d8c	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100004d90	e8 f3 96 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
0000000100004d95	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100004d99	48 83 f8 00 	cmpq	$0x0, %rax
0000000100004d9d	0f 85 07 00 00 00 	jne	0x100004daa
0000000100004da3	31 ff 	xorl	%edi, %edi
0000000100004da5	e8 d0 95 00 00 	callq	0x10000e37a ## symbol stub for: _exit
0000000100004daa	48 83 7d e8 00 	cmpq	$0x0, -0x18(%rbp)
0000000100004daf	0f 85 0d 00 00 00 	jne	0x100004dc2
0000000100004db5	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100004dbd	e9 15 00 00 00 	jmp	0x100004dd7
0000000100004dc2	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100004dc6	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100004dca	e8 e1 fc ff ff 	callq	_ft_bzero
0000000100004dcf	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100004dd3	48 89 75 f8 	movq	%rsi, -0x8(%rbp)
0000000100004dd7	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100004ddb	48 83 c4 20 	addq	$0x20, %rsp
0000000100004ddf	5d 	popq	%rbp
0000000100004de0	c3 	retq
0000000100004de1	90 	nop
0000000100004de2	90 	nop
0000000100004de3	90 	nop
0000000100004de4	90 	nop
0000000100004de5	90 	nop
0000000100004de6	90 	nop
0000000100004de7	90 	nop
0000000100004de8	90 	nop
0000000100004de9	90 	nop
0000000100004dea	90 	nop
0000000100004deb	90 	nop
0000000100004dec	90 	nop
0000000100004ded	90 	nop
0000000100004dee	90 	nop
0000000100004def	90 	nop
_ft_strnew:
0000000100004df0	55 	pushq	%rbp
0000000100004df1	48 89 e5 	movq	%rsp, %rbp
0000000100004df4	48 83 ec 20 	subq	$0x20, %rsp
0000000100004df8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100004dfc	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100004e00	48 83 c7 01 	addq	$0x1, %rdi
0000000100004e04	48 c1 e7 00 	shlq	$0x0, %rdi
0000000100004e08	e8 73 ff ff ff 	callq	_ft_memalloc
0000000100004e0d	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100004e11	48 83 f8 00 	cmpq	$0x0, %rax
0000000100004e15	0f 85 0d 00 00 00 	jne	0x100004e28
0000000100004e1b	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100004e23	e9 34 00 00 00 	jmp	0x100004e5c
0000000100004e28	48 83 7d e8 00 	cmpq	$0x0, -0x18(%rbp)
0000000100004e2d	0f 85 0d 00 00 00 	jne	0x100004e40
0000000100004e33	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100004e3b	e9 1c 00 00 00 	jmp	0x100004e5c
0000000100004e40	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100004e44	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100004e48	48 83 c0 01 	addq	$0x1, %rax
0000000100004e4c	48 89 c6 	movq	%rax, %rsi
0000000100004e4f	e8 5c fc ff ff 	callq	_ft_bzero
0000000100004e54	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100004e58	48 89 45 f8 	movq	%rax, -0x8(%rbp)
0000000100004e5c	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100004e60	48 83 c4 20 	addq	$0x20, %rsp
0000000100004e64	5d 	popq	%rbp
0000000100004e65	c3 	retq
0000000100004e66	90 	nop
0000000100004e67	90 	nop
0000000100004e68	90 	nop
0000000100004e69	90 	nop
0000000100004e6a	90 	nop
0000000100004e6b	90 	nop
0000000100004e6c	90 	nop
0000000100004e6d	90 	nop
0000000100004e6e	90 	nop
0000000100004e6f	90 	nop
_ft_strdel:
0000000100004e70	55 	pushq	%rbp
0000000100004e71	48 89 e5 	movq	%rsp, %rbp
0000000100004e74	48 83 ec 10 	subq	$0x10, %rsp
0000000100004e78	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100004e7c	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
0000000100004e81	0f 84 17 00 00 00 	je	0x100004e9e
0000000100004e87	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100004e8b	48 8b 38 	movq	(%rax), %rdi
0000000100004e8e	e8 f3 94 00 00 	callq	0x10000e386 ## symbol stub for: _free
0000000100004e93	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100004e97	48 c7 00 00 00 00 00 	movq	$0x0, (%rax)
0000000100004e9e	48 83 c4 10 	addq	$0x10, %rsp
0000000100004ea2	5d 	popq	%rbp
0000000100004ea3	c3 	retq
0000000100004ea4	90 	nop
0000000100004ea5	90 	nop
0000000100004ea6	90 	nop
0000000100004ea7	90 	nop
0000000100004ea8	90 	nop
0000000100004ea9	90 	nop
0000000100004eaa	90 	nop
0000000100004eab	90 	nop
0000000100004eac	90 	nop
0000000100004ead	90 	nop
0000000100004eae	90 	nop
0000000100004eaf	90 	nop
_ft_strsub:
0000000100004eb0	55 	pushq	%rbp
0000000100004eb1	48 89 e5 	movq	%rsp, %rbp
0000000100004eb4	48 83 ec 40 	subq	$0x40, %rsp
0000000100004eb8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100004ebc	89 75 ec 	movl	%esi, -0x14(%rbp)
0000000100004ebf	48 89 55 e0 	movq	%rdx, -0x20(%rbp)
0000000100004ec3	48 c7 45 d0 00 00 00 00 	movq	$0x0, -0x30(%rbp)
0000000100004ecb	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100004ed0	0f 85 0d 00 00 00 	jne	0x100004ee3
0000000100004ed6	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100004ede	e9 dd 00 00 00 	jmp	0x100004fc0
0000000100004ee3	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100004ee6	89 c1 	movl	%eax, %ecx
0000000100004ee8	48 03 4d f0 	addq	-0x10(%rbp), %rcx
0000000100004eec	48 89 cf 	movq	%rcx, %rdi
0000000100004eef	e8 8c fc ff ff 	callq	_ft_strlen
0000000100004ef4	48 3b 45 e0 	cmpq	-0x20(%rbp), %rax
0000000100004ef8	0f 83 0d 00 00 00 	jae	0x100004f0b
0000000100004efe	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100004f06	e9 b5 00 00 00 	jmp	0x100004fc0
0000000100004f0b	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
0000000100004f0f	e8 dc fe ff ff 	callq	_ft_strnew
0000000100004f14	48 89 45 d8 	movq	%rax, -0x28(%rbp)
0000000100004f18	48 83 7d d8 00 	cmpq	$0x0, -0x28(%rbp)
0000000100004f1d	0f 85 0d 00 00 00 	jne	0x100004f30
0000000100004f23	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100004f2b	e9 90 00 00 00 	jmp	0x100004fc0
0000000100004f30	e9 00 00 00 00 	jmp	0x100004f35
0000000100004f35	31 c0 	xorl	%eax, %eax
0000000100004f37	88 c1 	movb	%al, %cl
0000000100004f39	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100004f3c	89 c2 	movl	%eax, %edx
0000000100004f3e	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100004f42	0f be 04 16 	movsbl	(%rsi,%rdx), %eax
0000000100004f46	83 f8 00 	cmpl	$0x0, %eax
0000000100004f49	88 4d cf 	movb	%cl, -0x31(%rbp)
0000000100004f4c	0f 84 0b 00 00 00 	je	0x100004f5d
0000000100004f52	48 83 7d e0 00 	cmpq	$0x0, -0x20(%rbp)
0000000100004f57	0f 95 c0 	setne	%al
0000000100004f5a	88 45 cf 	movb	%al, -0x31(%rbp)
0000000100004f5d	8a 45 cf 	movb	-0x31(%rbp), %al
0000000100004f60	a8 01 	testb	$0x1, %al
0000000100004f62	0f 85 05 00 00 00 	jne	0x100004f6d
0000000100004f68	e9 3f 00 00 00 	jmp	0x100004fac
0000000100004f6d	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100004f70	89 c1 	movl	%eax, %ecx
0000000100004f72	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100004f76	40 8a 34 0a 	movb	(%rdx,%rcx), %sil
0000000100004f7a	48 8b 4d d0 	movq	-0x30(%rbp), %rcx
0000000100004f7e	48 8b 55 d8 	movq	-0x28(%rbp), %rdx
0000000100004f82	40 88 34 0a 	movb	%sil, (%rdx,%rcx)
0000000100004f86	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100004f89	83 c0 01 	addl	$0x1, %eax
0000000100004f8c	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100004f8f	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
0000000100004f93	48 83 c1 ff 	addq	$-0x1, %rcx
0000000100004f97	48 89 4d e0 	movq	%rcx, -0x20(%rbp)
0000000100004f9b	48 8b 4d d0 	movq	-0x30(%rbp), %rcx
0000000100004f9f	48 83 c1 01 	addq	$0x1, %rcx
0000000100004fa3	48 89 4d d0 	movq	%rcx, -0x30(%rbp)
0000000100004fa7	e9 89 ff ff ff 	jmp	0x100004f35
0000000100004fac	48 8b 45 d0 	movq	-0x30(%rbp), %rax
0000000100004fb0	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
0000000100004fb4	c6 04 01 00 	movb	$0x0, (%rcx,%rax)
0000000100004fb8	48 8b 45 d8 	movq	-0x28(%rbp), %rax
0000000100004fbc	48 89 45 f8 	movq	%rax, -0x8(%rbp)
0000000100004fc0	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100004fc4	48 83 c4 40 	addq	$0x40, %rsp
0000000100004fc8	5d 	popq	%rbp
0000000100004fc9	c3 	retq
0000000100004fca	90 	nop
0000000100004fcb	90 	nop
0000000100004fcc	90 	nop
0000000100004fcd	90 	nop
0000000100004fce	90 	nop
0000000100004fcf	90 	nop
_ft_strjoin:
0000000100004fd0	55 	pushq	%rbp
0000000100004fd1	48 89 e5 	movq	%rsp, %rbp
0000000100004fd4	48 83 ec 30 	subq	$0x30, %rsp
0000000100004fd8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100004fdc	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100004fe0	c7 45 d8 00 00 00 00 	movl	$0x0, -0x28(%rbp)
0000000100004fe7	c7 45 dc 00 00 00 00 	movl	$0x0, -0x24(%rbp)
0000000100004fee	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100004ff3	0f 84 0b 00 00 00 	je	0x100005004
0000000100004ff9	48 83 7d e8 00 	cmpq	$0x0, -0x18(%rbp)
0000000100004ffe	0f 85 0d 00 00 00 	jne	0x100005011
0000000100005004	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000500c	e9 d2 00 00 00 	jmp	0x1000050e3
0000000100005011	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100005015	e8 66 fb ff ff 	callq	_ft_strlen
000000010000501a	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
000000010000501e	48 89 45 d0 	movq	%rax, -0x30(%rbp)
0000000100005022	e8 59 fb ff ff 	callq	_ft_strlen
0000000100005027	48 8b 7d d0 	movq	-0x30(%rbp), %rdi
000000010000502b	48 01 c7 	addq	%rax, %rdi
000000010000502e	e8 bd fd ff ff 	callq	_ft_strnew
0000000100005033	48 89 45 e0 	movq	%rax, -0x20(%rbp)
0000000100005037	48 83 7d e0 00 	cmpq	$0x0, -0x20(%rbp)
000000010000503c	0f 85 0d 00 00 00 	jne	0x10000504f
0000000100005042	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000504a	e9 94 00 00 00 	jmp	0x1000050e3
000000010000504f	e9 00 00 00 00 	jmp	0x100005054
0000000100005054	48 63 45 dc 	movslq	-0x24(%rbp), %rax
0000000100005058	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000505c	80 3c 01 00 	cmpb	$0x0, (%rcx,%rax)
0000000100005060	0f 84 24 00 00 00 	je	0x10000508a
0000000100005066	48 63 45 dc 	movslq	-0x24(%rbp), %rax
000000010000506a	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000506e	8a 14 01 	movb	(%rcx,%rax), %dl
0000000100005071	48 63 45 dc 	movslq	-0x24(%rbp), %rax
0000000100005075	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
0000000100005079	88 14 01 	movb	%dl, (%rcx,%rax)
000000010000507c	8b 75 dc 	movl	-0x24(%rbp), %esi
000000010000507f	83 c6 01 	addl	$0x1, %esi
0000000100005082	89 75 dc 	movl	%esi, -0x24(%rbp)
0000000100005085	e9 ca ff ff ff 	jmp	0x100005054
000000010000508a	e9 00 00 00 00 	jmp	0x10000508f
000000010000508f	48 63 45 d8 	movslq	-0x28(%rbp), %rax
0000000100005093	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
0000000100005097	80 3c 01 00 	cmpb	$0x0, (%rcx,%rax)
000000010000509b	0f 84 29 00 00 00 	je	0x1000050ca
00000001000050a1	48 63 45 d8 	movslq	-0x28(%rbp), %rax
00000001000050a5	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
00000001000050a9	8a 14 01 	movb	(%rcx,%rax), %dl
00000001000050ac	8b 75 dc 	movl	-0x24(%rbp), %esi
00000001000050af	03 75 d8 	addl	-0x28(%rbp), %esi
00000001000050b2	48 63 c6 	movslq	%esi, %rax
00000001000050b5	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
00000001000050b9	88 14 01 	movb	%dl, (%rcx,%rax)
00000001000050bc	8b 75 d8 	movl	-0x28(%rbp), %esi
00000001000050bf	83 c6 01 	addl	$0x1, %esi
00000001000050c2	89 75 d8 	movl	%esi, -0x28(%rbp)
00000001000050c5	e9 c5 ff ff ff 	jmp	0x10000508f
00000001000050ca	8b 45 dc 	movl	-0x24(%rbp), %eax
00000001000050cd	03 45 d8 	addl	-0x28(%rbp), %eax
00000001000050d0	48 63 c8 	movslq	%eax, %rcx
00000001000050d3	48 8b 55 e0 	movq	-0x20(%rbp), %rdx
00000001000050d7	c6 04 0a 00 	movb	$0x0, (%rdx,%rcx)
00000001000050db	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
00000001000050df	48 89 4d f8 	movq	%rcx, -0x8(%rbp)
00000001000050e3	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000050e7	48 83 c4 30 	addq	$0x30, %rsp
00000001000050eb	5d 	popq	%rbp
00000001000050ec	c3 	retq
00000001000050ed	90 	nop
00000001000050ee	90 	nop
00000001000050ef	90 	nop
_ft_itoa:
00000001000050f0	55 	pushq	%rbp
00000001000050f1	48 89 e5 	movq	%rsp, %rbp
00000001000050f4	48 83 ec 20 	subq	$0x20, %rsp
00000001000050f8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
00000001000050fc	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100005100	e8 cb 00 00 00 	callq	_count_number
0000000100005105	83 e8 01 	subl	$0x1, %eax
0000000100005108	89 45 ec 	movl	%eax, -0x14(%rbp)
000000010000510b	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000510f	e8 bc 00 00 00 	callq	_count_number
0000000100005114	48 63 f8 	movslq	%eax, %rdi
0000000100005117	e8 d4 fc ff ff 	callq	_ft_strnew
000000010000511c	48 89 45 e0 	movq	%rax, -0x20(%rbp)
0000000100005120	48 83 7d e0 00 	cmpq	$0x0, -0x20(%rbp)
0000000100005125	0f 85 0d 00 00 00 	jne	0x100005138
000000010000512b	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100005133	e9 8e 00 00 00 	jmp	0x1000051c6
0000000100005138	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
000000010000513d	0f 8d 10 00 00 00 	jge	0x100005153
0000000100005143	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100005147	c6 00 2d 	movb	$0x2d, (%rax)
000000010000514a	48 6b 45 f0 ff 	imulq	$-0x1, -0x10(%rbp), %rax
000000010000514f	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100005153	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100005158	0f 85 0c 00 00 00 	jne	0x10000516a
000000010000515e	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100005162	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
0000000100005166	c6 04 01 30 	movb	$0x30, (%rcx,%rax)
000000010000516a	e9 00 00 00 00 	jmp	0x10000516f
000000010000516f	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100005174	0f 84 44 00 00 00 	je	0x1000051be
000000010000517a	b8 0a 00 00 00 	movl	$0xa, %eax
000000010000517f	89 c1 	movl	%eax, %ecx
0000000100005181	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100005185	48 99 	cqto
0000000100005187	48 f7 f9 	idivq	%rcx
000000010000518a	48 83 c2 30 	addq	$0x30, %rdx
000000010000518e	40 88 d6 	movb	%dl, %sil
0000000100005191	48 63 55 ec 	movslq	-0x14(%rbp), %rdx
0000000100005195	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
0000000100005199	40 88 34 17 	movb	%sil, (%rdi,%rdx)
000000010000519d	44 8b 45 ec 	movl	-0x14(%rbp), %r8d
00000001000051a1	41 83 c0 ff 	addl	$-0x1, %r8d
00000001000051a5	44 89 45 ec 	movl	%r8d, -0x14(%rbp)
00000001000051a9	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000051ad	48 89 d0 	movq	%rdx, %rax
00000001000051b0	48 99 	cqto
00000001000051b2	48 f7 f9 	idivq	%rcx
00000001000051b5	48 89 45 f0 	movq	%rax, -0x10(%rbp)
00000001000051b9	e9 b1 ff ff ff 	jmp	0x10000516f
00000001000051be	48 8b 45 e0 	movq	-0x20(%rbp), %rax
00000001000051c2	48 89 45 f8 	movq	%rax, -0x8(%rbp)
00000001000051c6	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000051ca	48 83 c4 20 	addq	$0x20, %rsp
00000001000051ce	5d 	popq	%rbp
00000001000051cf	c3 	retq
_count_number:
00000001000051d0	55 	pushq	%rbp
00000001000051d1	48 89 e5 	movq	%rsp, %rbp
00000001000051d4	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000051d8	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
00000001000051df	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
00000001000051e4	0f 85 09 00 00 00 	jne	0x1000051f3
00000001000051ea	8b 45 f4 	movl	-0xc(%rbp), %eax
00000001000051ed	83 c0 01 	addl	$0x1, %eax
00000001000051f0	89 45 f4 	movl	%eax, -0xc(%rbp)
00000001000051f3	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
00000001000051f8	0f 8d 09 00 00 00 	jge	0x100005207
00000001000051fe	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100005201	83 c0 01 	addl	$0x1, %eax
0000000100005204	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100005207	e9 00 00 00 00 	jmp	0x10000520c
000000010000520c	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
0000000100005211	0f 84 22 00 00 00 	je	0x100005239
0000000100005217	b8 0a 00 00 00 	movl	$0xa, %eax
000000010000521c	89 c1 	movl	%eax, %ecx
000000010000521e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100005222	48 99 	cqto
0000000100005224	48 f7 f9 	idivq	%rcx
0000000100005227	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000522b	8b 75 f4 	movl	-0xc(%rbp), %esi
000000010000522e	83 c6 01 	addl	$0x1, %esi
0000000100005231	89 75 f4 	movl	%esi, -0xc(%rbp)
0000000100005234	e9 d3 ff ff ff 	jmp	0x10000520c
0000000100005239	8b 45 f4 	movl	-0xc(%rbp), %eax
000000010000523c	5d 	popq	%rbp
000000010000523d	c3 	retq
000000010000523e	90 	nop
000000010000523f	90 	nop
_ft_putchar:
0000000100005240	55 	pushq	%rbp
0000000100005241	48 89 e5 	movq	%rsp, %rbp
0000000100005244	48 83 ec 10 	subq	$0x10, %rsp
0000000100005248	40 88 f8 	movb	%dil, %al
000000010000524b	bf 01 00 00 00 	movl	$0x1, %edi
0000000100005250	48 8d 75 ff 	leaq	-0x1(%rbp), %rsi
0000000100005254	b9 01 00 00 00 	movl	$0x1, %ecx
0000000100005259	89 ca 	movl	%ecx, %edx
000000010000525b	88 45 ff 	movb	%al, -0x1(%rbp)
000000010000525e	e8 85 92 00 00 	callq	0x10000e4e8 ## symbol stub for: _write
0000000100005263	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100005267	48 83 c4 10 	addq	$0x10, %rsp
000000010000526b	5d 	popq	%rbp
000000010000526c	c3 	retq
000000010000526d	90 	nop
000000010000526e	90 	nop
000000010000526f	90 	nop
_ft_putstr:
0000000100005270	55 	pushq	%rbp
0000000100005271	48 89 e5 	movq	%rsp, %rbp
0000000100005274	48 83 ec 10 	subq	$0x10, %rsp
0000000100005278	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000527c	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
0000000100005283	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
0000000100005288	0f 84 3b 00 00 00 	je	0x1000052c9
000000010000528e	e9 00 00 00 00 	jmp	0x100005293
0000000100005293	48 63 45 f4 	movslq	-0xc(%rbp), %rax
0000000100005297	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000529b	80 3c 01 00 	cmpb	$0x0, (%rcx,%rax)
000000010000529f	0f 84 1f 00 00 00 	je	0x1000052c4
00000001000052a5	48 63 45 f4 	movslq	-0xc(%rbp), %rax
00000001000052a9	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000052ad	0f be 3c 01 	movsbl	(%rcx,%rax), %edi
00000001000052b1	e8 8a ff ff ff 	callq	_ft_putchar
00000001000052b6	8b 7d f4 	movl	-0xc(%rbp), %edi
00000001000052b9	83 c7 01 	addl	$0x1, %edi
00000001000052bc	89 7d f4 	movl	%edi, -0xc(%rbp)
00000001000052bf	e9 cf ff ff ff 	jmp	0x100005293
00000001000052c4	e9 00 00 00 00 	jmp	0x1000052c9
00000001000052c9	48 83 c4 10 	addq	$0x10, %rsp
00000001000052cd	5d 	popq	%rbp
00000001000052ce	c3 	retq
00000001000052cf	90 	nop
_ft_putstr_fd:
00000001000052d0	55 	pushq	%rbp
00000001000052d1	48 89 e5 	movq	%rsp, %rbp
00000001000052d4	48 83 ec 20 	subq	$0x20, %rsp
00000001000052d8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000052dc	89 75 f4 	movl	%esi, -0xc(%rbp)
00000001000052df	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
00000001000052e4	0f 84 2d 00 00 00 	je	0x100005317
00000001000052ea	8b 7d f4 	movl	-0xc(%rbp), %edi
00000001000052ed	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000052f1	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000052f5	89 7d f0 	movl	%edi, -0x10(%rbp)
00000001000052f8	48 89 c7 	movq	%rax, %rdi
00000001000052fb	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
00000001000052ff	e8 7c f8 ff ff 	callq	_ft_strlen
0000000100005304	8b 7d f0 	movl	-0x10(%rbp), %edi
0000000100005307	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
000000010000530b	48 89 c2 	movq	%rax, %rdx
000000010000530e	e8 d5 91 00 00 	callq	0x10000e4e8 ## symbol stub for: _write
0000000100005313	48 89 45 e0 	movq	%rax, -0x20(%rbp)
0000000100005317	48 83 c4 20 	addq	$0x20, %rsp
000000010000531b	5d 	popq	%rbp
000000010000531c	c3 	retq
000000010000531d	90 	nop
000000010000531e	90 	nop
000000010000531f	90 	nop
_ft_lstnew:
0000000100005320	55 	pushq	%rbp
0000000100005321	48 89 e5 	movq	%rsp, %rbp
0000000100005324	48 83 ec 30 	subq	$0x30, %rsp
0000000100005328	b8 18 00 00 00 	movl	$0x18, %eax
000000010000532d	89 c1 	movl	%eax, %ecx
000000010000532f	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100005333	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100005337	48 89 cf 	movq	%rcx, %rdi
000000010000533a	e8 41 fa ff ff 	callq	_ft_memalloc
000000010000533f	48 89 45 e0 	movq	%rax, -0x20(%rbp)
0000000100005343	48 83 f8 00 	cmpq	$0x0, %rax
0000000100005347	0f 85 0d 00 00 00 	jne	0x10000535a
000000010000534d	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100005355	e9 86 00 00 00 	jmp	0x1000053e0
000000010000535a	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
000000010000535f	0f 84 50 00 00 00 	je	0x1000053b5
0000000100005365	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100005369	e8 12 fa ff ff 	callq	_ft_memalloc
000000010000536e	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
0000000100005372	48 89 07 	movq	%rax, (%rdi)
0000000100005375	48 83 f8 00 	cmpq	$0x0, %rax
0000000100005379	0f 85 0d 00 00 00 	jne	0x10000538c
000000010000537f	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100005387	e9 54 00 00 00 	jmp	0x1000053e0
000000010000538c	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100005390	48 8b 38 	movq	(%rax), %rdi
0000000100005393	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100005397	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
000000010000539b	e8 40 f7 ff ff 	callq	_ft_memcpy
00000001000053a0	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
00000001000053a4	48 8b 75 e0 	movq	-0x20(%rbp), %rsi
00000001000053a8	48 89 56 08 	movq	%rdx, 0x8(%rsi)
00000001000053ac	48 89 45 d8 	movq	%rax, -0x28(%rbp)
00000001000053b0	e9 17 00 00 00 	jmp	0x1000053cc
00000001000053b5	48 8b 45 e0 	movq	-0x20(%rbp), %rax
00000001000053b9	48 c7 00 00 00 00 00 	movq	$0x0, (%rax)
00000001000053c0	48 8b 45 e0 	movq	-0x20(%rbp), %rax
00000001000053c4	48 c7 40 08 00 00 00 00 	movq	$0x0, 0x8(%rax)
00000001000053cc	48 8b 45 e0 	movq	-0x20(%rbp), %rax
00000001000053d0	48 c7 40 10 00 00 00 00 	movq	$0x0, 0x10(%rax)
00000001000053d8	48 8b 45 e0 	movq	-0x20(%rbp), %rax
00000001000053dc	48 89 45 f8 	movq	%rax, -0x8(%rbp)
00000001000053e0	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000053e4	48 83 c4 30 	addq	$0x30, %rsp
00000001000053e8	5d 	popq	%rbp
00000001000053e9	c3 	retq
00000001000053ea	90 	nop
00000001000053eb	90 	nop
00000001000053ec	90 	nop
00000001000053ed	90 	nop
00000001000053ee	90 	nop
00000001000053ef	90 	nop
_get_next_line:
00000001000053f0	55 	pushq	%rbp
00000001000053f1	48 89 e5 	movq	%rsp, %rbp
00000001000053f4	48 81 ec a0 00 00 00 	subq	$0xa0, %rsp
00000001000053fb	31 c0 	xorl	%eax, %eax
00000001000053fd	89 c2 	movl	%eax, %edx
00000001000053ff	48 8d 4d 90 	leaq	-0x70(%rbp), %rcx
0000000100005403	4c 8b 05 16 0c 02 00 	movq	0x20c16(%rip), %r8 ## literal pool symbol address: ___stack_chk_guard
000000010000540a	4d 8b 00 	movq	(%r8), %r8
000000010000540d	4c 89 45 f8 	movq	%r8, -0x8(%rbp)
0000000100005411	89 7d 88 	movl	%edi, -0x78(%rbp)
0000000100005414	48 89 75 80 	movq	%rsi, -0x80(%rbp)
0000000100005418	8b 7d 88 	movl	-0x78(%rbp), %edi
000000010000541b	48 89 ce 	movq	%rcx, %rsi
000000010000541e	e8 a7 90 00 00 	callq	0x10000e4ca ## symbol stub for: _read
0000000100005423	48 83 f8 ff 	cmpq	$-0x1, %rax
0000000100005427	0f 84 0b 00 00 00 	je	0x100005438
000000010000542d	48 83 7d 80 00 	cmpq	$0x0, -0x80(%rbp)
0000000100005432	0f 85 0c 00 00 00 	jne	0x100005444
0000000100005438	c7 45 8c ff ff ff ff 	movl	$0xffffffff, -0x74(%rbp)
000000010000543f	e9 33 01 00 00 	jmp	0x100005577
0000000100005444	48 83 3d cc 18 02 00 00 	cmpq	$0x0, 0x218cc(%rip)
000000010000544c	0f 85 16 00 00 00 	jne	0x100005468
0000000100005452	48 8b 3d bf 18 02 00 	movq	_get_next_line.lst_first(%rip), %rdi
0000000100005459	8b 75 88 	movl	-0x78(%rbp), %esi
000000010000545c	e8 4f 01 00 00 	callq	_find_init
0000000100005461	48 89 05 b0 18 02 00 	movq	%rax, _get_next_line.lst_first(%rip)
0000000100005468	48 8b 3d a9 18 02 00 	movq	_get_next_line.lst_first(%rip), %rdi
000000010000546f	8b 75 88 	movl	-0x78(%rbp), %esi
0000000100005472	e8 39 01 00 00 	callq	_find_init
0000000100005477	48 89 85 70 ff ff ff 	movq	%rax, -0x90(%rbp)
000000010000547e	c7 85 7c ff ff ff 01 00 00 00 	movl	$0x1, -0x84(%rbp)
0000000100005488	83 bd 7c ff ff ff 00 	cmpl	$0x0, -0x84(%rbp)
000000010000548f	0f 84 92 00 00 00 	je	0x100005527
0000000100005495	b8 65 00 00 00 	movl	$0x65, %eax
000000010000549a	89 c6 	movl	%eax, %esi
000000010000549c	48 8d 4d 90 	leaq	-0x70(%rbp), %rcx
00000001000054a0	48 89 cf 	movq	%rcx, %rdi
00000001000054a3	e8 08 f6 ff ff 	callq	_ft_bzero
00000001000054a8	48 8d 55 90 	leaq	-0x70(%rbp), %rdx
00000001000054ac	48 8b bd 70 ff ff ff 	movq	-0x90(%rbp), %rdi
00000001000054b3	48 8b 75 80 	movq	-0x80(%rbp), %rsi
00000001000054b7	e8 04 02 00 00 	callq	_condition
00000001000054bc	83 f8 01 	cmpl	$0x1, %eax
00000001000054bf	0f 85 0c 00 00 00 	jne	0x1000054d1
00000001000054c5	c7 45 8c 01 00 00 00 	movl	$0x1, -0x74(%rbp)
00000001000054cc	e9 a6 00 00 00 	jmp	0x100005577
00000001000054d1	b8 64 00 00 00 	movl	$0x64, %eax
00000001000054d6	89 c2 	movl	%eax, %edx
00000001000054d8	48 8d 4d 90 	leaq	-0x70(%rbp), %rcx
00000001000054dc	8b 7d 88 	movl	-0x78(%rbp), %edi
00000001000054df	48 89 ce 	movq	%rcx, %rsi
00000001000054e2	e8 e3 8f 00 00 	callq	0x10000e4ca ## symbol stub for: _read
00000001000054e7	89 c7 	movl	%eax, %edi
00000001000054e9	89 bd 7c ff ff ff 	movl	%edi, -0x84(%rbp)
00000001000054ef	83 bd 7c ff ff ff ff 	cmpl	$-0x1, -0x84(%rbp)
00000001000054f6	0f 85 0c 00 00 00 	jne	0x100005508
00000001000054fc	c7 45 8c ff ff ff ff 	movl	$0xffffffff, -0x74(%rbp)
0000000100005503	e9 6f 00 00 00 	jmp	0x100005577
0000000100005508	48 8d 55 90 	leaq	-0x70(%rbp), %rdx
000000010000550c	48 8b bd 70 ff ff ff 	movq	-0x90(%rbp), %rdi
0000000100005513	48 8b 75 80 	movq	-0x80(%rbp), %rsi
0000000100005517	e8 a4 01 00 00 	callq	_condition
000000010000551c	89 85 6c ff ff ff 	movl	%eax, -0x94(%rbp)
0000000100005522	e9 61 ff ff ff 	jmp	0x100005488
0000000100005527	83 bd 7c ff ff ff 00 	cmpl	$0x0, -0x84(%rbp)
000000010000552e	0f 85 2a 00 00 00 	jne	0x10000555e
0000000100005534	48 8b 85 70 ff ff ff 	movq	-0x90(%rbp), %rax
000000010000553b	48 83 78 08 00 	cmpq	$0x0, 0x8(%rax)
0000000100005540	0f 84 18 00 00 00 	je	0x10000555e
0000000100005546	48 8b bd 70 ff ff ff 	movq	-0x90(%rbp), %rdi
000000010000554d	48 8b 75 80 	movq	-0x80(%rbp), %rsi
0000000100005551	e8 7a 02 00 00 	callq	_end_of_file
0000000100005556	89 45 8c 	movl	%eax, -0x74(%rbp)
0000000100005559	e9 19 00 00 00 	jmp	0x100005577
000000010000555e	48 8b bd 70 ff ff ff 	movq	-0x90(%rbp), %rdi
0000000100005565	e8 c6 02 00 00 	callq	_sup_lst
000000010000556a	c7 45 8c 00 00 00 00 	movl	$0x0, -0x74(%rbp)
0000000100005571	89 85 68 ff ff ff 	movl	%eax, -0x98(%rbp)
0000000100005577	8b 45 8c 	movl	-0x74(%rbp), %eax
000000010000557a	48 8b 0d 9f 0a 02 00 	movq	0x20a9f(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
0000000100005581	48 8b 09 	movq	(%rcx), %rcx
0000000100005584	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100005588	48 39 d1 	cmpq	%rdx, %rcx
000000010000558b	89 85 64 ff ff ff 	movl	%eax, -0x9c(%rbp)
0000000100005591	0f 85 0f 00 00 00 	jne	0x1000055a6
0000000100005597	8b 85 64 ff ff ff 	movl	-0x9c(%rbp), %eax
000000010000559d	48 81 c4 a0 00 00 00 	addq	$0xa0, %rsp
00000001000055a4	5d 	popq	%rbp
00000001000055a5	c3 	retq
00000001000055a6	e8 b7 8d 00 00 	callq	0x10000e362 ## symbol stub for: ___stack_chk_fail
00000001000055ab	0f 1f 44 00 00 	nopl	(%rax,%rax)
_find_init:
00000001000055b0	55 	pushq	%rbp
00000001000055b1	48 89 e5 	movq	%rsp, %rbp
00000001000055b4	48 83 ec 30 	subq	$0x30, %rsp
00000001000055b8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
00000001000055bc	89 75 ec 	movl	%esi, -0x14(%rbp)
00000001000055bf	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
00000001000055c4	0f 85 5b 00 00 00 	jne	0x100005625
00000001000055ca	b8 28 00 00 00 	movl	$0x28, %eax
00000001000055cf	89 c7 	movl	%eax, %edi
00000001000055d1	e8 aa f7 ff ff 	callq	_ft_memalloc
00000001000055d6	48 89 45 f0 	movq	%rax, -0x10(%rbp)
00000001000055da	48 83 f8 00 	cmpq	$0x0, %rax
00000001000055de	0f 85 07 00 00 00 	jne	0x1000055eb
00000001000055e4	31 ff 	xorl	%edi, %edi
00000001000055e6	e8 8f 8d 00 00 	callq	0x10000e37a ## symbol stub for: _exit
00000001000055eb	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000055ef	48 c7 40 08 00 00 00 00 	movq	$0x0, 0x8(%rax)
00000001000055f7	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000055fb	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000055ff	48 89 41 20 	movq	%rax, 0x20(%rcx)
0000000100005603	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100005607	48 c7 40 18 00 00 00 00 	movq	$0x0, 0x18(%rax)
000000010000560f	8b 55 ec 	movl	-0x14(%rbp), %edx
0000000100005612	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100005616	89 10 	movl	%edx, (%rax)
0000000100005618	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000561c	48 89 45 f8 	movq	%rax, -0x8(%rbp)
0000000100005620	e9 85 00 00 00 	jmp	0x1000056aa
0000000100005625	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100005629	48 8b 40 20 	movq	0x20(%rax), %rax
000000010000562d	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100005631	31 c0 	xorl	%eax, %eax
0000000100005633	88 c1 	movb	%al, %cl
0000000100005635	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
000000010000563a	88 4d df 	movb	%cl, -0x21(%rbp)
000000010000563d	0f 84 0f 00 00 00 	je	0x100005652
0000000100005643	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100005647	8b 08 	movl	(%rax), %ecx
0000000100005649	3b 4d ec 	cmpl	-0x14(%rbp), %ecx
000000010000564c	0f 95 c2 	setne	%dl
000000010000564f	88 55 df 	movb	%dl, -0x21(%rbp)
0000000100005652	8a 45 df 	movb	-0x21(%rbp), %al
0000000100005655	a8 01 	testb	$0x1, %al
0000000100005657	0f 85 05 00 00 00 	jne	0x100005662
000000010000565d	e9 19 00 00 00 	jmp	0x10000567b
0000000100005662	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100005666	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000566a	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000566e	48 8b 40 18 	movq	0x18(%rax), %rax
0000000100005672	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100005676	e9 b6 ff ff ff 	jmp	0x100005631
000000010000567b	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100005680	0f 85 1c 00 00 00 	jne	0x1000056a2
0000000100005686	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000568a	8b 75 ec 	movl	-0x14(%rbp), %esi
000000010000568d	e8 1e ff ff ff 	callq	_find_init
0000000100005692	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100005696	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000569a	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
000000010000569e	48 89 47 18 	movq	%rax, 0x18(%rdi)
00000001000056a2	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000056a6	48 89 45 f8 	movq	%rax, -0x8(%rbp)
00000001000056aa	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000056ae	48 83 c4 30 	addq	$0x30, %rsp
00000001000056b2	5d 	popq	%rbp
00000001000056b3	c3 	retq
00000001000056b4	66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_condition:
00000001000056c0	55 	pushq	%rbp
00000001000056c1	48 89 e5 	movq	%rsp, %rbp
00000001000056c4	48 83 ec 30 	subq	$0x30, %rsp
00000001000056c8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
00000001000056cc	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
00000001000056d0	48 89 55 e0 	movq	%rdx, -0x20(%rbp)
00000001000056d4	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000056d8	48 83 7a 08 00 	cmpq	$0x0, 0x8(%rdx)
00000001000056dd	0f 84 b5 00 00 00 	je	0x100005798
00000001000056e3	be 0a 00 00 00 	movl	$0xa, %esi
00000001000056e8	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000056ec	48 8b 78 08 	movq	0x8(%rax), %rdi
00000001000056f0	e8 ab f5 ff ff 	callq	_ft_strchr
00000001000056f5	48 89 45 d8 	movq	%rax, -0x28(%rbp)
00000001000056f9	48 83 7d d8 00 	cmpq	$0x0, -0x28(%rbp)
00000001000056fe	0f 84 61 00 00 00 	je	0x100005765
0000000100005704	31 f6 	xorl	%esi, %esi
0000000100005706	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000570a	48 8b 78 08 	movq	0x8(%rax), %rdi
000000010000570e	48 8b 45 d8 	movq	-0x28(%rbp), %rax
0000000100005712	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100005716	48 8b 49 08 	movq	0x8(%rcx), %rcx
000000010000571a	48 29 c8 	subq	%rcx, %rax
000000010000571d	48 89 c2 	movq	%rax, %rdx
0000000100005720	e8 8b f7 ff ff 	callq	_ft_strsub
0000000100005725	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
0000000100005729	48 89 01 	movq	%rax, (%rcx)
000000010000572c	48 8b 45 d8 	movq	-0x28(%rbp), %rax
0000000100005730	48 83 c0 01 	addq	$0x1, %rax
0000000100005734	48 89 c7 	movq	%rax, %rdi
0000000100005737	e8 84 f4 ff ff 	callq	_ft_strdup
000000010000573c	48 89 45 d0 	movq	%rax, -0x30(%rbp)
0000000100005740	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100005744	48 8b 78 08 	movq	0x8(%rax), %rdi
0000000100005748	e8 39 8c 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000574d	48 8b 45 d0 	movq	-0x30(%rbp), %rax
0000000100005751	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100005755	48 89 41 08 	movq	%rax, 0x8(%rcx)
0000000100005759	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100005760	e9 5a 00 00 00 	jmp	0x1000057bf
0000000100005765	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100005769	48 8b 78 08 	movq	0x8(%rax), %rdi
000000010000576d	48 8b 75 e0 	movq	-0x20(%rbp), %rsi
0000000100005771	e8 5a f8 ff ff 	callq	_ft_strjoin
0000000100005776	48 89 45 d0 	movq	%rax, -0x30(%rbp)
000000010000577a	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000577e	48 8b 78 08 	movq	0x8(%rax), %rdi
0000000100005782	e8 ff 8b 00 00 	callq	0x10000e386 ## symbol stub for: _free
0000000100005787	48 8b 45 d0 	movq	-0x30(%rbp), %rax
000000010000578b	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000578f	48 89 46 08 	movq	%rax, 0x8(%rsi)
0000000100005793	e9 00 00 00 00 	jmp	0x100005798
0000000100005798	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000579c	48 83 78 08 00 	cmpq	$0x0, 0x8(%rax)
00000001000057a1	0f 85 11 00 00 00 	jne	0x1000057b8
00000001000057a7	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
00000001000057ab	e8 10 f4 ff ff 	callq	_ft_strdup
00000001000057b0	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000057b4	48 89 47 08 	movq	%rax, 0x8(%rdi)
00000001000057b8	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
00000001000057bf	8b 45 fc 	movl	-0x4(%rbp), %eax
00000001000057c2	48 83 c4 30 	addq	$0x30, %rsp
00000001000057c6	5d 	popq	%rbp
00000001000057c7	c3 	retq
00000001000057c8	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_end_of_file:
00000001000057d0	55 	pushq	%rbp
00000001000057d1	48 89 e5 	movq	%rsp, %rbp
00000001000057d4	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
00000001000057d8	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
00000001000057dc	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000057e0	48 8b 76 08 	movq	0x8(%rsi), %rsi
00000001000057e4	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
00000001000057e8	48 89 37 	movq	%rsi, (%rdi)
00000001000057eb	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000057ef	48 8b 76 08 	movq	0x8(%rsi), %rsi
00000001000057f3	0f be 06 	movsbl	(%rsi), %eax
00000001000057f6	83 f8 00 	cmpl	$0x0, %eax
00000001000057f9	0f 85 0c 00 00 00 	jne	0x10000580b
00000001000057ff	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100005806	e9 13 00 00 00 	jmp	0x10000581e
000000010000580b	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000580f	48 c7 40 08 00 00 00 00 	movq	$0x0, 0x8(%rax)
0000000100005817	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
000000010000581e	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100005821	5d 	popq	%rbp
0000000100005822	c3 	retq
0000000100005823	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_sup_lst:
0000000100005830	55 	pushq	%rbp
0000000100005831	48 89 e5 	movq	%rsp, %rbp
0000000100005834	48 83 ec 20 	subq	$0x20, %rsp
0000000100005838	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000583c	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100005840	48 8b 7f 20 	movq	0x20(%rdi), %rdi
0000000100005844	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100005848	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000584c	48 8b 7f 18 	movq	0x18(%rdi), %rdi
0000000100005850	48 3b 7d f8 	cmpq	-0x8(%rbp), %rdi
0000000100005854	0f 85 10 00 00 00 	jne	0x10000586a
000000010000585a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000585e	48 8b 40 18 	movq	0x18(%rax), %rax
0000000100005862	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100005866	48 89 41 18 	movq	%rax, 0x18(%rcx)
000000010000586a	e9 00 00 00 00 	jmp	0x10000586f
000000010000586f	31 c0 	xorl	%eax, %eax
0000000100005871	88 c1 	movb	%al, %cl
0000000100005873	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100005877	48 8b 52 18 	movq	0x18(%rdx), %rdx
000000010000587b	48 3b 55 f8 	cmpq	-0x8(%rbp), %rdx
000000010000587f	88 4d ef 	movb	%cl, -0x11(%rbp)
0000000100005882	0f 84 0f 00 00 00 	je	0x100005897
0000000100005888	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000588c	48 83 78 18 00 	cmpq	$0x0, 0x18(%rax)
0000000100005891	0f 95 c1 	setne	%cl
0000000100005894	88 4d ef 	movb	%cl, -0x11(%rbp)
0000000100005897	8a 45 ef 	movb	-0x11(%rbp), %al
000000010000589a	a8 01 	testb	$0x1, %al
000000010000589c	0f 85 05 00 00 00 	jne	0x1000058a7
00000001000058a2	e9 11 00 00 00 	jmp	0x1000058b8
00000001000058a7	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000058ab	48 8b 40 18 	movq	0x18(%rax), %rax
00000001000058af	48 89 45 f0 	movq	%rax, -0x10(%rbp)
00000001000058b3	e9 b7 ff ff ff 	jmp	0x10000586f
00000001000058b8	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000058bc	48 8b 40 18 	movq	0x18(%rax), %rax
00000001000058c0	48 3b 45 f8 	cmpq	-0x8(%rbp), %rax
00000001000058c4	0f 85 10 00 00 00 	jne	0x1000058da
00000001000058ca	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000058ce	48 8b 40 18 	movq	0x18(%rax), %rax
00000001000058d2	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000058d6	48 89 41 18 	movq	%rax, 0x18(%rcx)
00000001000058da	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000058de	48 8b 78 08 	movq	0x8(%rax), %rdi
00000001000058e2	e8 9f 8a 00 00 	callq	0x10000e386 ## symbol stub for: _free
00000001000058e7	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000058eb	48 89 c7 	movq	%rax, %rdi
00000001000058ee	e8 93 8a 00 00 	callq	0x10000e386 ## symbol stub for: _free
00000001000058f3	b8 01 00 00 00 	movl	$0x1, %eax
00000001000058f8	48 83 c4 20 	addq	$0x20, %rsp
00000001000058fc	5d 	popq	%rbp
00000001000058fd	c3 	retq
00000001000058fe	90 	nop
00000001000058ff	90 	nop
_ft_error:
0000000100005900	55 	pushq	%rbp
0000000100005901	48 89 e5 	movq	%rsp, %rbp
0000000100005904	48 83 ec 10 	subq	$0x10, %rsp
0000000100005908	be 02 00 00 00 	movl	$0x2, %esi
000000010000590d	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100005911	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100005915	e8 b6 f9 ff ff 	callq	_ft_putstr_fd
000000010000591a	31 ff 	xorl	%edi, %edi
000000010000591c	e8 59 8a 00 00 	callq	0x10000e37a ## symbol stub for: _exit
0000000100005921	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_ft_ret_error:
0000000100005930	55 	pushq	%rbp
0000000100005931	48 89 e5 	movq	%rsp, %rbp
0000000100005934	48 83 ec 10 	subq	$0x10, %rsp
0000000100005938	be 02 00 00 00 	movl	$0x2, %esi
000000010000593d	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100005941	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100005945	e8 86 f9 ff ff 	callq	_ft_putstr_fd
000000010000594a	31 c0 	xorl	%eax, %eax
000000010000594c	48 83 c4 10 	addq	$0x10, %rsp
0000000100005950	5d 	popq	%rbp
0000000100005951	c3 	retq
0000000100005952	90 	nop
0000000100005953	90 	nop
0000000100005954	90 	nop
0000000100005955	90 	nop
0000000100005956	90 	nop
0000000100005957	90 	nop
0000000100005958	90 	nop
0000000100005959	90 	nop
000000010000595a	90 	nop
000000010000595b	90 	nop
000000010000595c	90 	nop
000000010000595d	90 	nop
000000010000595e	90 	nop
000000010000595f	90 	nop
_ft_memrealloc:
0000000100005960	55 	pushq	%rbp
0000000100005961	48 89 e5 	movq	%rsp, %rbp
0000000100005964	48 83 ec 30 	subq	$0x30, %rsp
0000000100005968	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000596c	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100005970	48 89 55 e0 	movq	%rdx, -0x20(%rbp)
0000000100005974	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
0000000100005978	e8 03 f4 ff ff 	callq	_ft_memalloc
000000010000597d	48 89 45 d8 	movq	%rax, -0x28(%rbp)
0000000100005981	48 83 f8 00 	cmpq	$0x0, %rax
0000000100005985	0f 85 0d 00 00 00 	jne	0x100005998
000000010000598b	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100005993	e9 54 00 00 00 	jmp	0x1000059ec
0000000100005998	48 83 7d d8 00 	cmpq	$0x0, -0x28(%rbp)
000000010000599d	0f 85 0d 00 00 00 	jne	0x1000059b0
00000001000059a3	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
00000001000059ab	e9 3c 00 00 00 	jmp	0x1000059ec
00000001000059b0	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
00000001000059b5	0f 84 15 00 00 00 	je	0x1000059d0
00000001000059bb	48 8b 7d d8 	movq	-0x28(%rbp), %rdi
00000001000059bf	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000059c3	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
00000001000059c7	e8 14 f1 ff ff 	callq	_ft_memcpy
00000001000059cc	48 89 45 d8 	movq	%rax, -0x28(%rbp)
00000001000059d0	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
00000001000059d5	0f 84 09 00 00 00 	je	0x1000059e4
00000001000059db	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000059df	e8 a2 89 00 00 	callq	0x10000e386 ## symbol stub for: _free
00000001000059e4	48 8b 45 d8 	movq	-0x28(%rbp), %rax
00000001000059e8	48 89 45 f8 	movq	%rax, -0x8(%rbp)
00000001000059ec	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000059f0	48 83 c4 30 	addq	$0x30, %rsp
00000001000059f4	5d 	popq	%rbp
00000001000059f5	c3 	retq
00000001000059f6	90 	nop
00000001000059f7	90 	nop
00000001000059f8	90 	nop
00000001000059f9	90 	nop
00000001000059fa	90 	nop
00000001000059fb	90 	nop
00000001000059fc	90 	nop
00000001000059fd	90 	nop
00000001000059fe	90 	nop
00000001000059ff	90 	nop
_ft_lstinsert:
0000000100005a00	55 	pushq	%rbp
0000000100005a01	48 89 e5 	movq	%rsp, %rbp
0000000100005a04	48 83 ec 10 	subq	$0x10, %rsp
0000000100005a08	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100005a0c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100005a10	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
0000000100005a15	0f 84 0b 00 00 00 	je	0x100005a26
0000000100005a1b	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100005a20	0f 85 05 00 00 00 	jne	0x100005a2b
0000000100005a26	e9 35 00 00 00 	jmp	0x100005a60
0000000100005a2b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100005a2f	48 83 38 00 	cmpq	$0x0, (%rax)
0000000100005a33	0f 85 10 00 00 00 	jne	0x100005a49
0000000100005a39	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100005a3d	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100005a41	48 89 01 	movq	%rax, (%rcx)
0000000100005a44	e9 17 00 00 00 	jmp	0x100005a60
0000000100005a49	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100005a4d	48 8b 00 	movq	(%rax), %rax
0000000100005a50	48 83 c0 10 	addq	$0x10, %rax
0000000100005a54	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100005a58	48 89 c7 	movq	%rax, %rdi
0000000100005a5b	e8 a0 ff ff ff 	callq	_ft_lstinsert
0000000100005a60	48 83 c4 10 	addq	$0x10, %rsp
0000000100005a64	5d 	popq	%rbp
0000000100005a65	c3 	retq
0000000100005a66	90 	nop
0000000100005a67	90 	nop
0000000100005a68	90 	nop
0000000100005a69	90 	nop
0000000100005a6a	90 	nop
0000000100005a6b	90 	nop
0000000100005a6c	90 	nop
0000000100005a6d	90 	nop
0000000100005a6e	90 	nop
0000000100005a6f	90 	nop
_ft_isin:
0000000100005a70	55 	pushq	%rbp
0000000100005a71	48 89 e5 	movq	%rsp, %rbp
0000000100005a74	40 88 f0 	movb	%sil, %al
0000000100005a77	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100005a7b	88 45 ef 	movb	%al, -0x11(%rbp)
0000000100005a7e	c7 45 e8 00 00 00 00 	movl	$0x0, -0x18(%rbp)
0000000100005a85	48 63 45 e8 	movslq	-0x18(%rbp), %rax
0000000100005a89	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100005a8d	80 3c 01 00 	cmpb	$0x0, (%rcx,%rax)
0000000100005a91	0f 84 32 00 00 00 	je	0x100005ac9
0000000100005a97	48 63 45 e8 	movslq	-0x18(%rbp), %rax
0000000100005a9b	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100005a9f	0f be 14 01 	movsbl	(%rcx,%rax), %edx
0000000100005aa3	0f be 75 ef 	movsbl	-0x11(%rbp), %esi
0000000100005aa7	39 f2 	cmpl	%esi, %edx
0000000100005aa9	0f 85 0c 00 00 00 	jne	0x100005abb
0000000100005aaf	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100005ab6	e9 15 00 00 00 	jmp	0x100005ad0
0000000100005abb	8b 45 e8 	movl	-0x18(%rbp), %eax
0000000100005abe	83 c0 01 	addl	$0x1, %eax
0000000100005ac1	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100005ac4	e9 bc ff ff ff 	jmp	0x100005a85
0000000100005ac9	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100005ad0	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100005ad3	5d 	popq	%rbp
0000000100005ad4	c3 	retq
0000000100005ad5	90 	nop
0000000100005ad6	90 	nop
0000000100005ad7	90 	nop
0000000100005ad8	90 	nop
0000000100005ad9	90 	nop
0000000100005ada	90 	nop
0000000100005adb	90 	nop
0000000100005adc	90 	nop
0000000100005add	90 	nop
0000000100005ade	90 	nop
0000000100005adf	90 	nop
_ft_printf:
0000000100005ae0	55 	pushq	%rbp
0000000100005ae1	48 89 e5 	movq	%rsp, %rbp
0000000100005ae4	48 81 ec 80 03 00 00 	subq	$0x380, %rsp
0000000100005aeb	84 c0 	testb	%al, %al
0000000100005aed	0f 29 bd 40 fd ff ff 	movaps	%xmm7, -0x2c0(%rbp)
0000000100005af4	0f 29 b5 30 fd ff ff 	movaps	%xmm6, -0x2d0(%rbp)
0000000100005afb	0f 29 ad 20 fd ff ff 	movaps	%xmm5, -0x2e0(%rbp)
0000000100005b02	0f 29 a5 10 fd ff ff 	movaps	%xmm4, -0x2f0(%rbp)
0000000100005b09	0f 29 9d 00 fd ff ff 	movaps	%xmm3, -0x300(%rbp)
0000000100005b10	0f 29 95 f0 fc ff ff 	movaps	%xmm2, -0x310(%rbp)
0000000100005b17	0f 29 8d e0 fc ff ff 	movaps	%xmm1, -0x320(%rbp)
0000000100005b1e	0f 29 85 d0 fc ff ff 	movaps	%xmm0, -0x330(%rbp)
0000000100005b25	48 89 bd c8 fc ff ff 	movq	%rdi, -0x338(%rbp)
0000000100005b2c	4c 89 8d c0 fc ff ff 	movq	%r9, -0x340(%rbp)
0000000100005b33	4c 89 85 b8 fc ff ff 	movq	%r8, -0x348(%rbp)
0000000100005b3a	48 89 8d b0 fc ff ff 	movq	%rcx, -0x350(%rbp)
0000000100005b41	48 89 95 a8 fc ff ff 	movq	%rdx, -0x358(%rbp)
0000000100005b48	48 89 b5 a0 fc ff ff 	movq	%rsi, -0x360(%rbp)
0000000100005b4f	0f 84 70 00 00 00 	je	0x100005bc5
0000000100005b55	0f 28 85 d0 fc ff ff 	movaps	-0x330(%rbp), %xmm0
0000000100005b5c	0f 29 85 80 fd ff ff 	movaps	%xmm0, -0x280(%rbp)
0000000100005b63	0f 28 8d e0 fc ff ff 	movaps	-0x320(%rbp), %xmm1
0000000100005b6a	0f 29 8d 90 fd ff ff 	movaps	%xmm1, -0x270(%rbp)
0000000100005b71	0f 28 95 f0 fc ff ff 	movaps	-0x310(%rbp), %xmm2
0000000100005b78	0f 29 95 a0 fd ff ff 	movaps	%xmm2, -0x260(%rbp)
0000000100005b7f	0f 28 9d 00 fd ff ff 	movaps	-0x300(%rbp), %xmm3
0000000100005b86	0f 29 9d b0 fd ff ff 	movaps	%xmm3, -0x250(%rbp)
0000000100005b8d	0f 28 a5 10 fd ff ff 	movaps	-0x2f0(%rbp), %xmm4
0000000100005b94	0f 29 a5 c0 fd ff ff 	movaps	%xmm4, -0x240(%rbp)
0000000100005b9b	0f 28 ad 20 fd ff ff 	movaps	-0x2e0(%rbp), %xmm5
0000000100005ba2	0f 29 ad d0 fd ff ff 	movaps	%xmm5, -0x230(%rbp)
0000000100005ba9	0f 28 b5 30 fd ff ff 	movaps	-0x2d0(%rbp), %xmm6
0000000100005bb0	0f 29 b5 e0 fd ff ff 	movaps	%xmm6, -0x220(%rbp)
0000000100005bb7	0f 28 bd 40 fd ff ff 	movaps	-0x2c0(%rbp), %xmm7
0000000100005bbe	0f 29 bd f0 fd ff ff 	movaps	%xmm7, -0x210(%rbp)
0000000100005bc5	48 8b 85 c0 fc ff ff 	movq	-0x340(%rbp), %rax
0000000100005bcc	48 89 85 78 fd ff ff 	movq	%rax, -0x288(%rbp)
0000000100005bd3	48 8b 8d b8 fc ff ff 	movq	-0x348(%rbp), %rcx
0000000100005bda	48 89 8d 70 fd ff ff 	movq	%rcx, -0x290(%rbp)
0000000100005be1	48 8b 95 b0 fc ff ff 	movq	-0x350(%rbp), %rdx
0000000100005be8	48 89 95 68 fd ff ff 	movq	%rdx, -0x298(%rbp)
0000000100005bef	48 8b b5 a8 fc ff ff 	movq	-0x358(%rbp), %rsi
0000000100005bf6	48 89 b5 60 fd ff ff 	movq	%rsi, -0x2a0(%rbp)
0000000100005bfd	48 8b bd a0 fc ff ff 	movq	-0x360(%rbp), %rdi
0000000100005c04	48 89 bd 58 fd ff ff 	movq	%rdi, -0x2a8(%rbp)
0000000100005c0b	4c 8b 85 c8 fc ff ff 	movq	-0x338(%rbp), %r8
0000000100005c12	41 b9 e8 01 00 00 	movl	$0x1e8, %r9d
0000000100005c18	44 89 ce 	movl	%r9d, %esi
0000000100005c1b	4c 8d 95 10 fe ff ff 	leaq	-0x1f0(%rbp), %r10
0000000100005c22	4c 8b 1d f7 03 02 00 	movq	0x203f7(%rip), %r11 ## literal pool symbol address: ___stack_chk_guard
0000000100005c29	4d 8b 1b 	movq	(%r11), %r11
0000000100005c2c	4c 89 5d f8 	movq	%r11, -0x8(%rbp)
0000000100005c30	4c 89 85 00 fe ff ff 	movq	%r8, -0x200(%rbp)
0000000100005c37	4c 89 d7 	movq	%r10, %rdi
0000000100005c3a	e8 71 ee ff ff 	callq	_ft_bzero
0000000100005c3f	48 c7 85 10 fe ff ff 00 00 00 00 	movq	$0x0, -0x1f0(%rbp)
0000000100005c4a	48 83 bd 00 fe ff ff 00 	cmpq	$0x0, -0x200(%rbp)
0000000100005c52	0f 85 0f 00 00 00 	jne	0x100005c67
0000000100005c58	c7 85 0c fe ff ff 00 00 00 00 	movl	$0x0, -0x1f4(%rbp)
0000000100005c62	e9 fd 00 00 00 	jmp	0x100005d64
0000000100005c67	48 8b 85 00 fe ff ff 	movq	-0x200(%rbp), %rax
0000000100005c6e	0f be 08 	movsbl	(%rax), %ecx
0000000100005c71	83 f9 25 	cmpl	$0x25, %ecx
0000000100005c74	0f 85 23 00 00 00 	jne	0x100005c9d
0000000100005c7a	48 8b 85 00 fe ff ff 	movq	-0x200(%rbp), %rax
0000000100005c81	0f be 48 01 	movsbl	0x1(%rax), %ecx
0000000100005c85	83 f9 00 	cmpl	$0x0, %ecx
0000000100005c88	0f 85 0f 00 00 00 	jne	0x100005c9d
0000000100005c8e	c7 85 0c fe ff ff 00 00 00 00 	movl	$0x0, -0x1f4(%rbp)
0000000100005c98	e9 c7 00 00 00 	jmp	0x100005d64
0000000100005c9d	b8 2c 01 00 00 	movl	$0x12c, %eax
0000000100005ca2	89 c6 	movl	%eax, %esi
0000000100005ca4	48 8d 8d 10 fe ff ff 	leaq	-0x1f0(%rbp), %rcx
0000000100005cab	c7 85 c4 fe ff ff 00 00 00 00 	movl	$0x0, -0x13c(%rbp)
0000000100005cb5	48 81 c1 b8 00 00 00 	addq	$0xb8, %rcx
0000000100005cbc	48 89 cf 	movq	%rcx, %rdi
0000000100005cbf	e8 ec ed ff ff 	callq	_ft_bzero
0000000100005cc4	48 8d 8d 10 fe ff ff 	leaq	-0x1f0(%rbp), %rcx
0000000100005ccb	c7 85 b0 fe ff ff 01 00 00 00 	movl	$0x1, -0x150(%rbp)
0000000100005cd5	48 89 ce 	movq	%rcx, %rsi
0000000100005cd8	48 83 c6 08 	addq	$0x8, %rsi
0000000100005cdc	48 8d bd 50 fd ff ff 	leaq	-0x2b0(%rbp), %rdi
0000000100005ce3	48 89 7e 10 	movq	%rdi, 0x10(%rsi)
0000000100005ce7	48 8d 7d 10 	leaq	0x10(%rbp), %rdi
0000000100005ceb	48 89 7e 08 	movq	%rdi, 0x8(%rsi)
0000000100005cef	c7 46 04 30 00 00 00 	movl	$0x30, 0x4(%rsi)
0000000100005cf6	c7 06 08 00 00 00 	movl	$0x8, (%rsi)
0000000100005cfc	48 8b bd 00 fe ff ff 	movq	-0x200(%rbp), %rdi
0000000100005d03	48 89 ce 	movq	%rcx, %rsi
0000000100005d06	e8 35 30 00 00 	callq	_printf_loop
0000000100005d0b	48 8d 8d 10 fe ff ff 	leaq	-0x1f0(%rbp), %rcx
0000000100005d12	48 83 c1 08 	addq	$0x8, %rcx
0000000100005d16	0f be 85 c8 fe ff ff 	movsbl	-0x138(%rbp), %eax
0000000100005d1d	83 f8 00 	cmpl	$0x0, %eax
0000000100005d20	48 89 8d 98 fc ff ff 	movq	%rcx, -0x368(%rbp)
0000000100005d27	0f 84 28 00 00 00 	je	0x100005d55
0000000100005d2d	bf 01 00 00 00 	movl	$0x1, %edi
0000000100005d32	48 8d 85 10 fe ff ff 	leaq	-0x1f0(%rbp), %rax
0000000100005d39	48 05 b8 00 00 00 	addq	$0xb8, %rax
0000000100005d3f	48 63 95 c4 fe ff ff 	movslq	-0x13c(%rbp), %rdx
0000000100005d46	48 89 c6 	movq	%rax, %rsi
0000000100005d49	e8 9a 87 00 00 	callq	0x10000e4e8 ## symbol stub for: _write
0000000100005d4e	48 89 85 90 fc ff ff 	movq	%rax, -0x370(%rbp)
0000000100005d55	48 8b 85 10 fe ff ff 	movq	-0x1f0(%rbp), %rax
0000000100005d5c	89 c1 	movl	%eax, %ecx
0000000100005d5e	89 8d 0c fe ff ff 	movl	%ecx, -0x1f4(%rbp)
0000000100005d64	8b 85 0c fe ff ff 	movl	-0x1f4(%rbp), %eax
0000000100005d6a	48 8b 0d af 02 02 00 	movq	0x202af(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
0000000100005d71	48 8b 09 	movq	(%rcx), %rcx
0000000100005d74	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100005d78	48 39 d1 	cmpq	%rdx, %rcx
0000000100005d7b	89 85 8c fc ff ff 	movl	%eax, -0x374(%rbp)
0000000100005d81	0f 85 0f 00 00 00 	jne	0x100005d96
0000000100005d87	8b 85 8c fc ff ff 	movl	-0x374(%rbp), %eax
0000000100005d8d	48 81 c4 80 03 00 00 	addq	$0x380, %rsp
0000000100005d94	5d 	popq	%rbp
0000000100005d95	c3 	retq
0000000100005d96	e8 c7 85 00 00 	callq	0x10000e362 ## symbol stub for: ___stack_chk_fail
0000000100005d9b	0f 1f 44 00 00 	nopl	(%rax,%rax)
_ft_dprintf:
0000000100005da0	55 	pushq	%rbp
0000000100005da1	48 89 e5 	movq	%rsp, %rbp
0000000100005da4	48 81 ec 80 03 00 00 	subq	$0x380, %rsp
0000000100005dab	84 c0 	testb	%al, %al
0000000100005dad	0f 29 bd 40 fd ff ff 	movaps	%xmm7, -0x2c0(%rbp)
0000000100005db4	0f 29 b5 30 fd ff ff 	movaps	%xmm6, -0x2d0(%rbp)
0000000100005dbb	0f 29 ad 20 fd ff ff 	movaps	%xmm5, -0x2e0(%rbp)
0000000100005dc2	0f 29 a5 10 fd ff ff 	movaps	%xmm4, -0x2f0(%rbp)
0000000100005dc9	0f 29 9d 00 fd ff ff 	movaps	%xmm3, -0x300(%rbp)
0000000100005dd0	0f 29 95 f0 fc ff ff 	movaps	%xmm2, -0x310(%rbp)
0000000100005dd7	0f 29 8d e0 fc ff ff 	movaps	%xmm1, -0x320(%rbp)
0000000100005dde	0f 29 85 d0 fc ff ff 	movaps	%xmm0, -0x330(%rbp)
0000000100005de5	89 bd cc fc ff ff 	movl	%edi, -0x334(%rbp)
0000000100005deb	4c 89 8d c0 fc ff ff 	movq	%r9, -0x340(%rbp)
0000000100005df2	4c 89 85 b8 fc ff ff 	movq	%r8, -0x348(%rbp)
0000000100005df9	48 89 8d b0 fc ff ff 	movq	%rcx, -0x350(%rbp)
0000000100005e00	48 89 95 a8 fc ff ff 	movq	%rdx, -0x358(%rbp)
0000000100005e07	48 89 b5 a0 fc ff ff 	movq	%rsi, -0x360(%rbp)
0000000100005e0e	0f 84 70 00 00 00 	je	0x100005e84
0000000100005e14	0f 28 85 d0 fc ff ff 	movaps	-0x330(%rbp), %xmm0
0000000100005e1b	0f 29 85 80 fd ff ff 	movaps	%xmm0, -0x280(%rbp)
0000000100005e22	0f 28 8d e0 fc ff ff 	movaps	-0x320(%rbp), %xmm1
0000000100005e29	0f 29 8d 90 fd ff ff 	movaps	%xmm1, -0x270(%rbp)
0000000100005e30	0f 28 95 f0 fc ff ff 	movaps	-0x310(%rbp), %xmm2
0000000100005e37	0f 29 95 a0 fd ff ff 	movaps	%xmm2, -0x260(%rbp)
0000000100005e3e	0f 28 9d 00 fd ff ff 	movaps	-0x300(%rbp), %xmm3
0000000100005e45	0f 29 9d b0 fd ff ff 	movaps	%xmm3, -0x250(%rbp)
0000000100005e4c	0f 28 a5 10 fd ff ff 	movaps	-0x2f0(%rbp), %xmm4
0000000100005e53	0f 29 a5 c0 fd ff ff 	movaps	%xmm4, -0x240(%rbp)
0000000100005e5a	0f 28 ad 20 fd ff ff 	movaps	-0x2e0(%rbp), %xmm5
0000000100005e61	0f 29 ad d0 fd ff ff 	movaps	%xmm5, -0x230(%rbp)
0000000100005e68	0f 28 b5 30 fd ff ff 	movaps	-0x2d0(%rbp), %xmm6
0000000100005e6f	0f 29 b5 e0 fd ff ff 	movaps	%xmm6, -0x220(%rbp)
0000000100005e76	0f 28 bd 40 fd ff ff 	movaps	-0x2c0(%rbp), %xmm7
0000000100005e7d	0f 29 bd f0 fd ff ff 	movaps	%xmm7, -0x210(%rbp)
0000000100005e84	48 8b 85 c0 fc ff ff 	movq	-0x340(%rbp), %rax
0000000100005e8b	48 89 85 78 fd ff ff 	movq	%rax, -0x288(%rbp)
0000000100005e92	48 8b 8d b8 fc ff ff 	movq	-0x348(%rbp), %rcx
0000000100005e99	48 89 8d 70 fd ff ff 	movq	%rcx, -0x290(%rbp)
0000000100005ea0	48 8b 95 b0 fc ff ff 	movq	-0x350(%rbp), %rdx
0000000100005ea7	48 89 95 68 fd ff ff 	movq	%rdx, -0x298(%rbp)
0000000100005eae	48 8b b5 a8 fc ff ff 	movq	-0x358(%rbp), %rsi
0000000100005eb5	48 89 b5 60 fd ff ff 	movq	%rsi, -0x2a0(%rbp)
0000000100005ebc	48 8b bd a0 fc ff ff 	movq	-0x360(%rbp), %rdi
0000000100005ec3	44 8b 85 cc fc ff ff 	movl	-0x334(%rbp), %r8d
0000000100005eca	41 b9 e8 01 00 00 	movl	$0x1e8, %r9d
0000000100005ed0	44 89 ce 	movl	%r9d, %esi
0000000100005ed3	4c 8d 95 10 fe ff ff 	leaq	-0x1f0(%rbp), %r10
0000000100005eda	4c 8b 1d 3f 01 02 00 	movq	0x2013f(%rip), %r11 ## literal pool symbol address: ___stack_chk_guard
0000000100005ee1	4d 8b 1b 	movq	(%r11), %r11
0000000100005ee4	4c 89 5d f8 	movq	%r11, -0x8(%rbp)
0000000100005ee8	44 89 85 08 fe ff ff 	movl	%r8d, -0x1f8(%rbp)
0000000100005eef	48 89 bd 00 fe ff ff 	movq	%rdi, -0x200(%rbp)
0000000100005ef6	4c 89 d7 	movq	%r10, %rdi
0000000100005ef9	e8 b2 eb ff ff 	callq	_ft_bzero
0000000100005efe	48 83 bd 00 fe ff ff 00 	cmpq	$0x0, -0x200(%rbp)
0000000100005f06	0f 84 0d 00 00 00 	je	0x100005f19
0000000100005f0c	83 bd 08 fe ff ff 00 	cmpl	$0x0, -0x1f8(%rbp)
0000000100005f13	0f 8d 0f 00 00 00 	jge	0x100005f28
0000000100005f19	c7 85 0c fe ff ff 00 00 00 00 	movl	$0x0, -0x1f4(%rbp)
0000000100005f23	e9 f6 00 00 00 	jmp	0x10000601e
0000000100005f28	48 8b 85 00 fe ff ff 	movq	-0x200(%rbp), %rax
0000000100005f2f	0f be 08 	movsbl	(%rax), %ecx
0000000100005f32	83 f9 25 	cmpl	$0x25, %ecx
0000000100005f35	0f 85 23 00 00 00 	jne	0x100005f5e
0000000100005f3b	48 8b 85 00 fe ff ff 	movq	-0x200(%rbp), %rax
0000000100005f42	0f be 48 01 	movsbl	0x1(%rax), %ecx
0000000100005f46	83 f9 00 	cmpl	$0x0, %ecx
0000000100005f49	0f 85 0f 00 00 00 	jne	0x100005f5e
0000000100005f4f	c7 85 0c fe ff ff 00 00 00 00 	movl	$0x0, -0x1f4(%rbp)
0000000100005f59	e9 c0 00 00 00 	jmp	0x10000601e
0000000100005f5e	b8 2c 01 00 00 	movl	$0x12c, %eax
0000000100005f63	89 c6 	movl	%eax, %esi
0000000100005f65	48 8d 8d 10 fe ff ff 	leaq	-0x1f0(%rbp), %rcx
0000000100005f6c	48 81 c1 b8 00 00 00 	addq	$0xb8, %rcx
0000000100005f73	48 89 cf 	movq	%rcx, %rdi
0000000100005f76	e8 35 eb ff ff 	callq	_ft_bzero
0000000100005f7b	48 8d 8d 10 fe ff ff 	leaq	-0x1f0(%rbp), %rcx
0000000100005f82	8b 85 08 fe ff ff 	movl	-0x1f8(%rbp), %eax
0000000100005f88	89 85 b0 fe ff ff 	movl	%eax, -0x150(%rbp)
0000000100005f8e	48 89 ce 	movq	%rcx, %rsi
0000000100005f91	48 83 c6 08 	addq	$0x8, %rsi
0000000100005f95	48 8d bd 50 fd ff ff 	leaq	-0x2b0(%rbp), %rdi
0000000100005f9c	48 89 7e 10 	movq	%rdi, 0x10(%rsi)
0000000100005fa0	48 8d 7d 10 	leaq	0x10(%rbp), %rdi
0000000100005fa4	48 89 7e 08 	movq	%rdi, 0x8(%rsi)
0000000100005fa8	c7 46 04 30 00 00 00 	movl	$0x30, 0x4(%rsi)
0000000100005faf	c7 06 10 00 00 00 	movl	$0x10, (%rsi)
0000000100005fb5	48 8b bd 00 fe ff ff 	movq	-0x200(%rbp), %rdi
0000000100005fbc	48 89 ce 	movq	%rcx, %rsi
0000000100005fbf	e8 7c 2d 00 00 	callq	_printf_loop
0000000100005fc4	48 8d 8d 10 fe ff ff 	leaq	-0x1f0(%rbp), %rcx
0000000100005fcb	48 83 c1 08 	addq	$0x8, %rcx
0000000100005fcf	0f be 85 c8 fe ff ff 	movsbl	-0x138(%rbp), %eax
0000000100005fd6	83 f8 00 	cmpl	$0x0, %eax
0000000100005fd9	48 89 8d 98 fc ff ff 	movq	%rcx, -0x368(%rbp)
0000000100005fe0	0f 84 29 00 00 00 	je	0x10000600f
0000000100005fe6	48 8d 85 10 fe ff ff 	leaq	-0x1f0(%rbp), %rax
0000000100005fed	8b bd 08 fe ff ff 	movl	-0x1f8(%rbp), %edi
0000000100005ff3	48 05 b8 00 00 00 	addq	$0xb8, %rax
0000000100005ff9	48 63 95 c4 fe ff ff 	movslq	-0x13c(%rbp), %rdx
0000000100006000	48 89 c6 	movq	%rax, %rsi
0000000100006003	e8 e0 84 00 00 	callq	0x10000e4e8 ## symbol stub for: _write
0000000100006008	48 89 85 90 fc ff ff 	movq	%rax, -0x370(%rbp)
000000010000600f	48 8b 85 10 fe ff ff 	movq	-0x1f0(%rbp), %rax
0000000100006016	89 c1 	movl	%eax, %ecx
0000000100006018	89 8d 0c fe ff ff 	movl	%ecx, -0x1f4(%rbp)
000000010000601e	8b 85 0c fe ff ff 	movl	-0x1f4(%rbp), %eax
0000000100006024	48 8b 0d f5 ff 01 00 	movq	0x1fff5(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
000000010000602b	48 8b 09 	movq	(%rcx), %rcx
000000010000602e	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100006032	48 39 d1 	cmpq	%rdx, %rcx
0000000100006035	89 85 8c fc ff ff 	movl	%eax, -0x374(%rbp)
000000010000603b	0f 85 0f 00 00 00 	jne	0x100006050
0000000100006041	8b 85 8c fc ff ff 	movl	-0x374(%rbp), %eax
0000000100006047	48 81 c4 80 03 00 00 	addq	$0x380, %rsp
000000010000604e	5d 	popq	%rbp
000000010000604f	c3 	retq
0000000100006050	e8 0d 83 00 00 	callq	0x10000e362 ## symbol stub for: ___stack_chk_fail
0000000100006055	66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_ft_sprintf:
0000000100006060	55 	pushq	%rbp
0000000100006061	48 89 e5 	movq	%rsp, %rbp
0000000100006064	48 81 ec 70 03 00 00 	subq	$0x370, %rsp
000000010000606b	84 c0 	testb	%al, %al
000000010000606d	0f 29 bd 40 fd ff ff 	movaps	%xmm7, -0x2c0(%rbp)
0000000100006074	0f 29 b5 30 fd ff ff 	movaps	%xmm6, -0x2d0(%rbp)
000000010000607b	0f 29 ad 20 fd ff ff 	movaps	%xmm5, -0x2e0(%rbp)
0000000100006082	0f 29 a5 10 fd ff ff 	movaps	%xmm4, -0x2f0(%rbp)
0000000100006089	0f 29 9d 00 fd ff ff 	movaps	%xmm3, -0x300(%rbp)
0000000100006090	0f 29 95 f0 fc ff ff 	movaps	%xmm2, -0x310(%rbp)
0000000100006097	0f 29 8d e0 fc ff ff 	movaps	%xmm1, -0x320(%rbp)
000000010000609e	0f 29 85 d0 fc ff ff 	movaps	%xmm0, -0x330(%rbp)
00000001000060a5	48 89 bd c8 fc ff ff 	movq	%rdi, -0x338(%rbp)
00000001000060ac	4c 89 8d c0 fc ff ff 	movq	%r9, -0x340(%rbp)
00000001000060b3	4c 89 85 b8 fc ff ff 	movq	%r8, -0x348(%rbp)
00000001000060ba	48 89 8d b0 fc ff ff 	movq	%rcx, -0x350(%rbp)
00000001000060c1	48 89 95 a8 fc ff ff 	movq	%rdx, -0x358(%rbp)
00000001000060c8	48 89 b5 a0 fc ff ff 	movq	%rsi, -0x360(%rbp)
00000001000060cf	0f 84 70 00 00 00 	je	0x100006145
00000001000060d5	0f 28 85 d0 fc ff ff 	movaps	-0x330(%rbp), %xmm0
00000001000060dc	0f 29 85 80 fd ff ff 	movaps	%xmm0, -0x280(%rbp)
00000001000060e3	0f 28 8d e0 fc ff ff 	movaps	-0x320(%rbp), %xmm1
00000001000060ea	0f 29 8d 90 fd ff ff 	movaps	%xmm1, -0x270(%rbp)
00000001000060f1	0f 28 95 f0 fc ff ff 	movaps	-0x310(%rbp), %xmm2
00000001000060f8	0f 29 95 a0 fd ff ff 	movaps	%xmm2, -0x260(%rbp)
00000001000060ff	0f 28 9d 00 fd ff ff 	movaps	-0x300(%rbp), %xmm3
0000000100006106	0f 29 9d b0 fd ff ff 	movaps	%xmm3, -0x250(%rbp)
000000010000610d	0f 28 a5 10 fd ff ff 	movaps	-0x2f0(%rbp), %xmm4
0000000100006114	0f 29 a5 c0 fd ff ff 	movaps	%xmm4, -0x240(%rbp)
000000010000611b	0f 28 ad 20 fd ff ff 	movaps	-0x2e0(%rbp), %xmm5
0000000100006122	0f 29 ad d0 fd ff ff 	movaps	%xmm5, -0x230(%rbp)
0000000100006129	0f 28 b5 30 fd ff ff 	movaps	-0x2d0(%rbp), %xmm6
0000000100006130	0f 29 b5 e0 fd ff ff 	movaps	%xmm6, -0x220(%rbp)
0000000100006137	0f 28 bd 40 fd ff ff 	movaps	-0x2c0(%rbp), %xmm7
000000010000613e	0f 29 bd f0 fd ff ff 	movaps	%xmm7, -0x210(%rbp)
0000000100006145	48 8b 85 c0 fc ff ff 	movq	-0x340(%rbp), %rax
000000010000614c	48 89 85 78 fd ff ff 	movq	%rax, -0x288(%rbp)
0000000100006153	48 8b 8d b8 fc ff ff 	movq	-0x348(%rbp), %rcx
000000010000615a	48 89 8d 70 fd ff ff 	movq	%rcx, -0x290(%rbp)
0000000100006161	48 8b 95 b0 fc ff ff 	movq	-0x350(%rbp), %rdx
0000000100006168	48 89 95 68 fd ff ff 	movq	%rdx, -0x298(%rbp)
000000010000616f	48 8b b5 a8 fc ff ff 	movq	-0x358(%rbp), %rsi
0000000100006176	48 89 b5 60 fd ff ff 	movq	%rsi, -0x2a0(%rbp)
000000010000617d	48 8b bd a0 fc ff ff 	movq	-0x360(%rbp), %rdi
0000000100006184	48 89 bd 58 fd ff ff 	movq	%rdi, -0x2a8(%rbp)
000000010000618b	4c 8b 85 c8 fc ff ff 	movq	-0x338(%rbp), %r8
0000000100006192	41 b9 e8 01 00 00 	movl	$0x1e8, %r9d
0000000100006198	44 89 ce 	movl	%r9d, %esi
000000010000619b	4c 8d 95 10 fe ff ff 	leaq	-0x1f0(%rbp), %r10
00000001000061a2	4c 8b 1d 77 fe 01 00 	movq	0x1fe77(%rip), %r11 ## literal pool symbol address: ___stack_chk_guard
00000001000061a9	4d 8b 1b 	movq	(%r11), %r11
00000001000061ac	4c 89 5d f8 	movq	%r11, -0x8(%rbp)
00000001000061b0	4c 89 85 00 fe ff ff 	movq	%r8, -0x200(%rbp)
00000001000061b7	4c 89 d7 	movq	%r10, %rdi
00000001000061ba	e8 f1 e8 ff ff 	callq	_ft_bzero
00000001000061bf	48 c7 85 10 fe ff ff 00 00 00 00 	movq	$0x0, -0x1f0(%rbp)
00000001000061ca	48 83 bd 00 fe ff ff 00 	cmpq	$0x0, -0x200(%rbp)
00000001000061d2	0f 85 10 00 00 00 	jne	0x1000061e8
00000001000061d8	48 c7 85 08 fe ff ff 00 00 00 00 	movq	$0x0, -0x1f8(%rbp)
00000001000061e3	e9 f2 00 00 00 	jmp	0x1000062da
00000001000061e8	48 8b 85 00 fe ff ff 	movq	-0x200(%rbp), %rax
00000001000061ef	0f be 08 	movsbl	(%rax), %ecx
00000001000061f2	83 f9 25 	cmpl	$0x25, %ecx
00000001000061f5	0f 85 24 00 00 00 	jne	0x10000621f
00000001000061fb	48 8b 85 00 fe ff ff 	movq	-0x200(%rbp), %rax
0000000100006202	0f be 48 01 	movsbl	0x1(%rax), %ecx
0000000100006206	83 f9 00 	cmpl	$0x0, %ecx
0000000100006209	0f 85 10 00 00 00 	jne	0x10000621f
000000010000620f	48 c7 85 08 fe ff ff 00 00 00 00 	movq	$0x0, -0x1f8(%rbp)
000000010000621a	e9 bb 00 00 00 	jmp	0x1000062da
000000010000621f	b8 2c 01 00 00 	movl	$0x12c, %eax
0000000100006224	89 c6 	movl	%eax, %esi
0000000100006226	48 8d 8d 10 fe ff ff 	leaq	-0x1f0(%rbp), %rcx
000000010000622d	c7 85 c4 fe ff ff 00 00 00 00 	movl	$0x0, -0x13c(%rbp)
0000000100006237	48 81 c1 b8 00 00 00 	addq	$0xb8, %rcx
000000010000623e	48 89 cf 	movq	%rcx, %rdi
0000000100006241	e8 6a e8 ff ff 	callq	_ft_bzero
0000000100006246	b8 2d 01 00 00 	movl	$0x12d, %eax
000000010000624b	89 c7 	movl	%eax, %edi
000000010000624d	e8 2e eb ff ff 	callq	_ft_memalloc
0000000100006252	48 89 85 b8 fe ff ff 	movq	%rax, -0x148(%rbp)
0000000100006259	48 83 f8 00 	cmpq	$0x0, %rax
000000010000625d	0f 85 10 00 00 00 	jne	0x100006273
0000000100006263	48 c7 85 08 fe ff ff 00 00 00 00 	movq	$0x0, -0x1f8(%rbp)
000000010000626e	e9 67 00 00 00 	jmp	0x1000062da
0000000100006273	48 8d 85 10 fe ff ff 	leaq	-0x1f0(%rbp), %rax
000000010000627a	c7 85 c0 fe ff ff 02 00 00 00 	movl	$0x2, -0x140(%rbp)
0000000100006284	48 89 c1 	movq	%rax, %rcx
0000000100006287	48 83 c1 08 	addq	$0x8, %rcx
000000010000628b	48 8d 95 50 fd ff ff 	leaq	-0x2b0(%rbp), %rdx
0000000100006292	48 89 51 10 	movq	%rdx, 0x10(%rcx)
0000000100006296	48 8d 55 10 	leaq	0x10(%rbp), %rdx
000000010000629a	48 89 51 08 	movq	%rdx, 0x8(%rcx)
000000010000629e	c7 41 04 30 00 00 00 	movl	$0x30, 0x4(%rcx)
00000001000062a5	c7 01 08 00 00 00 	movl	$0x8, (%rcx)
00000001000062ab	48 8b bd 00 fe ff ff 	movq	-0x200(%rbp), %rdi
00000001000062b2	48 89 c6 	movq	%rax, %rsi
00000001000062b5	e8 86 2a 00 00 	callq	_printf_loop
00000001000062ba	48 8d 85 10 fe ff ff 	leaq	-0x1f0(%rbp), %rax
00000001000062c1	48 83 c0 08 	addq	$0x8, %rax
00000001000062c5	48 8b 8d b8 fe ff ff 	movq	-0x148(%rbp), %rcx
00000001000062cc	48 89 8d 08 fe ff ff 	movq	%rcx, -0x1f8(%rbp)
00000001000062d3	48 89 85 98 fc ff ff 	movq	%rax, -0x368(%rbp)
00000001000062da	48 8b 85 08 fe ff ff 	movq	-0x1f8(%rbp), %rax
00000001000062e1	48 8b 0d 38 fd 01 00 	movq	0x1fd38(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
00000001000062e8	48 8b 09 	movq	(%rcx), %rcx
00000001000062eb	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
00000001000062ef	48 39 d1 	cmpq	%rdx, %rcx
00000001000062f2	48 89 85 90 fc ff ff 	movq	%rax, -0x370(%rbp)
00000001000062f9	0f 85 10 00 00 00 	jne	0x10000630f
00000001000062ff	48 8b 85 90 fc ff ff 	movq	-0x370(%rbp), %rax
0000000100006306	48 81 c4 70 03 00 00 	addq	$0x370, %rsp
000000010000630d	5d 	popq	%rbp
000000010000630e	c3 	retq
000000010000630f	e8 4e 80 00 00 	callq	0x10000e362 ## symbol stub for: ___stack_chk_fail
0000000100006314	90 	nop
0000000100006315	90 	nop
0000000100006316	90 	nop
0000000100006317	90 	nop
0000000100006318	90 	nop
0000000100006319	90 	nop
000000010000631a	90 	nop
000000010000631b	90 	nop
000000010000631c	90 	nop
000000010000631d	90 	nop
000000010000631e	90 	nop
000000010000631f	90 	nop
_check_flags:
0000000100006320	55 	pushq	%rbp
0000000100006321	48 89 e5 	movq	%rsp, %rbp
0000000100006324	48 83 ec 20 	subq	$0x20, %rsp
0000000100006328	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000632c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100006330	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100006337	b0 01 	movb	$0x1, %al
0000000100006339	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
000000010000633d	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100006341	0f be 34 0a 	movsbl	(%rdx,%rcx), %esi
0000000100006345	83 fe 23 	cmpl	$0x23, %esi
0000000100006348	88 45 eb 	movb	%al, -0x15(%rbp)
000000010000634b	0f 84 65 00 00 00 	je	0x1000063b6
0000000100006351	b0 01 	movb	$0x1, %al
0000000100006353	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
0000000100006357	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
000000010000635b	0f be 34 0a 	movsbl	(%rdx,%rcx), %esi
000000010000635f	83 fe 2d 	cmpl	$0x2d, %esi
0000000100006362	88 45 eb 	movb	%al, -0x15(%rbp)
0000000100006365	0f 84 4b 00 00 00 	je	0x1000063b6
000000010000636b	b0 01 	movb	$0x1, %al
000000010000636d	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
0000000100006371	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100006375	0f be 34 0a 	movsbl	(%rdx,%rcx), %esi
0000000100006379	83 fe 2b 	cmpl	$0x2b, %esi
000000010000637c	88 45 eb 	movb	%al, -0x15(%rbp)
000000010000637f	0f 84 31 00 00 00 	je	0x1000063b6
0000000100006385	b0 01 	movb	$0x1, %al
0000000100006387	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
000000010000638b	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
000000010000638f	0f be 34 0a 	movsbl	(%rdx,%rcx), %esi
0000000100006393	83 fe 30 	cmpl	$0x30, %esi
0000000100006396	88 45 eb 	movb	%al, -0x15(%rbp)
0000000100006399	0f 84 17 00 00 00 	je	0x1000063b6
000000010000639f	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000063a3	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000063a7	0f be 14 01 	movsbl	(%rcx,%rax), %edx
00000001000063ab	83 fa 20 	cmpl	$0x20, %edx
00000001000063ae	40 0f 94 c6 	sete	%sil
00000001000063b2	40 88 75 eb 	movb	%sil, -0x15(%rbp)
00000001000063b6	8a 45 eb 	movb	-0x15(%rbp), %al
00000001000063b9	a8 01 	testb	$0x1, %al
00000001000063bb	0f 85 05 00 00 00 	jne	0x1000063c6
00000001000063c1	e9 1f 00 00 00 	jmp	0x1000063e5
00000001000063c6	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000063ca	48 03 45 f8 	addq	-0x8(%rbp), %rax
00000001000063ce	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000063d2	48 89 c7 	movq	%rax, %rdi
00000001000063d5	e8 16 01 00 00 	callq	_check_attri
00000001000063da	03 45 ec 	addl	-0x14(%rbp), %eax
00000001000063dd	89 45 ec 	movl	%eax, -0x14(%rbp)
00000001000063e0	e9 52 ff ff ff 	jmp	0x100006337
00000001000063e5	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000063e9	48 03 45 f8 	addq	-0x8(%rbp), %rax
00000001000063ed	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000063f1	48 89 c7 	movq	%rax, %rdi
00000001000063f4	e8 c7 01 00 00 	callq	_check_w
00000001000063f9	03 45 ec 	addl	-0x14(%rbp), %eax
00000001000063fc	89 45 ec 	movl	%eax, -0x14(%rbp)
00000001000063ff	48 63 75 ec 	movslq	-0x14(%rbp), %rsi
0000000100006403	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100006407	0f be 04 37 	movsbl	(%rdi,%rsi), %eax
000000010000640b	83 f8 2e 	cmpl	$0x2e, %eax
000000010000640e	0f 85 31 00 00 00 	jne	0x100006445
0000000100006414	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006418	48 c7 40 48 00 00 00 00 	movq	$0x0, 0x48(%rax)
0000000100006420	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006424	c7 40 34 01 00 00 00 	movl	$0x1, 0x34(%rax)
000000010000642b	48 63 45 ec 	movslq	-0x14(%rbp), %rax
000000010000642f	48 03 45 f8 	addq	-0x8(%rbp), %rax
0000000100006433	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006437	48 89 c7 	movq	%rax, %rdi
000000010000643a	e8 a1 02 00 00 	callq	_check_p
000000010000643f	03 45 ec 	addl	-0x14(%rbp), %eax
0000000100006442	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100006445	e9 00 00 00 00 	jmp	0x10000644a
000000010000644a	b0 01 	movb	$0x1, %al
000000010000644c	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
0000000100006450	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100006454	0f be 34 0a 	movsbl	(%rdx,%rcx), %esi
0000000100006458	83 fe 68 	cmpl	$0x68, %esi
000000010000645b	88 45 ea 	movb	%al, -0x16(%rbp)
000000010000645e	0f 84 4b 00 00 00 	je	0x1000064af
0000000100006464	b0 01 	movb	$0x1, %al
0000000100006466	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
000000010000646a	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
000000010000646e	0f be 34 0a 	movsbl	(%rdx,%rcx), %esi
0000000100006472	83 fe 6c 	cmpl	$0x6c, %esi
0000000100006475	88 45 ea 	movb	%al, -0x16(%rbp)
0000000100006478	0f 84 31 00 00 00 	je	0x1000064af
000000010000647e	b0 01 	movb	$0x1, %al
0000000100006480	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
0000000100006484	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100006488	0f be 34 0a 	movsbl	(%rdx,%rcx), %esi
000000010000648c	83 fe 7a 	cmpl	$0x7a, %esi
000000010000648f	88 45 ea 	movb	%al, -0x16(%rbp)
0000000100006492	0f 84 17 00 00 00 	je	0x1000064af
0000000100006498	48 63 45 ec 	movslq	-0x14(%rbp), %rax
000000010000649c	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000064a0	0f be 14 01 	movsbl	(%rcx,%rax), %edx
00000001000064a4	83 fa 6a 	cmpl	$0x6a, %edx
00000001000064a7	40 0f 94 c6 	sete	%sil
00000001000064ab	40 88 75 ea 	movb	%sil, -0x16(%rbp)
00000001000064af	8a 45 ea 	movb	-0x16(%rbp), %al
00000001000064b2	a8 01 	testb	$0x1, %al
00000001000064b4	0f 85 05 00 00 00 	jne	0x1000064bf
00000001000064ba	e9 1f 00 00 00 	jmp	0x1000064de
00000001000064bf	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000064c3	48 03 45 f8 	addq	-0x8(%rbp), %rax
00000001000064c7	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000064cb	48 89 c7 	movq	%rax, %rdi
00000001000064ce	e8 2d 03 00 00 	callq	_check_spe
00000001000064d3	03 45 ec 	addl	-0x14(%rbp), %eax
00000001000064d6	89 45 ec 	movl	%eax, -0x14(%rbp)
00000001000064d9	e9 6c ff ff ff 	jmp	0x10000644a
00000001000064de	8b 45 ec 	movl	-0x14(%rbp), %eax
00000001000064e1	48 83 c4 20 	addq	$0x20, %rsp
00000001000064e5	5d 	popq	%rbp
00000001000064e6	c3 	retq
00000001000064e7	66 0f 1f 84 00 00 00 00 00 	nopw	(%rax,%rax)
_check_attri:
00000001000064f0	55 	pushq	%rbp
00000001000064f1	48 89 e5 	movq	%rsp, %rbp
00000001000064f4	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000064f8	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000064fc	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100006503	48 63 75 ec 	movslq	-0x14(%rbp), %rsi
0000000100006507	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000650b	0f be 04 37 	movsbl	(%rdi,%rsi), %eax
000000010000650f	83 f8 23 	cmpl	$0x23, %eax
0000000100006512	0f 85 0b 00 00 00 	jne	0x100006523
0000000100006518	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000651c	c7 40 20 01 00 00 00 	movl	$0x1, 0x20(%rax)
0000000100006523	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100006527	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000652b	0f be 14 01 	movsbl	(%rcx,%rax), %edx
000000010000652f	83 fa 2d 	cmpl	$0x2d, %edx
0000000100006532	0f 85 0b 00 00 00 	jne	0x100006543
0000000100006538	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000653c	c7 40 24 01 00 00 00 	movl	$0x1, 0x24(%rax)
0000000100006543	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100006547	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000654b	0f be 14 01 	movsbl	(%rcx,%rax), %edx
000000010000654f	83 fa 2b 	cmpl	$0x2b, %edx
0000000100006552	0f 85 0b 00 00 00 	jne	0x100006563
0000000100006558	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000655c	c7 40 28 01 00 00 00 	movl	$0x1, 0x28(%rax)
0000000100006563	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100006567	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000656b	0f be 14 01 	movsbl	(%rcx,%rax), %edx
000000010000656f	83 fa 20 	cmpl	$0x20, %edx
0000000100006572	0f 85 0b 00 00 00 	jne	0x100006583
0000000100006578	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000657c	c7 40 2c 01 00 00 00 	movl	$0x1, 0x2c(%rax)
0000000100006583	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100006587	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000658b	0f be 14 01 	movsbl	(%rcx,%rax), %edx
000000010000658f	83 fa 30 	cmpl	$0x30, %edx
0000000100006592	0f 85 0b 00 00 00 	jne	0x1000065a3
0000000100006598	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000659c	c7 40 30 01 00 00 00 	movl	$0x1, 0x30(%rax)
00000001000065a3	8b 45 ec 	movl	-0x14(%rbp), %eax
00000001000065a6	83 c0 01 	addl	$0x1, %eax
00000001000065a9	89 45 ec 	movl	%eax, -0x14(%rbp)
00000001000065ac	8b 45 ec 	movl	-0x14(%rbp), %eax
00000001000065af	5d 	popq	%rbp
00000001000065b0	c3 	retq
00000001000065b1	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_check_w:
00000001000065c0	55 	pushq	%rbp
00000001000065c1	48 89 e5 	movq	%rsp, %rbp
00000001000065c4	48 83 ec 30 	subq	$0x30, %rsp
00000001000065c8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000065cc	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000065d0	c7 45 e8 00 00 00 00 	movl	$0x0, -0x18(%rbp)
00000001000065d7	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
00000001000065de	48 63 75 ec 	movslq	-0x14(%rbp), %rsi
00000001000065e2	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000065e6	0f be 04 37 	movsbl	(%rdi,%rsi), %eax
00000001000065ea	83 f8 2a 	cmpl	$0x2a, %eax
00000001000065ed	0f 85 8b 00 00 00 	jne	0x10000667e
00000001000065f3	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000065f7	48 89 c1 	movq	%rax, %rcx
00000001000065fa	48 83 c1 08 	addq	$0x8, %rcx
00000001000065fe	8b 50 08 	movl	0x8(%rax), %edx
0000000100006601	83 fa 28 	cmpl	$0x28, %edx
0000000100006604	48 89 4d e0 	movq	%rcx, -0x20(%rbp)
0000000100006608	89 55 dc 	movl	%edx, -0x24(%rbp)
000000010000660b	0f 87 1c 00 00 00 	ja	0x10000662d
0000000100006611	8b 45 dc 	movl	-0x24(%rbp), %eax
0000000100006614	48 63 c8 	movslq	%eax, %rcx
0000000100006617	48 8b 55 e0 	movq	-0x20(%rbp), %rdx
000000010000661b	48 03 4a 10 	addq	0x10(%rdx), %rcx
000000010000661f	83 c0 08 	addl	$0x8, %eax
0000000100006622	89 02 	movl	%eax, (%rdx)
0000000100006624	48 89 4d d0 	movq	%rcx, -0x30(%rbp)
0000000100006628	e9 17 00 00 00 	jmp	0x100006644
000000010000662d	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100006631	48 8b 48 08 	movq	0x8(%rax), %rcx
0000000100006635	48 89 ca 	movq	%rcx, %rdx
0000000100006638	48 83 c1 08 	addq	$0x8, %rcx
000000010000663c	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100006640	48 89 55 d0 	movq	%rdx, -0x30(%rbp)
0000000100006644	48 8b 45 d0 	movq	-0x30(%rbp), %rax
0000000100006648	8b 08 	movl	(%rax), %ecx
000000010000664a	89 4d e8 	movl	%ecx, -0x18(%rbp)
000000010000664d	83 7d e8 00 	cmpl	$0x0, -0x18(%rbp)
0000000100006651	0f 8d 12 00 00 00 	jge	0x100006669
0000000100006657	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000665b	c7 40 24 01 00 00 00 	movl	$0x1, 0x24(%rax)
0000000100006662	6b 4d e8 ff 	imull	$-0x1, -0x18(%rbp), %ecx
0000000100006666	89 4d e8 	movl	%ecx, -0x18(%rbp)
0000000100006669	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000666c	83 c0 01 	addl	$0x1, %eax
000000010000666f	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100006672	48 63 4d e8 	movslq	-0x18(%rbp), %rcx
0000000100006676	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000667a	48 89 4a 40 	movq	%rcx, 0x40(%rdx)
000000010000667e	c7 45 e8 00 00 00 00 	movl	$0x0, -0x18(%rbp)
0000000100006685	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100006689	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000668d	0f be 3c 01 	movsbl	(%rcx,%rax), %edi
0000000100006691	e8 aa e6 ff ff 	callq	_ft_isdigit
0000000100006696	83 f8 00 	cmpl	$0x0, %eax
0000000100006699	0f 84 32 00 00 00 	je	0x1000066d1
000000010000669f	6b 45 e8 0a 	imull	$0xa, -0x18(%rbp), %eax
00000001000066a3	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
00000001000066a7	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
00000001000066ab	0f be 34 0a 	movsbl	(%rdx,%rcx), %esi
00000001000066af	83 ee 30 	subl	$0x30, %esi
00000001000066b2	01 f0 	addl	%esi, %eax
00000001000066b4	89 45 e8 	movl	%eax, -0x18(%rbp)
00000001000066b7	8b 45 ec 	movl	-0x14(%rbp), %eax
00000001000066ba	83 c0 01 	addl	$0x1, %eax
00000001000066bd	89 45 ec 	movl	%eax, -0x14(%rbp)
00000001000066c0	48 63 4d e8 	movslq	-0x18(%rbp), %rcx
00000001000066c4	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000066c8	48 89 4a 40 	movq	%rcx, 0x40(%rdx)
00000001000066cc	e9 b4 ff ff ff 	jmp	0x100006685
00000001000066d1	8b 45 ec 	movl	-0x14(%rbp), %eax
00000001000066d4	48 83 c4 30 	addq	$0x30, %rsp
00000001000066d8	5d 	popq	%rbp
00000001000066d9	c3 	retq
00000001000066da	66 0f 1f 44 00 00 	nopw	(%rax,%rax)
_check_p:
00000001000066e0	55 	pushq	%rbp
00000001000066e1	48 89 e5 	movq	%rsp, %rbp
00000001000066e4	48 83 ec 30 	subq	$0x30, %rsp
00000001000066e8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000066ec	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000066f0	c7 45 ec 01 00 00 00 	movl	$0x1, -0x14(%rbp)
00000001000066f7	c7 45 e8 00 00 00 00 	movl	$0x0, -0x18(%rbp)
00000001000066fe	48 63 75 ec 	movslq	-0x14(%rbp), %rsi
0000000100006702	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100006706	0f be 04 37 	movsbl	(%rdi,%rsi), %eax
000000010000670a	83 f8 2a 	cmpl	$0x2a, %eax
000000010000670d	0f 85 8b 00 00 00 	jne	0x10000679e
0000000100006713	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006717	48 89 c1 	movq	%rax, %rcx
000000010000671a	48 83 c1 08 	addq	$0x8, %rcx
000000010000671e	8b 50 08 	movl	0x8(%rax), %edx
0000000100006721	83 fa 28 	cmpl	$0x28, %edx
0000000100006724	48 89 4d e0 	movq	%rcx, -0x20(%rbp)
0000000100006728	89 55 dc 	movl	%edx, -0x24(%rbp)
000000010000672b	0f 87 1c 00 00 00 	ja	0x10000674d
0000000100006731	8b 45 dc 	movl	-0x24(%rbp), %eax
0000000100006734	48 63 c8 	movslq	%eax, %rcx
0000000100006737	48 8b 55 e0 	movq	-0x20(%rbp), %rdx
000000010000673b	48 03 4a 10 	addq	0x10(%rdx), %rcx
000000010000673f	83 c0 08 	addl	$0x8, %eax
0000000100006742	89 02 	movl	%eax, (%rdx)
0000000100006744	48 89 4d d0 	movq	%rcx, -0x30(%rbp)
0000000100006748	e9 17 00 00 00 	jmp	0x100006764
000000010000674d	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100006751	48 8b 48 08 	movq	0x8(%rax), %rcx
0000000100006755	48 89 ca 	movq	%rcx, %rdx
0000000100006758	48 83 c1 08 	addq	$0x8, %rcx
000000010000675c	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100006760	48 89 55 d0 	movq	%rdx, -0x30(%rbp)
0000000100006764	48 8b 45 d0 	movq	-0x30(%rbp), %rax
0000000100006768	8b 08 	movl	(%rax), %ecx
000000010000676a	89 4d e8 	movl	%ecx, -0x18(%rbp)
000000010000676d	83 7d e8 00 	cmpl	$0x0, -0x18(%rbp)
0000000100006771	0f 8d 12 00 00 00 	jge	0x100006789
0000000100006777	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000677b	c7 40 34 00 00 00 00 	movl	$0x0, 0x34(%rax)
0000000100006782	6b 4d e8 00 	imull	$0x0, -0x18(%rbp), %ecx
0000000100006786	89 4d e8 	movl	%ecx, -0x18(%rbp)
0000000100006789	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000678c	83 c0 01 	addl	$0x1, %eax
000000010000678f	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100006792	48 63 4d e8 	movslq	-0x18(%rbp), %rcx
0000000100006796	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000679a	48 89 4a 48 	movq	%rcx, 0x48(%rdx)
000000010000679e	c7 45 e8 00 00 00 00 	movl	$0x0, -0x18(%rbp)
00000001000067a5	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000067a9	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000067ad	0f be 3c 01 	movsbl	(%rcx,%rax), %edi
00000001000067b1	e8 8a e5 ff ff 	callq	_ft_isdigit
00000001000067b6	83 f8 00 	cmpl	$0x0, %eax
00000001000067b9	0f 84 32 00 00 00 	je	0x1000067f1
00000001000067bf	6b 45 e8 0a 	imull	$0xa, -0x18(%rbp), %eax
00000001000067c3	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
00000001000067c7	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
00000001000067cb	0f be 34 0a 	movsbl	(%rdx,%rcx), %esi
00000001000067cf	83 ee 30 	subl	$0x30, %esi
00000001000067d2	01 f0 	addl	%esi, %eax
00000001000067d4	89 45 e8 	movl	%eax, -0x18(%rbp)
00000001000067d7	8b 45 ec 	movl	-0x14(%rbp), %eax
00000001000067da	83 c0 01 	addl	$0x1, %eax
00000001000067dd	89 45 ec 	movl	%eax, -0x14(%rbp)
00000001000067e0	48 63 4d e8 	movslq	-0x18(%rbp), %rcx
00000001000067e4	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000067e8	48 89 4a 48 	movq	%rcx, 0x48(%rdx)
00000001000067ec	e9 b4 ff ff ff 	jmp	0x1000067a5
00000001000067f1	8b 45 ec 	movl	-0x14(%rbp), %eax
00000001000067f4	48 83 c4 30 	addq	$0x30, %rsp
00000001000067f8	5d 	popq	%rbp
00000001000067f9	c3 	retq
00000001000067fa	66 0f 1f 44 00 00 	nopw	(%rax,%rax)
_check_spe:
0000000100006800	55 	pushq	%rbp
0000000100006801	48 89 e5 	movq	%rsp, %rbp
0000000100006804	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100006808	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
000000010000680c	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100006813	48 63 75 ec 	movslq	-0x14(%rbp), %rsi
0000000100006817	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000681b	0f be 04 37 	movsbl	(%rdi,%rsi), %eax
000000010000681f	83 f8 68 	cmpl	$0x68, %eax
0000000100006822	0f 85 41 00 00 00 	jne	0x100006869
0000000100006828	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000682b	83 c0 01 	addl	$0x1, %eax
000000010000682e	48 63 c8 	movslq	%eax, %rcx
0000000100006831	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100006835	0f be 04 0a 	movsbl	(%rdx,%rcx), %eax
0000000100006839	83 f8 68 	cmpl	$0x68, %eax
000000010000683c	0f 85 27 00 00 00 	jne	0x100006869
0000000100006842	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006846	83 78 50 01 	cmpl	$0x1, 0x50(%rax)
000000010000684a	0f 8f 19 00 00 00 	jg	0x100006869
0000000100006850	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006854	c7 40 50 01 00 00 00 	movl	$0x1, 0x50(%rax)
000000010000685b	8b 4d ec 	movl	-0x14(%rbp), %ecx
000000010000685e	83 c1 01 	addl	$0x1, %ecx
0000000100006861	89 4d ec 	movl	%ecx, -0x14(%rbp)
0000000100006864	e9 60 01 00 00 	jmp	0x1000069c9
0000000100006869	48 63 45 ec 	movslq	-0x14(%rbp), %rax
000000010000686d	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100006871	0f be 14 01 	movsbl	(%rcx,%rax), %edx
0000000100006875	83 fa 68 	cmpl	$0x68, %edx
0000000100006878	0f 85 1e 00 00 00 	jne	0x10000689c
000000010000687e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006882	83 78 50 02 	cmpl	$0x2, 0x50(%rax)
0000000100006886	0f 8f 10 00 00 00 	jg	0x10000689c
000000010000688c	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006890	c7 40 50 02 00 00 00 	movl	$0x2, 0x50(%rax)
0000000100006897	e9 28 01 00 00 	jmp	0x1000069c4
000000010000689c	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000068a0	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000068a4	0f be 14 01 	movsbl	(%rcx,%rax), %edx
00000001000068a8	83 fa 6a 	cmpl	$0x6a, %edx
00000001000068ab	0f 85 1e 00 00 00 	jne	0x1000068cf
00000001000068b1	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000068b5	83 78 50 03 	cmpl	$0x3, 0x50(%rax)
00000001000068b9	0f 8f 10 00 00 00 	jg	0x1000068cf
00000001000068bf	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000068c3	c7 40 50 03 00 00 00 	movl	$0x3, 0x50(%rax)
00000001000068ca	e9 f0 00 00 00 	jmp	0x1000069bf
00000001000068cf	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000068d3	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000068d7	0f be 14 01 	movsbl	(%rcx,%rax), %edx
00000001000068db	83 fa 7a 	cmpl	$0x7a, %edx
00000001000068de	0f 85 1e 00 00 00 	jne	0x100006902
00000001000068e4	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000068e8	83 78 50 04 	cmpl	$0x4, 0x50(%rax)
00000001000068ec	0f 8f 10 00 00 00 	jg	0x100006902
00000001000068f2	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000068f6	c7 40 50 04 00 00 00 	movl	$0x4, 0x50(%rax)
00000001000068fd	e9 b8 00 00 00 	jmp	0x1000069ba
0000000100006902	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100006906	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000690a	0f be 14 01 	movsbl	(%rcx,%rax), %edx
000000010000690e	83 fa 6c 	cmpl	$0x6c, %edx
0000000100006911	0f 85 41 00 00 00 	jne	0x100006958
0000000100006917	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000691a	83 c0 01 	addl	$0x1, %eax
000000010000691d	48 63 c8 	movslq	%eax, %rcx
0000000100006920	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100006924	0f be 04 0a 	movsbl	(%rdx,%rcx), %eax
0000000100006928	83 f8 6c 	cmpl	$0x6c, %eax
000000010000692b	0f 85 27 00 00 00 	jne	0x100006958
0000000100006931	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006935	83 78 50 06 	cmpl	$0x6, 0x50(%rax)
0000000100006939	0f 8f 19 00 00 00 	jg	0x100006958
000000010000693f	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006943	c7 40 50 06 00 00 00 	movl	$0x6, 0x50(%rax)
000000010000694a	8b 4d ec 	movl	-0x14(%rbp), %ecx
000000010000694d	83 c1 01 	addl	$0x1, %ecx
0000000100006950	89 4d ec 	movl	%ecx, -0x14(%rbp)
0000000100006953	e9 5d 00 00 00 	jmp	0x1000069b5
0000000100006958	48 63 45 ec 	movslq	-0x14(%rbp), %rax
000000010000695c	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100006960	0f be 14 01 	movsbl	(%rcx,%rax), %edx
0000000100006964	83 fa 6c 	cmpl	$0x6c, %edx
0000000100006967	0f 85 1e 00 00 00 	jne	0x10000698b
000000010000696d	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006971	83 78 50 05 	cmpl	$0x5, 0x50(%rax)
0000000100006975	0f 8f 10 00 00 00 	jg	0x10000698b
000000010000697b	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000697f	c7 40 50 05 00 00 00 	movl	$0x5, 0x50(%rax)
0000000100006986	e9 25 00 00 00 	jmp	0x1000069b0
000000010000698b	48 63 45 ec 	movslq	-0x14(%rbp), %rax
000000010000698f	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100006993	0f be 14 01 	movsbl	(%rcx,%rax), %edx
0000000100006997	83 fa 4c 	cmpl	$0x4c, %edx
000000010000699a	0f 85 0b 00 00 00 	jne	0x1000069ab
00000001000069a0	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000069a4	c7 40 50 07 00 00 00 	movl	$0x7, 0x50(%rax)
00000001000069ab	e9 00 00 00 00 	jmp	0x1000069b0
00000001000069b0	e9 00 00 00 00 	jmp	0x1000069b5
00000001000069b5	e9 00 00 00 00 	jmp	0x1000069ba
00000001000069ba	e9 00 00 00 00 	jmp	0x1000069bf
00000001000069bf	e9 00 00 00 00 	jmp	0x1000069c4
00000001000069c4	e9 00 00 00 00 	jmp	0x1000069c9
00000001000069c9	8b 45 ec 	movl	-0x14(%rbp), %eax
00000001000069cc	83 c0 01 	addl	$0x1, %eax
00000001000069cf	89 45 ec 	movl	%eax, -0x14(%rbp)
00000001000069d2	8b 45 ec 	movl	-0x14(%rbp), %eax
00000001000069d5	5d 	popq	%rbp
00000001000069d6	c3 	retq
00000001000069d7	90 	nop
00000001000069d8	90 	nop
00000001000069d9	90 	nop
00000001000069da	90 	nop
00000001000069db	90 	nop
00000001000069dc	90 	nop
00000001000069dd	90 	nop
00000001000069de	90 	nop
00000001000069df	90 	nop
_write_percent:
00000001000069e0	55 	pushq	%rbp
00000001000069e1	48 89 e5 	movq	%rsp, %rbp
00000001000069e4	48 83 ec 20 	subq	$0x20, %rsp
00000001000069e8	48 8d 05 be 7f 00 00 	leaq	0x7fbe(%rip), %rax ## literal pool for: "%"
00000001000069ef	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000069f3	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000069f7	48 89 c7 	movq	%rax, %rdi
00000001000069fa	e8 c1 e1 ff ff 	callq	_ft_strdup
00000001000069ff	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006a03	48 89 46 58 	movq	%rax, 0x58(%rsi)
0000000100006a07	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006a0b	8b 88 80 00 00 00 	movl	0x80(%rax), %ecx
0000000100006a11	83 c1 01 	addl	$0x1, %ecx
0000000100006a14	89 88 80 00 00 00 	movl	%ecx, 0x80(%rax)
0000000100006a1a	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100006a1e	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006a22	e8 29 02 00 00 	callq	_can_i_write_width
0000000100006a27	83 f8 00 	cmpl	$0x0, %eax
0000000100006a2a	0f 84 bd 00 00 00 	je	0x100006aed
0000000100006a30	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006a34	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
0000000100006a38	0f 85 2f 00 00 00 	jne	0x100006a6d
0000000100006a3e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006a42	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100006a46	0f 85 21 00 00 00 	jne	0x100006a6d
0000000100006a4c	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100006a50	e8 9b 02 00 00 	callq	_write_width
0000000100006a55	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100006a59	48 8b 77 58 	movq	0x58(%rdi), %rsi
0000000100006a5d	48 89 c7 	movq	%rax, %rdi
0000000100006a60	e8 3b 39 00 00 	callq	_ft_strjoinfree
0000000100006a65	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006a69	48 89 46 58 	movq	%rax, 0x58(%rsi)
0000000100006a6d	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006a71	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
0000000100006a75	0f 84 33 00 00 00 	je	0x100006aae
0000000100006a7b	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006a7f	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100006a83	0f 85 25 00 00 00 	jne	0x100006aae
0000000100006a89	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100006a8d	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006a91	e8 da 02 00 00 	callq	_write_width_0
0000000100006a96	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006a9a	48 8b 76 58 	movq	0x58(%rsi), %rsi
0000000100006a9e	48 89 c7 	movq	%rax, %rdi
0000000100006aa1	e8 fa 38 00 00 	callq	_ft_strjoinfree
0000000100006aa6	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006aaa	48 89 46 58 	movq	%rax, 0x58(%rsi)
0000000100006aae	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006ab2	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100006ab6	0f 84 2c 00 00 00 	je	0x100006ae8
0000000100006abc	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006ac0	48 8b 78 58 	movq	0x58(%rax), %rdi
0000000100006ac4	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006ac8	48 89 7d e8 	movq	%rdi, -0x18(%rbp)
0000000100006acc	48 89 c7 	movq	%rax, %rdi
0000000100006acf	e8 1c 02 00 00 	callq	_write_width
0000000100006ad4	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100006ad8	48 89 c6 	movq	%rax, %rsi
0000000100006adb	e8 c0 38 00 00 	callq	_ft_strjoinfree
0000000100006ae0	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006ae4	48 89 46 58 	movq	%rax, 0x58(%rsi)
0000000100006ae8	e9 00 00 00 00 	jmp	0x100006aed
0000000100006aed	31 c0 	xorl	%eax, %eax
0000000100006aef	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100006af3	48 8b 49 58 	movq	0x58(%rcx), %rcx
0000000100006af7	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100006afb	48 89 8a 90 00 00 00 	movq	%rcx, 0x90(%rdx)
0000000100006b02	48 83 c4 20 	addq	$0x20, %rsp
0000000100006b06	5d 	popq	%rbp
0000000100006b07	c3 	retq
0000000100006b08	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_write_other:
0000000100006b10	55 	pushq	%rbp
0000000100006b11	48 89 e5 	movq	%rsp, %rbp
0000000100006b14	48 83 ec 20 	subq	$0x20, %rsp
0000000100006b18	b8 01 00 00 00 	movl	$0x1, %eax
0000000100006b1d	89 c1 	movl	%eax, %ecx
0000000100006b1f	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100006b23	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100006b27	48 89 cf 	movq	%rcx, %rdi
0000000100006b2a	e8 c1 e2 ff ff 	callq	_ft_strnew
0000000100006b2f	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100006b33	48 89 41 68 	movq	%rax, 0x68(%rcx)
0000000100006b37	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006b3b	8a 10 	movb	(%rax), %dl
0000000100006b3d	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006b41	48 8b 40 68 	movq	0x68(%rax), %rax
0000000100006b45	88 10 	movb	%dl, (%rax)
0000000100006b47	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006b4b	44 8b 80 80 00 00 00 	movl	0x80(%rax), %r8d
0000000100006b52	41 83 c0 01 	addl	$0x1, %r8d
0000000100006b56	44 89 80 80 00 00 00 	movl	%r8d, 0x80(%rax)
0000000100006b5d	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100006b61	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006b65	e8 e6 00 00 00 	callq	_can_i_write_width
0000000100006b6a	83 f8 01 	cmpl	$0x1, %eax
0000000100006b6d	0f 85 bd 00 00 00 	jne	0x100006c30
0000000100006b73	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006b77	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100006b7b	0f 85 2f 00 00 00 	jne	0x100006bb0
0000000100006b81	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006b85	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
0000000100006b89	0f 85 21 00 00 00 	jne	0x100006bb0
0000000100006b8f	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100006b93	e8 58 01 00 00 	callq	_write_width
0000000100006b98	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100006b9c	48 8b 77 68 	movq	0x68(%rdi), %rsi
0000000100006ba0	48 89 c7 	movq	%rax, %rdi
0000000100006ba3	e8 f8 37 00 00 	callq	_ft_strjoinfree
0000000100006ba8	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006bac	48 89 46 68 	movq	%rax, 0x68(%rsi)
0000000100006bb0	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006bb4	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100006bb8	0f 85 33 00 00 00 	jne	0x100006bf1
0000000100006bbe	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006bc2	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
0000000100006bc6	0f 84 25 00 00 00 	je	0x100006bf1
0000000100006bcc	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100006bd0	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006bd4	e8 97 01 00 00 	callq	_write_width_0
0000000100006bd9	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006bdd	48 8b 76 68 	movq	0x68(%rsi), %rsi
0000000100006be1	48 89 c7 	movq	%rax, %rdi
0000000100006be4	e8 b7 37 00 00 	callq	_ft_strjoinfree
0000000100006be9	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006bed	48 89 46 68 	movq	%rax, 0x68(%rsi)
0000000100006bf1	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006bf5	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100006bf9	0f 84 2c 00 00 00 	je	0x100006c2b
0000000100006bff	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006c03	48 8b 78 68 	movq	0x68(%rax), %rdi
0000000100006c07	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006c0b	48 89 7d e8 	movq	%rdi, -0x18(%rbp)
0000000100006c0f	48 89 c7 	movq	%rax, %rdi
0000000100006c12	e8 d9 00 00 00 	callq	_write_width
0000000100006c17	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100006c1b	48 89 c6 	movq	%rax, %rsi
0000000100006c1e	e8 7d 37 00 00 	callq	_ft_strjoinfree
0000000100006c23	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006c27	48 89 46 68 	movq	%rax, 0x68(%rsi)
0000000100006c2b	e9 00 00 00 00 	jmp	0x100006c30
0000000100006c30	31 c0 	xorl	%eax, %eax
0000000100006c32	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100006c36	48 8b 49 68 	movq	0x68(%rcx), %rcx
0000000100006c3a	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100006c3e	48 89 8a 90 00 00 00 	movq	%rcx, 0x90(%rdx)
0000000100006c45	48 83 c4 20 	addq	$0x20, %rsp
0000000100006c49	5d 	popq	%rbp
0000000100006c4a	c3 	retq
0000000100006c4b	90 	nop
0000000100006c4c	90 	nop
0000000100006c4d	90 	nop
0000000100006c4e	90 	nop
0000000100006c4f	90 	nop
_can_i_write_width:
0000000100006c50	55 	pushq	%rbp
0000000100006c51	48 89 e5 	movq	%rsp, %rbp
0000000100006c54	48 83 ec 20 	subq	$0x20, %rsp
0000000100006c58	48 8d 05 50 7d 00 00 	leaq	0x7d50(%rip), %rax ## literal pool for: "dDioOuUxXpfF"
0000000100006c5f	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100006c63	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100006c67	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006c6b	0f be 36 	movsbl	(%rsi), %esi
0000000100006c6e	48 89 c7 	movq	%rax, %rdi
0000000100006c71	e8 2a e0 ff ff 	callq	_ft_strchr
0000000100006c76	48 83 f8 00 	cmpq	$0x0, %rax
0000000100006c7a	0f 84 23 00 00 00 	je	0x100006ca3
0000000100006c80	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100006c84	48 8b 78 58 	movq	0x58(%rax), %rdi
0000000100006c88	e8 f3 de ff ff 	callq	_ft_strlen
0000000100006c8d	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100006c91	48 63 8f 84 00 00 00 	movslq	0x84(%rdi), %rcx
0000000100006c98	48 01 c1 	addq	%rax, %rcx
0000000100006c9b	89 ca 	movl	%ecx, %edx
0000000100006c9d	89 97 84 00 00 00 	movl	%edx, 0x84(%rdi)
0000000100006ca3	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100006ca7	8b 88 80 00 00 00 	movl	0x80(%rax), %ecx
0000000100006cad	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100006cb1	03 88 84 00 00 00 	addl	0x84(%rax), %ecx
0000000100006cb7	48 63 c1 	movslq	%ecx, %rax
0000000100006cba	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
0000000100006cbe	48 3b 42 40 	cmpq	0x40(%rdx), %rax
0000000100006cc2	0f 8d 0c 00 00 00 	jge	0x100006cd4
0000000100006cc8	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100006ccf	e9 13 00 00 00 	jmp	0x100006ce7
0000000100006cd4	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100006cd8	48 c7 40 40 00 00 00 00 	movq	$0x0, 0x40(%rax)
0000000100006ce0	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100006ce7	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100006cea	48 83 c4 20 	addq	$0x20, %rsp
0000000100006cee	5d 	popq	%rbp
0000000100006cef	c3 	retq
_write_width:
0000000100006cf0	55 	pushq	%rbp
0000000100006cf1	48 89 e5 	movq	%rsp, %rbp
0000000100006cf4	48 83 ec 20 	subq	$0x20, %rsp
0000000100006cf8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100006cfc	48 c7 45 f0 00 00 00 00 	movq	$0x0, -0x10(%rbp)
0000000100006d04	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100006d08	48 63 bf 80 00 00 00 	movslq	0x80(%rdi), %rdi
0000000100006d0f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006d13	48 8b 48 40 	movq	0x40(%rax), %rcx
0000000100006d17	48 29 f9 	subq	%rdi, %rcx
0000000100006d1a	48 89 48 40 	movq	%rcx, 0x40(%rax)
0000000100006d1e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006d22	48 63 80 84 00 00 00 	movslq	0x84(%rax), %rax
0000000100006d29	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100006d2d	48 8b 79 40 	movq	0x40(%rcx), %rdi
0000000100006d31	48 29 c7 	subq	%rax, %rdi
0000000100006d34	48 89 79 40 	movq	%rdi, 0x40(%rcx)
0000000100006d38	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006d3c	48 8b 78 40 	movq	0x40(%rax), %rdi
0000000100006d40	e8 ab e0 ff ff 	callq	_ft_strnew
0000000100006d45	be 20 00 00 00 	movl	$0x20, %esi
0000000100006d4a	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100006d4e	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100006d52	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006d56	48 8b 50 40 	movq	0x40(%rax), %rdx
0000000100006d5a	e8 f1 dc ff ff 	callq	_ft_memset
0000000100006d5f	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100006d63	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100006d67	48 89 c8 	movq	%rcx, %rax
0000000100006d6a	48 83 c4 20 	addq	$0x20, %rsp
0000000100006d6e	5d 	popq	%rbp
0000000100006d6f	c3 	retq
_write_width_0:
0000000100006d70	55 	pushq	%rbp
0000000100006d71	48 89 e5 	movq	%rsp, %rbp
0000000100006d74	48 83 ec 30 	subq	$0x30, %rsp
0000000100006d78	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100006d7c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100006d80	48 c7 45 e0 00 00 00 00 	movq	$0x0, -0x20(%rbp)
0000000100006d88	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006d8c	48 63 b6 80 00 00 00 	movslq	0x80(%rsi), %rsi
0000000100006d93	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100006d97	48 8b 47 40 	movq	0x40(%rdi), %rax
0000000100006d9b	48 29 f0 	subq	%rsi, %rax
0000000100006d9e	48 89 47 40 	movq	%rax, 0x40(%rdi)
0000000100006da2	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006da6	48 63 80 84 00 00 00 	movslq	0x84(%rax), %rax
0000000100006dad	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100006db1	48 8b 7e 40 	movq	0x40(%rsi), %rdi
0000000100006db5	48 29 c7 	subq	%rax, %rdi
0000000100006db8	48 89 7e 40 	movq	%rdi, 0x40(%rsi)
0000000100006dbc	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006dc0	48 8b 78 40 	movq	0x40(%rax), %rdi
0000000100006dc4	e8 27 e0 ff ff 	callq	_ft_strnew
0000000100006dc9	48 8d 3d ec 7b 00 00 	leaq	0x7bec(%rip), %rdi ## literal pool for: "dDioOuUxX"
0000000100006dd0	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100006dd4	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006dd8	0f be 30 	movsbl	(%rax), %esi
0000000100006ddb	e8 c0 de ff ff 	callq	_ft_strchr
0000000100006de0	48 83 f8 00 	cmpq	$0x0, %rax
0000000100006de4	0f 84 8d 00 00 00 	je	0x100006e77
0000000100006dea	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006dee	48 8b 40 58 	movq	0x58(%rax), %rax
0000000100006df2	0f be 08 	movsbl	(%rax), %ecx
0000000100006df5	83 f9 2d 	cmpl	$0x2d, %ecx
0000000100006df8	0f 85 79 00 00 00 	jne	0x100006e77
0000000100006dfe	be 01 00 00 00 	movl	$0x1, %esi
0000000100006e03	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006e07	48 8b 78 58 	movq	0x58(%rax), %rdi
0000000100006e0b	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006e0f	8b 88 80 00 00 00 	movl	0x80(%rax), %ecx
0000000100006e15	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006e19	03 88 84 00 00 00 	addl	0x84(%rax), %ecx
0000000100006e1f	83 e9 01 	subl	$0x1, %ecx
0000000100006e22	48 63 d1 	movslq	%ecx, %rdx
0000000100006e25	e8 86 e0 ff ff 	callq	_ft_strsub
0000000100006e2a	48 89 45 e0 	movq	%rax, -0x20(%rbp)
0000000100006e2e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006e32	48 83 c0 58 	addq	$0x58, %rax
0000000100006e36	48 89 c7 	movq	%rax, %rdi
0000000100006e39	e8 32 e0 ff ff 	callq	_ft_strdel
0000000100006e3e	be 30 00 00 00 	movl	$0x30, %esi
0000000100006e43	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100006e47	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100006e4b	48 89 42 58 	movq	%rax, 0x58(%rdx)
0000000100006e4f	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100006e53	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006e57	48 8b 40 40 	movq	0x40(%rax), %rax
0000000100006e5b	48 83 c0 01 	addq	$0x1, %rax
0000000100006e5f	48 89 c2 	movq	%rax, %rdx
0000000100006e62	e8 e9 db ff ff 	callq	_ft_memset
0000000100006e67	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
0000000100006e6b	c6 02 2d 	movb	$0x2d, (%rdx)
0000000100006e6e	48 89 45 d8 	movq	%rax, -0x28(%rbp)
0000000100006e72	e9 1a 00 00 00 	jmp	0x100006e91
0000000100006e77	be 30 00 00 00 	movl	$0x30, %esi
0000000100006e7c	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100006e80	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006e84	48 8b 50 40 	movq	0x40(%rax), %rdx
0000000100006e88	e8 c3 db ff ff 	callq	_ft_memset
0000000100006e8d	48 89 45 d0 	movq	%rax, -0x30(%rbp)
0000000100006e91	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100006e95	48 83 c4 30 	addq	$0x30, %rsp
0000000100006e99	5d 	popq	%rbp
0000000100006e9a	c3 	retq
0000000100006e9b	90 	nop
0000000100006e9c	90 	nop
0000000100006e9d	90 	nop
0000000100006e9e	90 	nop
0000000100006e9f	90 	nop
_convert_itoa:
0000000100006ea0	55 	pushq	%rbp
0000000100006ea1	48 89 e5 	movq	%rsp, %rbp
0000000100006ea4	48 83 ec 20 	subq	$0x20, %rsp
0000000100006ea8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100006eac	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100006eb0	48 89 55 e8 	movq	%rdx, -0x18(%rbp)
0000000100006eb4	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100006eb8	0f be 02 	movsbl	(%rdx), %eax
0000000100006ebb	83 f8 69 	cmpl	$0x69, %eax
0000000100006ebe	0f 84 20 00 00 00 	je	0x100006ee4
0000000100006ec4	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006ec8	0f be 08 	movsbl	(%rax), %ecx
0000000100006ecb	83 f9 64 	cmpl	$0x64, %ecx
0000000100006ece	0f 84 10 00 00 00 	je	0x100006ee4
0000000100006ed4	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006ed8	0f be 08 	movsbl	(%rax), %ecx
0000000100006edb	83 f9 44 	cmpl	$0x44, %ecx
0000000100006ede	0f 85 16 00 00 00 	jne	0x100006efa
0000000100006ee4	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100006ee8	e8 43 29 00 00 	callq	_ft_itoa_ll_limit
0000000100006eed	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100006ef1	48 89 47 58 	movq	%rax, 0x58(%rdi)
0000000100006ef5	e9 eb 00 00 00 	jmp	0x100006fe5
0000000100006efa	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006efe	0f be 08 	movsbl	(%rax), %ecx
0000000100006f01	83 f9 75 	cmpl	$0x75, %ecx
0000000100006f04	0f 84 10 00 00 00 	je	0x100006f1a
0000000100006f0a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006f0e	0f be 08 	movsbl	(%rax), %ecx
0000000100006f11	83 f9 55 	cmpl	$0x55, %ecx
0000000100006f14	0f 85 1b 00 00 00 	jne	0x100006f35
0000000100006f1a	be 0a 00 00 00 	movl	$0xa, %esi
0000000100006f1f	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100006f23	e8 88 26 00 00 	callq	_ft_itoa_base_ui
0000000100006f28	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100006f2c	48 89 47 58 	movq	%rax, 0x58(%rdi)
0000000100006f30	e9 ab 00 00 00 	jmp	0x100006fe0
0000000100006f35	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006f39	0f be 08 	movsbl	(%rax), %ecx
0000000100006f3c	83 f9 6f 	cmpl	$0x6f, %ecx
0000000100006f3f	0f 84 10 00 00 00 	je	0x100006f55
0000000100006f45	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006f49	0f be 08 	movsbl	(%rax), %ecx
0000000100006f4c	83 f9 4f 	cmpl	$0x4f, %ecx
0000000100006f4f	0f 85 1b 00 00 00 	jne	0x100006f70
0000000100006f55	be 08 00 00 00 	movl	$0x8, %esi
0000000100006f5a	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100006f5e	e8 4d 26 00 00 	callq	_ft_itoa_base_ui
0000000100006f63	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100006f67	48 89 47 58 	movq	%rax, 0x58(%rdi)
0000000100006f6b	e9 6b 00 00 00 	jmp	0x100006fdb
0000000100006f70	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006f74	0f be 08 	movsbl	(%rax), %ecx
0000000100006f77	83 f9 78 	cmpl	$0x78, %ecx
0000000100006f7a	0f 84 10 00 00 00 	je	0x100006f90
0000000100006f80	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006f84	0f be 08 	movsbl	(%rax), %ecx
0000000100006f87	83 f9 70 	cmpl	$0x70, %ecx
0000000100006f8a	0f 85 1b 00 00 00 	jne	0x100006fab
0000000100006f90	be 10 00 00 00 	movl	$0x10, %esi
0000000100006f95	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100006f99	e8 12 26 00 00 	callq	_ft_itoa_base_ui
0000000100006f9e	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100006fa2	48 89 47 58 	movq	%rax, 0x58(%rdi)
0000000100006fa6	e9 2b 00 00 00 	jmp	0x100006fd6
0000000100006fab	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100006faf	0f be 08 	movsbl	(%rax), %ecx
0000000100006fb2	83 f9 58 	cmpl	$0x58, %ecx
0000000100006fb5	0f 85 16 00 00 00 	jne	0x100006fd1
0000000100006fbb	be 10 00 00 00 	movl	$0x10, %esi
0000000100006fc0	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100006fc4	e8 57 27 00 00 	callq	_ft_itoa_base_maj_ui
0000000100006fc9	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100006fcd	48 89 47 58 	movq	%rax, 0x58(%rdi)
0000000100006fd1	e9 00 00 00 00 	jmp	0x100006fd6
0000000100006fd6	e9 00 00 00 00 	jmp	0x100006fdb
0000000100006fdb	e9 00 00 00 00 	jmp	0x100006fe0
0000000100006fe0	e9 00 00 00 00 	jmp	0x100006fe5
0000000100006fe5	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006fe9	48 8b 40 58 	movq	0x58(%rax), %rax
0000000100006fed	0f be 08 	movsbl	(%rax), %ecx
0000000100006ff0	83 f9 2d 	cmpl	$0x2d, %ecx
0000000100006ff3	0f 85 0e 00 00 00 	jne	0x100007007
0000000100006ff9	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100006ffd	c7 80 88 00 00 00 ff ff ff ff 	movl	$0xffffffff, 0x88(%rax)
0000000100007007	b8 01 00 00 00 	movl	$0x1, %eax
000000010000700c	48 83 c4 20 	addq	$0x20, %rsp
0000000100007010	5d 	popq	%rbp
0000000100007011	c3 	retq
0000000100007012	66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_write_dipoux:
0000000100007020	55 	pushq	%rbp
0000000100007021	48 89 e5 	movq	%rsp, %rbp
0000000100007024	48 83 ec 30 	subq	$0x30, %rsp
0000000100007028	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000702c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100007030	48 89 55 e8 	movq	%rdx, -0x18(%rbp)
0000000100007034	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100007038	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000703c	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
0000000100007040	e8 5b fe ff ff 	callq	_convert_itoa
0000000100007045	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100007049	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000704d	89 45 e4 	movl	%eax, -0x1c(%rbp)
0000000100007050	e8 0b 01 00 00 	callq	_before_dioux
0000000100007055	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100007059	83 7a 34 00 	cmpl	$0x0, 0x34(%rdx)
000000010000705d	89 45 e0 	movl	%eax, -0x20(%rbp)
0000000100007060	0f 84 10 00 00 00 	je	0x100007076
0000000100007066	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000706a	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000706e	e8 2d 0b 00 00 	callq	_preci_dioux
0000000100007073	89 45 dc 	movl	%eax, -0x24(%rbp)
0000000100007076	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000707a	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000707e	e8 cd fb ff ff 	callq	_can_i_write_width
0000000100007083	83 f8 01 	cmpl	$0x1, %eax
0000000100007086	0f 85 b1 00 00 00 	jne	0x10000713d
000000010000708c	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007090	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
0000000100007094	0f 85 24 00 00 00 	jne	0x1000070be
000000010000709a	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000709e	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
00000001000070a2	0f 85 16 00 00 00 	jne	0x1000070be
00000001000070a8	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000070ac	e8 3f fc ff ff 	callq	_write_width
00000001000070b1	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000070b5	48 89 47 78 	movq	%rax, 0x78(%rdi)
00000001000070b9	e9 7a 00 00 00 	jmp	0x100007138
00000001000070be	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000070c2	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
00000001000070c6	0f 84 28 00 00 00 	je	0x1000070f4
00000001000070cc	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000070d0	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
00000001000070d4	0f 85 1a 00 00 00 	jne	0x1000070f4
00000001000070da	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000070de	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000070e2	e8 89 fc ff ff 	callq	_write_width_0
00000001000070e7	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000070eb	48 89 46 78 	movq	%rax, 0x78(%rsi)
00000001000070ef	e9 3f 00 00 00 	jmp	0x100007133
00000001000070f4	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000070f8	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
00000001000070fc	0f 84 2c 00 00 00 	je	0x10000712e
0000000100007102	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007106	48 8b 78 58 	movq	0x58(%rax), %rdi
000000010000710a	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000710e	48 89 7d d0 	movq	%rdi, -0x30(%rbp)
0000000100007112	48 89 c7 	movq	%rax, %rdi
0000000100007115	e8 d6 fb ff ff 	callq	_write_width
000000010000711a	48 8b 7d d0 	movq	-0x30(%rbp), %rdi
000000010000711e	48 89 c6 	movq	%rax, %rsi
0000000100007121	e8 7a 32 00 00 	callq	_ft_strjoinfree
0000000100007126	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000712a	48 89 46 58 	movq	%rax, 0x58(%rsi)
000000010000712e	e9 00 00 00 00 	jmp	0x100007133
0000000100007133	e9 00 00 00 00 	jmp	0x100007138
0000000100007138	e9 00 00 00 00 	jmp	0x10000713d
000000010000713d	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100007141	e8 2a 02 00 00 	callq	_assemblage
0000000100007146	31 c9 	xorl	%ecx, %ecx
0000000100007148	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000714c	48 89 87 90 00 00 00 	movq	%rax, 0x90(%rdi)
0000000100007153	89 c8 	movl	%ecx, %eax
0000000100007155	48 83 c4 30 	addq	$0x30, %rsp
0000000100007159	5d 	popq	%rbp
000000010000715a	c3 	retq
000000010000715b	0f 1f 44 00 00 	nopl	(%rax,%rax)
_before_dioux:
0000000100007160	55 	pushq	%rbp
0000000100007161	48 89 e5 	movq	%rsp, %rbp
0000000100007164	48 83 ec 10 	subq	$0x10, %rsp
0000000100007168	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000716c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100007170	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100007174	83 7e 28 00 	cmpl	$0x0, 0x28(%rsi)
0000000100007178	0f 85 0e 00 00 00 	jne	0x10000718c
000000010000717e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007182	83 78 2c 00 	cmpl	$0x0, 0x2c(%rax)
0000000100007186	0f 84 a2 00 00 00 	je	0x10000722e
000000010000718c	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007190	0f be 08 	movsbl	(%rax), %ecx
0000000100007193	83 f9 69 	cmpl	$0x69, %ecx
0000000100007196	0f 84 20 00 00 00 	je	0x1000071bc
000000010000719c	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000071a0	0f be 08 	movsbl	(%rax), %ecx
00000001000071a3	83 f9 64 	cmpl	$0x64, %ecx
00000001000071a6	0f 84 10 00 00 00 	je	0x1000071bc
00000001000071ac	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000071b0	0f be 08 	movsbl	(%rax), %ecx
00000001000071b3	83 f9 44 	cmpl	$0x44, %ecx
00000001000071b6	0f 85 72 00 00 00 	jne	0x10000722e
00000001000071bc	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000071c0	83 b8 88 00 00 00 01 	cmpl	$0x1, 0x88(%rax)
00000001000071c7	0f 85 61 00 00 00 	jne	0x10000722e
00000001000071cd	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000071d1	83 78 28 00 	cmpl	$0x0, 0x28(%rax)
00000001000071d5	0f 84 19 00 00 00 	je	0x1000071f4
00000001000071db	48 8d 3d e4 77 00 00 	leaq	0x77e4(%rip), %rdi ## literal pool for: "+"
00000001000071e2	e8 d9 d9 ff ff 	callq	_ft_strdup
00000001000071e7	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000071eb	48 89 47 70 	movq	%rax, 0x70(%rdi)
00000001000071ef	e9 35 00 00 00 	jmp	0x100007229
00000001000071f4	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000071f8	83 78 2c 00 	cmpl	$0x0, 0x2c(%rax)
00000001000071fc	0f 84 22 00 00 00 	je	0x100007224
0000000100007202	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007206	83 78 28 00 	cmpl	$0x0, 0x28(%rax)
000000010000720a	0f 85 14 00 00 00 	jne	0x100007224
0000000100007210	48 8d 3d b1 77 00 00 	leaq	0x77b1(%rip), %rdi ## literal pool for: " "
0000000100007217	e8 a4 d9 ff ff 	callq	_ft_strdup
000000010000721c	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100007220	48 89 47 70 	movq	%rax, 0x70(%rdi)
0000000100007224	e9 00 00 00 00 	jmp	0x100007229
0000000100007229	e9 f9 00 00 00 	jmp	0x100007327
000000010000722e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007232	83 78 20 00 	cmpl	$0x0, 0x20(%rax)
0000000100007236	0f 84 31 00 00 00 	je	0x10000726d
000000010000723c	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007240	48 8b 40 58 	movq	0x58(%rax), %rax
0000000100007244	0f be 08 	movsbl	(%rax), %ecx
0000000100007247	83 f9 30 	cmpl	$0x30, %ecx
000000010000724a	0f 84 1d 00 00 00 	je	0x10000726d
0000000100007250	48 8d 3d 73 77 00 00 	leaq	0x7773(%rip), %rdi ## literal pool for: "xXoO"
0000000100007257	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000725b	0f be 30 	movsbl	(%rax), %esi
000000010000725e	e8 3d da ff ff 	callq	_ft_strchr
0000000100007263	48 83 f8 00 	cmpq	$0x0, %rax
0000000100007267	0f 85 10 00 00 00 	jne	0x10000727d
000000010000726d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007271	0f be 08 	movsbl	(%rax), %ecx
0000000100007274	83 f9 70 	cmpl	$0x70, %ecx
0000000100007277	0f 85 a5 00 00 00 	jne	0x100007322
000000010000727d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007281	0f be 08 	movsbl	(%rax), %ecx
0000000100007284	83 f9 6f 	cmpl	$0x6f, %ecx
0000000100007287	0f 84 10 00 00 00 	je	0x10000729d
000000010000728d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007291	0f be 08 	movsbl	(%rax), %ecx
0000000100007294	83 f9 4f 	cmpl	$0x4f, %ecx
0000000100007297	0f 85 19 00 00 00 	jne	0x1000072b6
000000010000729d	48 8d 3d 2b 77 00 00 	leaq	0x772b(%rip), %rdi ## literal pool for: "0"
00000001000072a4	e8 17 d9 ff ff 	callq	_ft_strdup
00000001000072a9	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000072ad	48 89 47 70 	movq	%rax, 0x70(%rdi)
00000001000072b1	e9 67 00 00 00 	jmp	0x10000731d
00000001000072b6	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000072ba	0f be 08 	movsbl	(%rax), %ecx
00000001000072bd	83 f9 78 	cmpl	$0x78, %ecx
00000001000072c0	0f 84 10 00 00 00 	je	0x1000072d6
00000001000072c6	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000072ca	0f be 08 	movsbl	(%rax), %ecx
00000001000072cd	83 f9 70 	cmpl	$0x70, %ecx
00000001000072d0	0f 85 19 00 00 00 	jne	0x1000072ef
00000001000072d6	48 8d 3d f4 76 00 00 	leaq	0x76f4(%rip), %rdi ## literal pool for: "0x"
00000001000072dd	e8 de d8 ff ff 	callq	_ft_strdup
00000001000072e2	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000072e6	48 89 47 70 	movq	%rax, 0x70(%rdi)
00000001000072ea	e9 29 00 00 00 	jmp	0x100007318
00000001000072ef	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000072f3	0f be 08 	movsbl	(%rax), %ecx
00000001000072f6	83 f9 58 	cmpl	$0x58, %ecx
00000001000072f9	0f 85 14 00 00 00 	jne	0x100007313
00000001000072ff	48 8d 3d ce 76 00 00 	leaq	0x76ce(%rip), %rdi ## literal pool for: "0X"
0000000100007306	e8 b5 d8 ff ff 	callq	_ft_strdup
000000010000730b	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000730f	48 89 47 70 	movq	%rax, 0x70(%rdi)
0000000100007313	e9 00 00 00 00 	jmp	0x100007318
0000000100007318	e9 00 00 00 00 	jmp	0x10000731d
000000010000731d	e9 00 00 00 00 	jmp	0x100007322
0000000100007322	e9 00 00 00 00 	jmp	0x100007327
0000000100007327	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000732b	48 83 78 70 00 	cmpq	$0x0, 0x70(%rax)
0000000100007330	0f 84 23 00 00 00 	je	0x100007359
0000000100007336	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000733a	48 8b 78 70 	movq	0x70(%rax), %rdi
000000010000733e	e8 3d d8 ff ff 	callq	_ft_strlen
0000000100007343	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100007347	48 63 8f 80 00 00 00 	movslq	0x80(%rdi), %rcx
000000010000734e	48 01 c1 	addq	%rax, %rcx
0000000100007351	89 ca 	movl	%ecx, %edx
0000000100007353	89 97 80 00 00 00 	movl	%edx, 0x80(%rdi)
0000000100007359	31 c0 	xorl	%eax, %eax
000000010000735b	48 83 c4 10 	addq	$0x10, %rsp
000000010000735f	5d 	popq	%rbp
0000000100007360	c3 	retq
0000000100007361	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_assemblage:
0000000100007370	55 	pushq	%rbp
0000000100007371	48 89 e5 	movq	%rsp, %rbp
0000000100007374	48 83 ec 10 	subq	$0x10, %rsp
0000000100007378	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000737c	48 c7 45 f0 00 00 00 00 	movq	$0x0, -0x10(%rbp)
0000000100007384	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100007388	48 83 7f 70 00 	cmpq	$0x0, 0x70(%rdi)
000000010000738d	0f 84 54 00 00 00 	je	0x1000073e7
0000000100007393	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007397	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
000000010000739b	0f 84 46 00 00 00 	je	0x1000073e7
00000001000073a1	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000073a5	48 83 78 78 00 	cmpq	$0x0, 0x78(%rax)
00000001000073aa	0f 84 22 00 00 00 	je	0x1000073d2
00000001000073b0	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000073b4	48 8b 78 70 	movq	0x70(%rax), %rdi
00000001000073b8	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000073bc	48 8b 70 78 	movq	0x78(%rax), %rsi
00000001000073c0	e8 db 2f 00 00 	callq	_ft_strjoinfree
00000001000073c5	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000073c9	48 89 46 78 	movq	%rax, 0x78(%rsi)
00000001000073cd	e9 10 00 00 00 	jmp	0x1000073e2
00000001000073d2	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000073d6	48 8b 40 70 	movq	0x70(%rax), %rax
00000001000073da	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000073de	48 89 41 78 	movq	%rax, 0x78(%rcx)
00000001000073e2	e9 00 00 00 00 	jmp	0x1000073e7
00000001000073e7	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000073eb	48 83 78 70 00 	cmpq	$0x0, 0x70(%rax)
00000001000073f0	0f 84 2b 00 00 00 	je	0x100007421
00000001000073f6	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000073fa	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
00000001000073fe	0f 85 1d 00 00 00 	jne	0x100007421
0000000100007404	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007408	48 8b 78 70 	movq	0x70(%rax), %rdi
000000010000740c	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007410	48 8b 70 58 	movq	0x58(%rax), %rsi
0000000100007414	e8 87 2f 00 00 	callq	_ft_strjoinfree
0000000100007419	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
000000010000741d	48 89 46 58 	movq	%rax, 0x58(%rsi)
0000000100007421	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007425	48 83 78 78 00 	cmpq	$0x0, 0x78(%rax)
000000010000742a	0f 84 1e 00 00 00 	je	0x10000744e
0000000100007430	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007434	48 8b 78 78 	movq	0x78(%rax), %rdi
0000000100007438	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000743c	48 8b 70 58 	movq	0x58(%rax), %rsi
0000000100007440	e8 5b 2f 00 00 	callq	_ft_strjoinfree
0000000100007445	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100007449	e9 0c 00 00 00 	jmp	0x10000745a
000000010000744e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007452	48 8b 40 58 	movq	0x58(%rax), %rax
0000000100007456	48 89 45 f0 	movq	%rax, -0x10(%rbp)
000000010000745a	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000745e	48 83 c4 10 	addq	$0x10, %rsp
0000000100007462	5d 	popq	%rbp
0000000100007463	c3 	retq
0000000100007464	90 	nop
0000000100007465	90 	nop
0000000100007466	90 	nop
0000000100007467	90 	nop
0000000100007468	90 	nop
0000000100007469	90 	nop
000000010000746a	90 	nop
000000010000746b	90 	nop
000000010000746c	90 	nop
000000010000746d	90 	nop
000000010000746e	90 	nop
000000010000746f	90 	nop
_sc_c:
0000000100007470	55 	pushq	%rbp
0000000100007471	48 89 e5 	movq	%rsp, %rbp
0000000100007474	48 83 ec 20 	subq	$0x20, %rsp
0000000100007478	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000747c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100007480	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100007484	0f be 06 	movsbl	(%rsi), %eax
0000000100007487	83 f8 43 	cmpl	$0x43, %eax
000000010000748a	0f 85 0b 00 00 00 	jne	0x10000749b
0000000100007490	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007494	c7 40 50 05 00 00 00 	movl	$0x5, 0x50(%rax)
000000010000749b	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000749f	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000074a3	e8 e8 00 00 00 	callq	_arg_c
00000001000074a8	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000074ac	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000074b0	89 45 ec 	movl	%eax, -0x14(%rbp)
00000001000074b3	e8 98 f7 ff ff 	callq	_can_i_write_width
00000001000074b8	83 f8 01 	cmpl	$0x1, %eax
00000001000074bb	0f 85 a7 00 00 00 	jne	0x100007568
00000001000074c1	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000074c5	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
00000001000074c9	0f 85 1f 00 00 00 	jne	0x1000074ee
00000001000074cf	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000074d3	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
00000001000074d7	0f 85 11 00 00 00 	jne	0x1000074ee
00000001000074dd	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000074e1	e8 0a f8 ff ff 	callq	_write_width
00000001000074e6	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000074ea	48 89 47 78 	movq	%rax, 0x78(%rdi)
00000001000074ee	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000074f2	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
00000001000074f6	0f 84 23 00 00 00 	je	0x10000751f
00000001000074fc	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007500	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100007504	0f 85 15 00 00 00 	jne	0x10000751f
000000010000750a	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000750e	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100007512	e8 59 f8 ff ff 	callq	_write_width_0
0000000100007517	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000751b	48 89 46 78 	movq	%rax, 0x78(%rsi)
000000010000751f	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007523	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100007527	0f 84 36 00 00 00 	je	0x100007563
000000010000752d	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007531	48 8b 78 68 	movq	0x68(%rax), %rdi
0000000100007535	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007539	48 89 7d e0 	movq	%rdi, -0x20(%rbp)
000000010000753d	48 89 c7 	movq	%rax, %rdi
0000000100007540	e8 ab f7 ff ff 	callq	_write_width
0000000100007545	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100007549	8b 97 84 00 00 00 	movl	0x84(%rdi), %edx
000000010000754f	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
0000000100007553	48 89 c6 	movq	%rax, %rsi
0000000100007556	e8 75 2f 00 00 	callq	_ft_memjoinfree
000000010000755b	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000755f	48 89 46 68 	movq	%rax, 0x68(%rsi)
0000000100007563	e9 00 00 00 00 	jmp	0x100007568
0000000100007568	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000756c	e8 7f 01 00 00 	callq	_assemblage_c
0000000100007571	31 c9 	xorl	%ecx, %ecx
0000000100007573	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100007577	48 89 87 90 00 00 00 	movq	%rax, 0x90(%rdi)
000000010000757e	89 c8 	movl	%ecx, %eax
0000000100007580	48 83 c4 20 	addq	$0x20, %rsp
0000000100007584	5d 	popq	%rbp
0000000100007585	c3 	retq
0000000100007586	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_arg_c:
0000000100007590	55 	pushq	%rbp
0000000100007591	48 89 e5 	movq	%rsp, %rbp
0000000100007594	48 83 ec 50 	subq	$0x50, %rsp
0000000100007598	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000759c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000075a0	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
00000001000075a7	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
00000001000075ab	0f be 06 	movsbl	(%rsi), %eax
00000001000075ae	83 f8 63 	cmpl	$0x63, %eax
00000001000075b1	0f 85 a4 00 00 00 	jne	0x10000765b
00000001000075b7	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000075bb	83 78 50 05 	cmpl	$0x5, 0x50(%rax)
00000001000075bf	0f 84 96 00 00 00 	je	0x10000765b
00000001000075c5	b8 01 00 00 00 	movl	$0x1, %eax
00000001000075ca	89 c7 	movl	%eax, %edi
00000001000075cc	e8 1f d8 ff ff 	callq	_ft_strnew
00000001000075d1	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000075d5	48 89 47 68 	movq	%rax, 0x68(%rdi)
00000001000075d9	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000075dd	48 89 c7 	movq	%rax, %rdi
00000001000075e0	48 83 c7 08 	addq	$0x8, %rdi
00000001000075e4	8b 48 08 	movl	0x8(%rax), %ecx
00000001000075e7	83 f9 28 	cmpl	$0x28, %ecx
00000001000075ea	48 89 7d e0 	movq	%rdi, -0x20(%rbp)
00000001000075ee	89 4d dc 	movl	%ecx, -0x24(%rbp)
00000001000075f1	0f 87 1c 00 00 00 	ja	0x100007613
00000001000075f7	8b 45 dc 	movl	-0x24(%rbp), %eax
00000001000075fa	48 63 c8 	movslq	%eax, %rcx
00000001000075fd	48 8b 55 e0 	movq	-0x20(%rbp), %rdx
0000000100007601	48 03 4a 10 	addq	0x10(%rdx), %rcx
0000000100007605	83 c0 08 	addl	$0x8, %eax
0000000100007608	89 02 	movl	%eax, (%rdx)
000000010000760a	48 89 4d d0 	movq	%rcx, -0x30(%rbp)
000000010000760e	e9 17 00 00 00 	jmp	0x10000762a
0000000100007613	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100007617	48 8b 48 08 	movq	0x8(%rax), %rcx
000000010000761b	48 89 ca 	movq	%rcx, %rdx
000000010000761e	48 83 c1 08 	addq	$0x8, %rcx
0000000100007622	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100007626	48 89 55 d0 	movq	%rdx, -0x30(%rbp)
000000010000762a	48 8b 45 d0 	movq	-0x30(%rbp), %rax
000000010000762e	8b 08 	movl	(%rax), %ecx
0000000100007630	88 ca 	movb	%cl, %dl
0000000100007632	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007636	48 8b 40 68 	movq	0x68(%rax), %rax
000000010000763a	88 10 	movb	%dl, (%rax)
000000010000763c	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007640	48 8b 40 68 	movq	0x68(%rax), %rax
0000000100007644	c6 40 01 00 	movb	$0x0, 0x1(%rax)
0000000100007648	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000764c	c7 80 84 00 00 00 01 00 00 00 	movl	$0x1, 0x84(%rax)
0000000100007656	e9 7c 00 00 00 	jmp	0x1000076d7
000000010000765b	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000765f	48 89 c1 	movq	%rax, %rcx
0000000100007662	48 83 c1 08 	addq	$0x8, %rcx
0000000100007666	8b 50 08 	movl	0x8(%rax), %edx
0000000100007669	83 fa 28 	cmpl	$0x28, %edx
000000010000766c	48 89 4d c8 	movq	%rcx, -0x38(%rbp)
0000000100007670	89 55 c4 	movl	%edx, -0x3c(%rbp)
0000000100007673	0f 87 1c 00 00 00 	ja	0x100007695
0000000100007679	8b 45 c4 	movl	-0x3c(%rbp), %eax
000000010000767c	48 63 c8 	movslq	%eax, %rcx
000000010000767f	48 8b 55 c8 	movq	-0x38(%rbp), %rdx
0000000100007683	48 03 4a 10 	addq	0x10(%rdx), %rcx
0000000100007687	83 c0 08 	addl	$0x8, %eax
000000010000768a	89 02 	movl	%eax, (%rdx)
000000010000768c	48 89 4d b8 	movq	%rcx, -0x48(%rbp)
0000000100007690	e9 17 00 00 00 	jmp	0x1000076ac
0000000100007695	48 8b 45 c8 	movq	-0x38(%rbp), %rax
0000000100007699	48 8b 48 08 	movq	0x8(%rax), %rcx
000000010000769d	48 89 ca 	movq	%rcx, %rdx
00000001000076a0	48 83 c1 08 	addq	$0x8, %rcx
00000001000076a4	48 89 48 08 	movq	%rcx, 0x8(%rax)
00000001000076a8	48 89 55 b8 	movq	%rdx, -0x48(%rbp)
00000001000076ac	48 8b 45 b8 	movq	-0x48(%rbp), %rax
00000001000076b0	8b 08 	movl	(%rax), %ecx
00000001000076b2	89 4d ec 	movl	%ecx, -0x14(%rbp)
00000001000076b5	8b 7d ec 	movl	-0x14(%rbp), %edi
00000001000076b8	e8 43 23 00 00 	callq	_ft_wcharlen
00000001000076bd	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000076c1	89 82 84 00 00 00 	movl	%eax, 0x84(%rdx)
00000001000076c7	8b 7d ec 	movl	-0x14(%rbp), %edi
00000001000076ca	e8 a1 23 00 00 	callq	_ft_wctoc
00000001000076cf	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000076d3	48 89 42 68 	movq	%rax, 0x68(%rdx)
00000001000076d7	b8 01 00 00 00 	movl	$0x1, %eax
00000001000076dc	48 83 c4 50 	addq	$0x50, %rsp
00000001000076e0	5d 	popq	%rbp
00000001000076e1	c3 	retq
00000001000076e2	66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_assemblage_c:
00000001000076f0	55 	pushq	%rbp
00000001000076f1	48 89 e5 	movq	%rsp, %rbp
00000001000076f4	48 83 ec 10 	subq	$0x10, %rsp
00000001000076f8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000076fc	48 c7 45 f0 00 00 00 00 	movq	$0x0, -0x10(%rbp)
0000000100007704	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100007708	48 83 7f 68 00 	cmpq	$0x0, 0x68(%rdi)
000000010000770d	0f 85 11 00 00 00 	jne	0x100007724
0000000100007713	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007717	48 8b 40 78 	movq	0x78(%rax), %rax
000000010000771b	48 89 45 f0 	movq	%rax, -0x10(%rbp)
000000010000771f	e9 3e 00 00 00 	jmp	0x100007762
0000000100007724	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007728	48 83 78 78 00 	cmpq	$0x0, 0x78(%rax)
000000010000772d	0f 84 1e 00 00 00 	je	0x100007751
0000000100007733	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007737	48 8b 78 78 	movq	0x78(%rax), %rdi
000000010000773b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000773f	48 8b 70 68 	movq	0x68(%rax), %rsi
0000000100007743	e8 58 2c 00 00 	callq	_ft_strjoinfree
0000000100007748	48 89 45 f0 	movq	%rax, -0x10(%rbp)
000000010000774c	e9 0c 00 00 00 	jmp	0x10000775d
0000000100007751	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007755	48 8b 40 68 	movq	0x68(%rax), %rax
0000000100007759	48 89 45 f0 	movq	%rax, -0x10(%rbp)
000000010000775d	e9 00 00 00 00 	jmp	0x100007762
0000000100007762	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007766	48 83 c4 10 	addq	$0x10, %rsp
000000010000776a	5d 	popq	%rbp
000000010000776b	c3 	retq
000000010000776c	90 	nop
000000010000776d	90 	nop
000000010000776e	90 	nop
000000010000776f	90 	nop
_sc_s:
0000000100007770	55 	pushq	%rbp
0000000100007771	48 89 e5 	movq	%rsp, %rbp
0000000100007774	48 83 ec 20 	subq	$0x20, %rsp
0000000100007778	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000777c	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100007780	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100007784	0f be 06 	movsbl	(%rsi), %eax
0000000100007787	83 f8 53 	cmpl	$0x53, %eax
000000010000778a	0f 85 0b 00 00 00 	jne	0x10000779b
0000000100007790	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007794	c7 40 50 05 00 00 00 	movl	$0x5, 0x50(%rax)
000000010000779b	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000779f	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
00000001000077a3	e8 f8 00 00 00 	callq	_arg_s
00000001000077a8	83 f8 00 	cmpl	$0x0, %eax
00000001000077ab	0f 85 0c 00 00 00 	jne	0x1000077bd
00000001000077b1	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
00000001000077b8	e9 ce 00 00 00 	jmp	0x10000788b
00000001000077bd	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000077c1	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
00000001000077c5	e8 86 f4 ff ff 	callq	_can_i_write_width
00000001000077ca	83 f8 01 	cmpl	$0x1, %eax
00000001000077cd	0f 85 9d 00 00 00 	jne	0x100007870
00000001000077d3	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000077d7	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
00000001000077db	0f 85 1f 00 00 00 	jne	0x100007800
00000001000077e1	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000077e5	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
00000001000077e9	0f 85 11 00 00 00 	jne	0x100007800
00000001000077ef	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
00000001000077f3	e8 f8 f4 ff ff 	callq	_write_width
00000001000077f8	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
00000001000077fc	48 89 47 78 	movq	%rax, 0x78(%rdi)
0000000100007800	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007804	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
0000000100007808	0f 84 23 00 00 00 	je	0x100007831
000000010000780e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007812	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100007816	0f 85 15 00 00 00 	jne	0x100007831
000000010000781c	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100007820	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100007824	e8 47 f5 ff ff 	callq	_write_width_0
0000000100007829	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
000000010000782d	48 89 46 78 	movq	%rax, 0x78(%rsi)
0000000100007831	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007835	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100007839	0f 84 2c 00 00 00 	je	0x10000786b
000000010000783f	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007843	48 8b 78 68 	movq	0x68(%rax), %rdi
0000000100007847	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000784b	48 89 7d e0 	movq	%rdi, -0x20(%rbp)
000000010000784f	48 89 c7 	movq	%rax, %rdi
0000000100007852	e8 99 f4 ff ff 	callq	_write_width
0000000100007857	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
000000010000785b	48 89 c6 	movq	%rax, %rsi
000000010000785e	e8 3d 2b 00 00 	callq	_ft_strjoinfree
0000000100007863	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100007867	48 89 46 68 	movq	%rax, 0x68(%rsi)
000000010000786b	e9 00 00 00 00 	jmp	0x100007870
0000000100007870	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100007874	e8 27 02 00 00 	callq	_assemblage_s
0000000100007879	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
000000010000787d	48 89 87 90 00 00 00 	movq	%rax, 0x90(%rdi)
0000000100007884	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
000000010000788b	8b 45 fc 	movl	-0x4(%rbp), %eax
000000010000788e	48 83 c4 20 	addq	$0x20, %rsp
0000000100007892	5d 	popq	%rbp
0000000100007893	c3 	retq
0000000100007894	66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_arg_s:
00000001000078a0	55 	pushq	%rbp
00000001000078a1	48 89 e5 	movq	%rsp, %rbp
00000001000078a4	48 83 ec 60 	subq	$0x60, %rsp
00000001000078a8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
00000001000078ac	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
00000001000078b0	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000078b4	0f be 06 	movsbl	(%rsi), %eax
00000001000078b7	83 f8 73 	cmpl	$0x73, %eax
00000001000078ba	0f 85 e3 00 00 00 	jne	0x1000079a3
00000001000078c0	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000078c4	83 78 50 05 	cmpl	$0x5, 0x50(%rax)
00000001000078c8	0f 84 d5 00 00 00 	je	0x1000079a3
00000001000078ce	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000078d2	48 89 c1 	movq	%rax, %rcx
00000001000078d5	48 83 c1 08 	addq	$0x8, %rcx
00000001000078d9	8b 50 08 	movl	0x8(%rax), %edx
00000001000078dc	83 fa 28 	cmpl	$0x28, %edx
00000001000078df	48 89 4d e0 	movq	%rcx, -0x20(%rbp)
00000001000078e3	89 55 dc 	movl	%edx, -0x24(%rbp)
00000001000078e6	0f 87 1c 00 00 00 	ja	0x100007908
00000001000078ec	8b 45 dc 	movl	-0x24(%rbp), %eax
00000001000078ef	48 63 c8 	movslq	%eax, %rcx
00000001000078f2	48 8b 55 e0 	movq	-0x20(%rbp), %rdx
00000001000078f6	48 03 4a 10 	addq	0x10(%rdx), %rcx
00000001000078fa	83 c0 08 	addl	$0x8, %eax
00000001000078fd	89 02 	movl	%eax, (%rdx)
00000001000078ff	48 89 4d d0 	movq	%rcx, -0x30(%rbp)
0000000100007903	e9 17 00 00 00 	jmp	0x10000791f
0000000100007908	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000790c	48 8b 48 08 	movq	0x8(%rax), %rcx
0000000100007910	48 89 ca 	movq	%rcx, %rdx
0000000100007913	48 83 c1 08 	addq	$0x8, %rcx
0000000100007917	48 89 48 08 	movq	%rcx, 0x8(%rax)
000000010000791b	48 89 55 d0 	movq	%rdx, -0x30(%rbp)
000000010000791f	48 8b 45 d0 	movq	-0x30(%rbp), %rax
0000000100007923	48 8b 00 	movq	(%rax), %rax
0000000100007926	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
000000010000792a	48 89 41 60 	movq	%rax, 0x60(%rcx)
000000010000792e	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100007932	e8 c9 01 00 00 	callq	_try_error
0000000100007937	83 f8 00 	cmpl	$0x0, %eax
000000010000793a	0f 85 0c 00 00 00 	jne	0x10000794c
0000000100007940	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100007947	e9 49 01 00 00 	jmp	0x100007a95
000000010000794c	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007950	48 8b 40 60 	movq	0x60(%rax), %rax
0000000100007954	48 89 c7 	movq	%rax, %rdi
0000000100007957	e8 24 d2 ff ff 	callq	_ft_strlen
000000010000795c	89 c1 	movl	%eax, %ecx
000000010000795e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007962	89 88 84 00 00 00 	movl	%ecx, 0x84(%rax)
0000000100007968	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000796c	83 78 34 00 	cmpl	$0x0, 0x34(%rax)
0000000100007970	0f 84 10 00 00 00 	je	0x100007986
0000000100007976	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000797a	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
000000010000797e	e8 5d 04 00 00 	callq	_preci_sc
0000000100007983	89 45 cc 	movl	%eax, -0x34(%rbp)
0000000100007986	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000798a	48 8b 40 60 	movq	0x60(%rax), %rax
000000010000798e	48 89 c7 	movq	%rax, %rdi
0000000100007991	e8 2a d2 ff ff 	callq	_ft_strdup
0000000100007996	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
000000010000799a	48 89 47 68 	movq	%rax, 0x68(%rdi)
000000010000799e	e9 ca 00 00 00 	jmp	0x100007a6d
00000001000079a3	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000079a7	48 89 c1 	movq	%rax, %rcx
00000001000079aa	48 83 c1 08 	addq	$0x8, %rcx
00000001000079ae	8b 50 08 	movl	0x8(%rax), %edx
00000001000079b1	83 fa 28 	cmpl	$0x28, %edx
00000001000079b4	48 89 4d c0 	movq	%rcx, -0x40(%rbp)
00000001000079b8	89 55 bc 	movl	%edx, -0x44(%rbp)
00000001000079bb	0f 87 1c 00 00 00 	ja	0x1000079dd
00000001000079c1	8b 45 bc 	movl	-0x44(%rbp), %eax
00000001000079c4	48 63 c8 	movslq	%eax, %rcx
00000001000079c7	48 8b 55 c0 	movq	-0x40(%rbp), %rdx
00000001000079cb	48 03 4a 10 	addq	0x10(%rdx), %rcx
00000001000079cf	83 c0 08 	addl	$0x8, %eax
00000001000079d2	89 02 	movl	%eax, (%rdx)
00000001000079d4	48 89 4d b0 	movq	%rcx, -0x50(%rbp)
00000001000079d8	e9 17 00 00 00 	jmp	0x1000079f4
00000001000079dd	48 8b 45 c0 	movq	-0x40(%rbp), %rax
00000001000079e1	48 8b 48 08 	movq	0x8(%rax), %rcx
00000001000079e5	48 89 ca 	movq	%rcx, %rdx
00000001000079e8	48 83 c1 08 	addq	$0x8, %rcx
00000001000079ec	48 89 48 08 	movq	%rcx, 0x8(%rax)
00000001000079f0	48 89 55 b0 	movq	%rdx, -0x50(%rbp)
00000001000079f4	48 8b 45 b0 	movq	-0x50(%rbp), %rax
00000001000079f8	48 8b 00 	movq	(%rax), %rax
00000001000079fb	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
00000001000079ff	48 89 41 60 	movq	%rax, 0x60(%rcx)
0000000100007a03	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100007a07	e8 f4 00 00 00 	callq	_try_error
0000000100007a0c	83 f8 00 	cmpl	$0x0, %eax
0000000100007a0f	0f 85 0c 00 00 00 	jne	0x100007a21
0000000100007a15	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100007a1c	e9 74 00 00 00 	jmp	0x100007a95
0000000100007a21	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007a25	48 8b 78 60 	movq	0x60(%rax), %rdi
0000000100007a29	e8 72 26 00 00 	callq	_ft_wstrlen
0000000100007a2e	89 c1 	movl	%eax, %ecx
0000000100007a30	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007a34	89 88 84 00 00 00 	movl	%ecx, 0x84(%rax)
0000000100007a3a	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007a3e	83 78 34 00 	cmpl	$0x0, 0x34(%rax)
0000000100007a42	0f 84 10 00 00 00 	je	0x100007a58
0000000100007a48	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100007a4c	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100007a50	e8 8b 03 00 00 	callq	_preci_sc
0000000100007a55	89 45 ac 	movl	%eax, -0x54(%rbp)
0000000100007a58	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007a5c	48 8b 78 60 	movq	0x60(%rax), %rdi
0000000100007a60	e8 4b 22 00 00 	callq	_ft_watoa
0000000100007a65	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100007a69	48 89 47 68 	movq	%rax, 0x68(%rdi)
0000000100007a6d	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007a71	83 b8 9c 00 00 00 00 	cmpl	$0x0, 0x9c(%rax)
0000000100007a78	0f 84 10 00 00 00 	je	0x100007a8e
0000000100007a7e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007a82	48 8b 40 60 	movq	0x60(%rax), %rax
0000000100007a86	48 89 c7 	movq	%rax, %rdi
0000000100007a89	e8 f8 68 00 00 	callq	0x10000e386 ## symbol stub for: _free
0000000100007a8e	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100007a95	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100007a98	48 83 c4 60 	addq	$0x60, %rsp
0000000100007a9c	5d 	popq	%rbp
0000000100007a9d	c3 	retq
0000000100007a9e	66 90 	nop
_assemblage_s:
0000000100007aa0	55 	pushq	%rbp
0000000100007aa1	48 89 e5 	movq	%rsp, %rbp
0000000100007aa4	48 83 ec 10 	subq	$0x10, %rsp
0000000100007aa8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100007aac	48 c7 45 f0 00 00 00 00 	movq	$0x0, -0x10(%rbp)
0000000100007ab4	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100007ab8	48 83 7f 78 00 	cmpq	$0x0, 0x78(%rdi)
0000000100007abd	0f 84 1e 00 00 00 	je	0x100007ae1
0000000100007ac3	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007ac7	48 8b 78 78 	movq	0x78(%rax), %rdi
0000000100007acb	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007acf	48 8b 70 68 	movq	0x68(%rax), %rsi
0000000100007ad3	e8 c8 28 00 00 	callq	_ft_strjoinfree
0000000100007ad8	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100007adc	e9 0c 00 00 00 	jmp	0x100007aed
0000000100007ae1	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100007ae5	48 8b 40 68 	movq	0x68(%rax), %rax
0000000100007ae9	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100007aed	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007af1	48 83 c4 10 	addq	$0x10, %rsp
0000000100007af5	5d 	popq	%rbp
0000000100007af6	c3 	retq
0000000100007af7	66 0f 1f 84 00 00 00 00 00 	nopw	(%rax,%rax)
_try_error:
0000000100007b00	55 	pushq	%rbp
0000000100007b01	48 89 e5 	movq	%rsp, %rbp
0000000100007b04	48 83 ec 10 	subq	$0x10, %rsp
0000000100007b08	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100007b0c	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100007b10	48 83 7f 60 00 	cmpq	$0x0, 0x60(%rdi)
0000000100007b15	0f 85 70 00 00 00 	jne	0x100007b8b
0000000100007b1b	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007b1f	83 78 34 00 	cmpl	$0x0, 0x34(%rax)
0000000100007b23	0f 85 42 00 00 00 	jne	0x100007b6b
0000000100007b29	48 8d 3d a7 6e 00 00 	leaq	0x6ea7(%rip), %rdi ## literal pool for: "(null)"
0000000100007b30	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007b34	48 c7 40 40 00 00 00 00 	movq	$0x0, 0x40(%rax)
0000000100007b3c	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007b40	8b 88 98 00 00 00 	movl	0x98(%rax), %ecx
0000000100007b46	83 c1 06 	addl	$0x6, %ecx
0000000100007b49	89 88 98 00 00 00 	movl	%ecx, 0x98(%rax)
0000000100007b4f	e8 6c d0 ff ff 	callq	_ft_strdup
0000000100007b54	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100007b58	48 89 87 90 00 00 00 	movq	%rax, 0x90(%rdi)
0000000100007b5f	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100007b66	e9 27 00 00 00 	jmp	0x100007b92
0000000100007b6b	48 8d 3d a6 75 00 00 	leaq	0x75a6(%rip), %rdi
0000000100007b72	e8 49 d0 ff ff 	callq	_ft_strdup
0000000100007b77	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100007b7b	48 89 47 60 	movq	%rax, 0x60(%rdi)
0000000100007b7f	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100007b86	e9 07 00 00 00 	jmp	0x100007b92
0000000100007b8b	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100007b92	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100007b95	48 83 c4 10 	addq	$0x10, %rsp
0000000100007b99	5d 	popq	%rbp
0000000100007b9a	c3 	retq
0000000100007b9b	90 	nop
0000000100007b9c	90 	nop
0000000100007b9d	90 	nop
0000000100007b9e	90 	nop
0000000100007b9f	90 	nop
_preci_dioux:
0000000100007ba0	55 	pushq	%rbp
0000000100007ba1	48 89 e5 	movq	%rsp, %rbp
0000000100007ba4	48 83 ec 20 	subq	$0x20, %rsp
0000000100007ba8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100007bac	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100007bb0	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100007bb4	48 8b 7e 58 	movq	0x58(%rsi), %rdi
0000000100007bb8	e8 c3 cf ff ff 	callq	_ft_strlen
0000000100007bbd	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100007bc1	48 8b 7e 48 	movq	0x48(%rsi), %rdi
0000000100007bc5	48 29 c7 	subq	%rax, %rdi
0000000100007bc8	48 89 7e 48 	movq	%rdi, 0x48(%rsi)
0000000100007bcc	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007bd0	c7 40 30 00 00 00 00 	movl	$0x0, 0x30(%rax)
0000000100007bd7	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100007bdb	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100007bdf	e8 0c 01 00 00 	callq	_other_cases
0000000100007be4	83 f8 00 	cmpl	$0x0, %eax
0000000100007be7	0f 85 0c 00 00 00 	jne	0x100007bf9
0000000100007bed	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100007bf4	e9 e6 00 00 00 	jmp	0x100007cdf
0000000100007bf9	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007bfd	83 b8 88 00 00 00 ff 	cmpl	$-0x1, 0x88(%rax)
0000000100007c04	0f 85 5f 00 00 00 	jne	0x100007c69
0000000100007c0a	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007c0e	48 8b 40 48 	movq	0x48(%rax), %rax
0000000100007c12	48 83 c0 01 	addq	$0x1, %rax
0000000100007c16	48 83 f8 00 	cmpq	$0x0, %rax
0000000100007c1a	0f 8e 49 00 00 00 	jle	0x100007c69
0000000100007c20	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007c24	48 8b 78 58 	movq	0x58(%rax), %rdi
0000000100007c28	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007c2c	48 8b 40 58 	movq	0x58(%rax), %rax
0000000100007c30	48 89 7d e0 	movq	%rdi, -0x20(%rbp)
0000000100007c34	48 89 c7 	movq	%rax, %rdi
0000000100007c37	e8 44 cf ff ff 	callq	_ft_strlen
0000000100007c3c	be 01 00 00 00 	movl	$0x1, %esi
0000000100007c41	48 83 e8 01 	subq	$0x1, %rax
0000000100007c45	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
0000000100007c49	48 89 c2 	movq	%rax, %rdx
0000000100007c4c	e8 5f d2 ff ff 	callq	_ft_strsub
0000000100007c51	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
0000000100007c55	48 89 42 58 	movq	%rax, 0x58(%rdx)
0000000100007c59	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007c5d	48 8b 50 48 	movq	0x48(%rax), %rdx
0000000100007c61	48 83 c2 01 	addq	$0x1, %rdx
0000000100007c65	48 89 50 48 	movq	%rdx, 0x48(%rax)
0000000100007c69	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007c6d	48 8b 78 48 	movq	0x48(%rax), %rdi
0000000100007c71	e8 7a d1 ff ff 	callq	_ft_strnew
0000000100007c76	be 30 00 00 00 	movl	$0x30, %esi
0000000100007c7b	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100007c7f	48 8b 57 48 	movq	0x48(%rdi), %rdx
0000000100007c83	48 89 c7 	movq	%rax, %rdi
0000000100007c86	e8 c5 cd ff ff 	callq	_ft_memset
0000000100007c8b	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
0000000100007c8f	48 8b 72 58 	movq	0x58(%rdx), %rsi
0000000100007c93	48 89 c7 	movq	%rax, %rdi
0000000100007c96	e8 05 27 00 00 	callq	_ft_strjoinfree
0000000100007c9b	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
0000000100007c9f	48 89 42 58 	movq	%rax, 0x58(%rdx)
0000000100007ca3	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007ca7	83 b8 88 00 00 00 ff 	cmpl	$-0x1, 0x88(%rax)
0000000100007cae	0f 85 24 00 00 00 	jne	0x100007cd8
0000000100007cb4	48 8d 3d 23 6d 00 00 	leaq	0x6d23(%rip), %rdi ## literal pool for: "-"
0000000100007cbb	e8 00 cf ff ff 	callq	_ft_strdup
0000000100007cc0	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100007cc4	48 8b 77 58 	movq	0x58(%rdi), %rsi
0000000100007cc8	48 89 c7 	movq	%rax, %rdi
0000000100007ccb	e8 d0 26 00 00 	callq	_ft_strjoinfree
0000000100007cd0	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100007cd4	48 89 46 58 	movq	%rax, 0x58(%rsi)
0000000100007cd8	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100007cdf	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100007ce2	48 83 c4 20 	addq	$0x20, %rsp
0000000100007ce6	5d 	popq	%rbp
0000000100007ce7	c3 	retq
0000000100007ce8	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_other_cases:
0000000100007cf0	55 	pushq	%rbp
0000000100007cf1	48 89 e5 	movq	%rsp, %rbp
0000000100007cf4	48 83 ec 20 	subq	$0x20, %rsp
0000000100007cf8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100007cfc	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100007d00	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100007d04	0f be 06 	movsbl	(%rsi), %eax
0000000100007d07	83 f8 6f 	cmpl	$0x6f, %eax
0000000100007d0a	0f 84 10 00 00 00 	je	0x100007d20
0000000100007d10	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007d14	0f be 08 	movsbl	(%rax), %ecx
0000000100007d17	83 f9 4f 	cmpl	$0x4f, %ecx
0000000100007d1a	0f 85 3e 00 00 00 	jne	0x100007d5e
0000000100007d20	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007d24	83 78 20 00 	cmpl	$0x0, 0x20(%rax)
0000000100007d28	0f 84 30 00 00 00 	je	0x100007d5e
0000000100007d2e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007d32	48 83 78 48 00 	cmpq	$0x0, 0x48(%rax)
0000000100007d37	0f 8f 0c 00 00 00 	jg	0x100007d49
0000000100007d3d	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100007d44	e9 83 00 00 00 	jmp	0x100007dcc
0000000100007d49	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007d4d	48 8b 48 48 	movq	0x48(%rax), %rcx
0000000100007d51	48 83 c1 ff 	addq	$-0x1, %rcx
0000000100007d55	48 89 48 48 	movq	%rcx, 0x48(%rax)
0000000100007d59	e9 4c 00 00 00 	jmp	0x100007daa
0000000100007d5e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007d62	48 8b 40 58 	movq	0x58(%rax), %rax
0000000100007d66	0f be 08 	movsbl	(%rax), %ecx
0000000100007d69	83 f9 30 	cmpl	$0x30, %ecx
0000000100007d6c	0f 85 33 00 00 00 	jne	0x100007da5
0000000100007d72	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007d76	48 83 78 48 00 	cmpq	$0x0, 0x48(%rax)
0000000100007d7b	0f 8f 24 00 00 00 	jg	0x100007da5
0000000100007d81	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007d85	48 83 c0 58 	addq	$0x58, %rax
0000000100007d89	48 89 c7 	movq	%rax, %rdi
0000000100007d8c	e8 df d0 ff ff 	callq	_ft_strdel
0000000100007d91	48 8d 3d 82 73 00 00 	leaq	0x7382(%rip), %rdi
0000000100007d98	e8 23 ce ff ff 	callq	_ft_strdup
0000000100007d9d	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100007da1	48 89 47 58 	movq	%rax, 0x58(%rdi)
0000000100007da5	e9 00 00 00 00 	jmp	0x100007daa
0000000100007daa	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100007dae	48 83 78 48 00 	cmpq	$0x0, 0x48(%rax)
0000000100007db3	0f 8d 0c 00 00 00 	jge	0x100007dc5
0000000100007db9	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100007dc0	e9 07 00 00 00 	jmp	0x100007dcc
0000000100007dc5	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100007dcc	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100007dcf	48 83 c4 20 	addq	$0x20, %rsp
0000000100007dd3	5d 	popq	%rbp
0000000100007dd4	c3 	retq
0000000100007dd5	66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_preci_sc:
0000000100007de0	55 	pushq	%rbp
0000000100007de1	48 89 e5 	movq	%rsp, %rbp
0000000100007de4	48 83 ec 10 	subq	$0x10, %rsp
0000000100007de8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100007dec	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100007df0	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100007df4	0f be 06 	movsbl	(%rsi), %eax
0000000100007df7	83 f8 53 	cmpl	$0x53, %eax
0000000100007dfa	0f 84 0e 00 00 00 	je	0x100007e0e
0000000100007e00	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007e04	83 78 50 05 	cmpl	$0x5, 0x50(%rax)
0000000100007e08	0f 85 67 00 00 00 	jne	0x100007e75
0000000100007e0e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007e12	c7 80 9c 00 00 00 01 00 00 00 	movl	$0x1, 0x9c(%rax)
0000000100007e1c	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007e20	48 8b 40 48 	movq	0x48(%rax), %rax
0000000100007e24	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100007e28	48 63 89 84 00 00 00 	movslq	0x84(%rcx), %rcx
0000000100007e2f	48 39 c8 	cmpq	%rcx, %rax
0000000100007e32	0f 8d 38 00 00 00 	jge	0x100007e70
0000000100007e38	31 f6 	xorl	%esi, %esi
0000000100007e3a	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007e3e	48 8b 78 60 	movq	0x60(%rax), %rdi
0000000100007e42	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007e46	48 8b 50 48 	movq	0x48(%rax), %rdx
0000000100007e4a	e8 51 23 00 00 	callq	_ft_wstrsub
0000000100007e4f	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100007e53	48 89 42 60 	movq	%rax, 0x60(%rdx)
0000000100007e57	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007e5b	48 8b 78 60 	movq	0x60(%rax), %rdi
0000000100007e5f	e8 3c 22 00 00 	callq	_ft_wstrlen
0000000100007e64	89 c6 	movl	%eax, %esi
0000000100007e66	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007e6a	89 b0 84 00 00 00 	movl	%esi, 0x84(%rax)
0000000100007e70	e9 65 00 00 00 	jmp	0x100007eda
0000000100007e75	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007e79	48 8b 40 48 	movq	0x48(%rax), %rax
0000000100007e7d	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100007e81	48 63 89 84 00 00 00 	movslq	0x84(%rcx), %rcx
0000000100007e88	48 39 c8 	cmpq	%rcx, %rax
0000000100007e8b	0f 8d 44 00 00 00 	jge	0x100007ed5
0000000100007e91	31 f6 	xorl	%esi, %esi
0000000100007e93	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007e97	c7 80 9c 00 00 00 01 00 00 00 	movl	$0x1, 0x9c(%rax)
0000000100007ea1	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007ea5	48 8b 40 60 	movq	0x60(%rax), %rax
0000000100007ea9	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100007ead	48 8b 51 48 	movq	0x48(%rcx), %rdx
0000000100007eb1	48 89 c7 	movq	%rax, %rdi
0000000100007eb4	e8 f7 cf ff ff 	callq	_ft_strsub
0000000100007eb9	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100007ebd	48 89 41 60 	movq	%rax, 0x60(%rcx)
0000000100007ec1	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007ec5	48 8b 40 48 	movq	0x48(%rax), %rax
0000000100007ec9	89 c6 	movl	%eax, %esi
0000000100007ecb	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007ecf	89 b0 84 00 00 00 	movl	%esi, 0x84(%rax)
0000000100007ed5	e9 00 00 00 00 	jmp	0x100007eda
0000000100007eda	31 c0 	xorl	%eax, %eax
0000000100007edc	48 83 c4 10 	addq	$0x10, %rsp
0000000100007ee0	5d 	popq	%rbp
0000000100007ee1	c3 	retq
0000000100007ee2	90 	nop
0000000100007ee3	90 	nop
0000000100007ee4	90 	nop
0000000100007ee5	90 	nop
0000000100007ee6	90 	nop
0000000100007ee7	90 	nop
0000000100007ee8	90 	nop
0000000100007ee9	90 	nop
0000000100007eea	90 	nop
0000000100007eeb	90 	nop
0000000100007eec	90 	nop
0000000100007eed	90 	nop
0000000100007eee	90 	nop
0000000100007eef	90 	nop
_mod_uox:
0000000100007ef0	55 	pushq	%rbp
0000000100007ef1	48 89 e5 	movq	%rsp, %rbp
0000000100007ef4	48 81 ec b0 00 00 00 	subq	$0xb0, %rsp
0000000100007efb	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100007eff	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100007f03	48 c7 45 e8 00 00 00 00 	movq	$0x0, -0x18(%rbp)
0000000100007f0b	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100007f0f	83 7e 50 01 	cmpl	$0x1, 0x50(%rsi)
0000000100007f13	0f 85 67 00 00 00 	jne	0x100007f80
0000000100007f19	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007f1d	48 89 c1 	movq	%rax, %rcx
0000000100007f20	48 83 c1 08 	addq	$0x8, %rcx
0000000100007f24	8b 50 08 	movl	0x8(%rax), %edx
0000000100007f27	83 fa 28 	cmpl	$0x28, %edx
0000000100007f2a	48 89 4d e0 	movq	%rcx, -0x20(%rbp)
0000000100007f2e	89 55 dc 	movl	%edx, -0x24(%rbp)
0000000100007f31	0f 87 1c 00 00 00 	ja	0x100007f53
0000000100007f37	8b 45 dc 	movl	-0x24(%rbp), %eax
0000000100007f3a	48 63 c8 	movslq	%eax, %rcx
0000000100007f3d	48 8b 55 e0 	movq	-0x20(%rbp), %rdx
0000000100007f41	48 03 4a 10 	addq	0x10(%rdx), %rcx
0000000100007f45	83 c0 08 	addl	$0x8, %eax
0000000100007f48	89 02 	movl	%eax, (%rdx)
0000000100007f4a	48 89 4d d0 	movq	%rcx, -0x30(%rbp)
0000000100007f4e	e9 17 00 00 00 	jmp	0x100007f6a
0000000100007f53	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100007f57	48 8b 48 08 	movq	0x8(%rax), %rcx
0000000100007f5b	48 89 ca 	movq	%rcx, %rdx
0000000100007f5e	48 83 c1 08 	addq	$0x8, %rcx
0000000100007f62	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100007f66	48 89 55 d0 	movq	%rdx, -0x30(%rbp)
0000000100007f6a	48 8b 45 d0 	movq	-0x30(%rbp), %rax
0000000100007f6e	8b 08 	movl	(%rax), %ecx
0000000100007f70	88 ca 	movb	%cl, %dl
0000000100007f72	0f b6 ca 	movzbl	%dl, %ecx
0000000100007f75	89 c8 	movl	%ecx, %eax
0000000100007f77	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100007f7b	e9 6d 02 00 00 	jmp	0x1000081ed
0000000100007f80	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007f84	83 78 50 02 	cmpl	$0x2, 0x50(%rax)
0000000100007f88	0f 85 68 00 00 00 	jne	0x100007ff6
0000000100007f8e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007f92	48 89 c1 	movq	%rax, %rcx
0000000100007f95	48 83 c1 08 	addq	$0x8, %rcx
0000000100007f99	8b 50 08 	movl	0x8(%rax), %edx
0000000100007f9c	83 fa 28 	cmpl	$0x28, %edx
0000000100007f9f	48 89 4d c8 	movq	%rcx, -0x38(%rbp)
0000000100007fa3	89 55 c4 	movl	%edx, -0x3c(%rbp)
0000000100007fa6	0f 87 1c 00 00 00 	ja	0x100007fc8
0000000100007fac	8b 45 c4 	movl	-0x3c(%rbp), %eax
0000000100007faf	48 63 c8 	movslq	%eax, %rcx
0000000100007fb2	48 8b 55 c8 	movq	-0x38(%rbp), %rdx
0000000100007fb6	48 03 4a 10 	addq	0x10(%rdx), %rcx
0000000100007fba	83 c0 08 	addl	$0x8, %eax
0000000100007fbd	89 02 	movl	%eax, (%rdx)
0000000100007fbf	48 89 4d b8 	movq	%rcx, -0x48(%rbp)
0000000100007fc3	e9 17 00 00 00 	jmp	0x100007fdf
0000000100007fc8	48 8b 45 c8 	movq	-0x38(%rbp), %rax
0000000100007fcc	48 8b 48 08 	movq	0x8(%rax), %rcx
0000000100007fd0	48 89 ca 	movq	%rcx, %rdx
0000000100007fd3	48 83 c1 08 	addq	$0x8, %rcx
0000000100007fd7	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100007fdb	48 89 55 b8 	movq	%rdx, -0x48(%rbp)
0000000100007fdf	48 8b 45 b8 	movq	-0x48(%rbp), %rax
0000000100007fe3	8b 08 	movl	(%rax), %ecx
0000000100007fe5	66 89 ca 	movw	%cx, %dx
0000000100007fe8	0f b7 ca 	movzwl	%dx, %ecx
0000000100007feb	89 c8 	movl	%ecx, %eax
0000000100007fed	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100007ff1	e9 f2 01 00 00 	jmp	0x1000081e8
0000000100007ff6	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100007ffa	83 78 50 05 	cmpl	$0x5, 0x50(%rax)
0000000100007ffe	0f 85 61 00 00 00 	jne	0x100008065
0000000100008004	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008008	48 89 c1 	movq	%rax, %rcx
000000010000800b	48 83 c1 08 	addq	$0x8, %rcx
000000010000800f	8b 50 08 	movl	0x8(%rax), %edx
0000000100008012	83 fa 28 	cmpl	$0x28, %edx
0000000100008015	48 89 4d b0 	movq	%rcx, -0x50(%rbp)
0000000100008019	89 55 ac 	movl	%edx, -0x54(%rbp)
000000010000801c	0f 87 1c 00 00 00 	ja	0x10000803e
0000000100008022	8b 45 ac 	movl	-0x54(%rbp), %eax
0000000100008025	48 63 c8 	movslq	%eax, %rcx
0000000100008028	48 8b 55 b0 	movq	-0x50(%rbp), %rdx
000000010000802c	48 03 4a 10 	addq	0x10(%rdx), %rcx
0000000100008030	83 c0 08 	addl	$0x8, %eax
0000000100008033	89 02 	movl	%eax, (%rdx)
0000000100008035	48 89 4d a0 	movq	%rcx, -0x60(%rbp)
0000000100008039	e9 17 00 00 00 	jmp	0x100008055
000000010000803e	48 8b 45 b0 	movq	-0x50(%rbp), %rax
0000000100008042	48 8b 48 08 	movq	0x8(%rax), %rcx
0000000100008046	48 89 ca 	movq	%rcx, %rdx
0000000100008049	48 83 c1 08 	addq	$0x8, %rcx
000000010000804d	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100008051	48 89 55 a0 	movq	%rdx, -0x60(%rbp)
0000000100008055	48 8b 45 a0 	movq	-0x60(%rbp), %rax
0000000100008059	48 8b 00 	movq	(%rax), %rax
000000010000805c	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100008060	e9 7e 01 00 00 	jmp	0x1000081e3
0000000100008065	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008069	83 78 50 06 	cmpl	$0x6, 0x50(%rax)
000000010000806d	0f 85 61 00 00 00 	jne	0x1000080d4
0000000100008073	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008077	48 89 c1 	movq	%rax, %rcx
000000010000807a	48 83 c1 08 	addq	$0x8, %rcx
000000010000807e	8b 50 08 	movl	0x8(%rax), %edx
0000000100008081	83 fa 28 	cmpl	$0x28, %edx
0000000100008084	48 89 4d 98 	movq	%rcx, -0x68(%rbp)
0000000100008088	89 55 94 	movl	%edx, -0x6c(%rbp)
000000010000808b	0f 87 1c 00 00 00 	ja	0x1000080ad
0000000100008091	8b 45 94 	movl	-0x6c(%rbp), %eax
0000000100008094	48 63 c8 	movslq	%eax, %rcx
0000000100008097	48 8b 55 98 	movq	-0x68(%rbp), %rdx
000000010000809b	48 03 4a 10 	addq	0x10(%rdx), %rcx
000000010000809f	83 c0 08 	addl	$0x8, %eax
00000001000080a2	89 02 	movl	%eax, (%rdx)
00000001000080a4	48 89 4d 88 	movq	%rcx, -0x78(%rbp)
00000001000080a8	e9 17 00 00 00 	jmp	0x1000080c4
00000001000080ad	48 8b 45 98 	movq	-0x68(%rbp), %rax
00000001000080b1	48 8b 48 08 	movq	0x8(%rax), %rcx
00000001000080b5	48 89 ca 	movq	%rcx, %rdx
00000001000080b8	48 83 c1 08 	addq	$0x8, %rcx
00000001000080bc	48 89 48 08 	movq	%rcx, 0x8(%rax)
00000001000080c0	48 89 55 88 	movq	%rdx, -0x78(%rbp)
00000001000080c4	48 8b 45 88 	movq	-0x78(%rbp), %rax
00000001000080c8	48 8b 00 	movq	(%rax), %rax
00000001000080cb	48 89 45 e8 	movq	%rax, -0x18(%rbp)
00000001000080cf	e9 0a 01 00 00 	jmp	0x1000081de
00000001000080d4	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000080d8	83 78 50 03 	cmpl	$0x3, 0x50(%rax)
00000001000080dc	0f 85 70 00 00 00 	jne	0x100008152
00000001000080e2	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000080e6	48 89 c1 	movq	%rax, %rcx
00000001000080e9	48 83 c1 08 	addq	$0x8, %rcx
00000001000080ed	8b 50 08 	movl	0x8(%rax), %edx
00000001000080f0	83 fa 28 	cmpl	$0x28, %edx
00000001000080f3	48 89 4d 80 	movq	%rcx, -0x80(%rbp)
00000001000080f7	89 95 7c ff ff ff 	movl	%edx, -0x84(%rbp)
00000001000080fd	0f 87 22 00 00 00 	ja	0x100008125
0000000100008103	8b 85 7c ff ff ff 	movl	-0x84(%rbp), %eax
0000000100008109	48 63 c8 	movslq	%eax, %rcx
000000010000810c	48 8b 55 80 	movq	-0x80(%rbp), %rdx
0000000100008110	48 03 4a 10 	addq	0x10(%rdx), %rcx
0000000100008114	83 c0 08 	addl	$0x8, %eax
0000000100008117	89 02 	movl	%eax, (%rdx)
0000000100008119	48 89 8d 70 ff ff ff 	movq	%rcx, -0x90(%rbp)
0000000100008120	e9 1a 00 00 00 	jmp	0x10000813f
0000000100008125	48 8b 45 80 	movq	-0x80(%rbp), %rax
0000000100008129	48 8b 48 08 	movq	0x8(%rax), %rcx
000000010000812d	48 89 ca 	movq	%rcx, %rdx
0000000100008130	48 83 c1 08 	addq	$0x8, %rcx
0000000100008134	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100008138	48 89 95 70 ff ff ff 	movq	%rdx, -0x90(%rbp)
000000010000813f	48 8b 85 70 ff ff ff 	movq	-0x90(%rbp), %rax
0000000100008146	48 8b 00 	movq	(%rax), %rax
0000000100008149	48 89 45 e8 	movq	%rax, -0x18(%rbp)
000000010000814d	e9 87 00 00 00 	jmp	0x1000081d9
0000000100008152	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008156	83 78 50 04 	cmpl	$0x4, 0x50(%rax)
000000010000815a	0f 85 74 00 00 00 	jne	0x1000081d4
0000000100008160	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008164	48 89 c1 	movq	%rax, %rcx
0000000100008167	48 83 c1 08 	addq	$0x8, %rcx
000000010000816b	8b 50 08 	movl	0x8(%rax), %edx
000000010000816e	83 fa 28 	cmpl	$0x28, %edx
0000000100008171	48 89 8d 68 ff ff ff 	movq	%rcx, -0x98(%rbp)
0000000100008178	89 95 64 ff ff ff 	movl	%edx, -0x9c(%rbp)
000000010000817e	0f 87 25 00 00 00 	ja	0x1000081a9
0000000100008184	8b 85 64 ff ff ff 	movl	-0x9c(%rbp), %eax
000000010000818a	48 63 c8 	movslq	%eax, %rcx
000000010000818d	48 8b 95 68 ff ff ff 	movq	-0x98(%rbp), %rdx
0000000100008194	48 03 4a 10 	addq	0x10(%rdx), %rcx
0000000100008198	83 c0 08 	addl	$0x8, %eax
000000010000819b	89 02 	movl	%eax, (%rdx)
000000010000819d	48 89 8d 58 ff ff ff 	movq	%rcx, -0xa8(%rbp)
00000001000081a4	e9 1d 00 00 00 	jmp	0x1000081c6
00000001000081a9	48 8b 85 68 ff ff ff 	movq	-0x98(%rbp), %rax
00000001000081b0	48 8b 48 08 	movq	0x8(%rax), %rcx
00000001000081b4	48 89 ca 	movq	%rcx, %rdx
00000001000081b7	48 83 c1 08 	addq	$0x8, %rcx
00000001000081bb	48 89 48 08 	movq	%rcx, 0x8(%rax)
00000001000081bf	48 89 95 58 ff ff ff 	movq	%rdx, -0xa8(%rbp)
00000001000081c6	48 8b 85 58 ff ff ff 	movq	-0xa8(%rbp), %rax
00000001000081cd	48 8b 00 	movq	(%rax), %rax
00000001000081d0	48 89 45 e8 	movq	%rax, -0x18(%rbp)
00000001000081d4	e9 00 00 00 00 	jmp	0x1000081d9
00000001000081d9	e9 00 00 00 00 	jmp	0x1000081de
00000001000081de	e9 00 00 00 00 	jmp	0x1000081e3
00000001000081e3	e9 00 00 00 00 	jmp	0x1000081e8
00000001000081e8	e9 00 00 00 00 	jmp	0x1000081ed
00000001000081ed	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
00000001000081f1	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000081f5	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
00000001000081f9	e8 22 ee ff ff 	callq	_write_dipoux
00000001000081fe	89 85 54 ff ff ff 	movl	%eax, -0xac(%rbp)
0000000100008204	48 81 c4 b0 00 00 00 	addq	$0xb0, %rsp
000000010000820b	5d 	popq	%rbp
000000010000820c	c3 	retq
000000010000820d	0f 1f 00 	nopl	(%rax)
_mod_di:
0000000100008210	55 	pushq	%rbp
0000000100008211	48 89 e5 	movq	%rsp, %rbp
0000000100008214	48 81 ec b0 00 00 00 	subq	$0xb0, %rsp
000000010000821b	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000821f	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100008223	48 c7 45 e8 00 00 00 00 	movq	$0x0, -0x18(%rbp)
000000010000822b	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
000000010000822f	0f be 06 	movsbl	(%rsi), %eax
0000000100008232	83 f8 44 	cmpl	$0x44, %eax
0000000100008235	0f 85 37 00 00 00 	jne	0x100008272
000000010000823b	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000823f	83 78 50 05 	cmpl	$0x5, 0x50(%rax)
0000000100008243	0f 85 0b 00 00 00 	jne	0x100008254
0000000100008249	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000824d	c7 40 50 06 00 00 00 	movl	$0x6, 0x50(%rax)
0000000100008254	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008258	83 78 50 05 	cmpl	$0x5, 0x50(%rax)
000000010000825c	0f 8d 0b 00 00 00 	jge	0x10000826d
0000000100008262	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008266	c7 40 50 05 00 00 00 	movl	$0x5, 0x50(%rax)
000000010000826d	e9 00 00 00 00 	jmp	0x100008272
0000000100008272	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008276	0f be 08 	movsbl	(%rax), %ecx
0000000100008279	83 f9 64 	cmpl	$0x64, %ecx
000000010000827c	0f 84 10 00 00 00 	je	0x100008292
0000000100008282	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008286	0f be 08 	movsbl	(%rax), %ecx
0000000100008289	83 f9 69 	cmpl	$0x69, %ecx
000000010000828c	0f 85 74 00 00 00 	jne	0x100008306
0000000100008292	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008296	83 78 50 01 	cmpl	$0x1, 0x50(%rax)
000000010000829a	0f 85 66 00 00 00 	jne	0x100008306
00000001000082a0	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000082a4	48 89 c1 	movq	%rax, %rcx
00000001000082a7	48 83 c1 08 	addq	$0x8, %rcx
00000001000082ab	8b 50 08 	movl	0x8(%rax), %edx
00000001000082ae	83 fa 28 	cmpl	$0x28, %edx
00000001000082b1	48 89 4d e0 	movq	%rcx, -0x20(%rbp)
00000001000082b5	89 55 dc 	movl	%edx, -0x24(%rbp)
00000001000082b8	0f 87 1c 00 00 00 	ja	0x1000082da
00000001000082be	8b 45 dc 	movl	-0x24(%rbp), %eax
00000001000082c1	48 63 c8 	movslq	%eax, %rcx
00000001000082c4	48 8b 55 e0 	movq	-0x20(%rbp), %rdx
00000001000082c8	48 03 4a 10 	addq	0x10(%rdx), %rcx
00000001000082cc	83 c0 08 	addl	$0x8, %eax
00000001000082cf	89 02 	movl	%eax, (%rdx)
00000001000082d1	48 89 4d d0 	movq	%rcx, -0x30(%rbp)
00000001000082d5	e9 17 00 00 00 	jmp	0x1000082f1
00000001000082da	48 8b 45 e0 	movq	-0x20(%rbp), %rax
00000001000082de	48 8b 48 08 	movq	0x8(%rax), %rcx
00000001000082e2	48 89 ca 	movq	%rcx, %rdx
00000001000082e5	48 83 c1 08 	addq	$0x8, %rcx
00000001000082e9	48 89 48 08 	movq	%rcx, 0x8(%rax)
00000001000082ed	48 89 55 d0 	movq	%rdx, -0x30(%rbp)
00000001000082f1	48 8b 45 d0 	movq	-0x30(%rbp), %rax
00000001000082f5	8b 08 	movl	(%rax), %ecx
00000001000082f7	88 ca 	movb	%cl, %dl
00000001000082f9	48 0f be c2 	movsbq	%dl, %rax
00000001000082fd	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100008301	e9 04 03 00 00 	jmp	0x10000860a
0000000100008306	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000830a	0f be 08 	movsbl	(%rax), %ecx
000000010000830d	83 f9 64 	cmpl	$0x64, %ecx
0000000100008310	0f 84 10 00 00 00 	je	0x100008326
0000000100008316	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000831a	0f be 08 	movsbl	(%rax), %ecx
000000010000831d	83 f9 69 	cmpl	$0x69, %ecx
0000000100008320	0f 85 75 00 00 00 	jne	0x10000839b
0000000100008326	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000832a	83 78 50 02 	cmpl	$0x2, 0x50(%rax)
000000010000832e	0f 85 67 00 00 00 	jne	0x10000839b
0000000100008334	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008338	48 89 c1 	movq	%rax, %rcx
000000010000833b	48 83 c1 08 	addq	$0x8, %rcx
000000010000833f	8b 50 08 	movl	0x8(%rax), %edx
0000000100008342	83 fa 28 	cmpl	$0x28, %edx
0000000100008345	48 89 4d c8 	movq	%rcx, -0x38(%rbp)
0000000100008349	89 55 c4 	movl	%edx, -0x3c(%rbp)
000000010000834c	0f 87 1c 00 00 00 	ja	0x10000836e
0000000100008352	8b 45 c4 	movl	-0x3c(%rbp), %eax
0000000100008355	48 63 c8 	movslq	%eax, %rcx
0000000100008358	48 8b 55 c8 	movq	-0x38(%rbp), %rdx
000000010000835c	48 03 4a 10 	addq	0x10(%rdx), %rcx
0000000100008360	83 c0 08 	addl	$0x8, %eax
0000000100008363	89 02 	movl	%eax, (%rdx)
0000000100008365	48 89 4d b8 	movq	%rcx, -0x48(%rbp)
0000000100008369	e9 17 00 00 00 	jmp	0x100008385
000000010000836e	48 8b 45 c8 	movq	-0x38(%rbp), %rax
0000000100008372	48 8b 48 08 	movq	0x8(%rax), %rcx
0000000100008376	48 89 ca 	movq	%rcx, %rdx
0000000100008379	48 83 c1 08 	addq	$0x8, %rcx
000000010000837d	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100008381	48 89 55 b8 	movq	%rdx, -0x48(%rbp)
0000000100008385	48 8b 45 b8 	movq	-0x48(%rbp), %rax
0000000100008389	8b 08 	movl	(%rax), %ecx
000000010000838b	66 89 ca 	movw	%cx, %dx
000000010000838e	48 0f bf c2 	movswq	%dx, %rax
0000000100008392	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100008396	e9 6a 02 00 00 	jmp	0x100008605
000000010000839b	48 8d 3d 3e 66 00 00 	leaq	0x663e(%rip), %rdi ## literal pool for: "dDi"
00000001000083a2	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000083a6	0f be 30 	movsbl	(%rax), %esi
00000001000083a9	e8 c2 d6 ff ff 	callq	_ft_isin
00000001000083ae	83 f8 00 	cmpl	$0x0, %eax
00000001000083b1	0f 84 6f 00 00 00 	je	0x100008426
00000001000083b7	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000083bb	83 78 50 05 	cmpl	$0x5, 0x50(%rax)
00000001000083bf	0f 85 61 00 00 00 	jne	0x100008426
00000001000083c5	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000083c9	48 89 c1 	movq	%rax, %rcx
00000001000083cc	48 83 c1 08 	addq	$0x8, %rcx
00000001000083d0	8b 50 08 	movl	0x8(%rax), %edx
00000001000083d3	83 fa 28 	cmpl	$0x28, %edx
00000001000083d6	48 89 4d b0 	movq	%rcx, -0x50(%rbp)
00000001000083da	89 55 ac 	movl	%edx, -0x54(%rbp)
00000001000083dd	0f 87 1c 00 00 00 	ja	0x1000083ff
00000001000083e3	8b 45 ac 	movl	-0x54(%rbp), %eax
00000001000083e6	48 63 c8 	movslq	%eax, %rcx
00000001000083e9	48 8b 55 b0 	movq	-0x50(%rbp), %rdx
00000001000083ed	48 03 4a 10 	addq	0x10(%rdx), %rcx
00000001000083f1	83 c0 08 	addl	$0x8, %eax
00000001000083f4	89 02 	movl	%eax, (%rdx)
00000001000083f6	48 89 4d a0 	movq	%rcx, -0x60(%rbp)
00000001000083fa	e9 17 00 00 00 	jmp	0x100008416
00000001000083ff	48 8b 45 b0 	movq	-0x50(%rbp), %rax
0000000100008403	48 8b 48 08 	movq	0x8(%rax), %rcx
0000000100008407	48 89 ca 	movq	%rcx, %rdx
000000010000840a	48 83 c1 08 	addq	$0x8, %rcx
000000010000840e	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100008412	48 89 55 a0 	movq	%rdx, -0x60(%rbp)
0000000100008416	48 8b 45 a0 	movq	-0x60(%rbp), %rax
000000010000841a	48 8b 00 	movq	(%rax), %rax
000000010000841d	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100008421	e9 da 01 00 00 	jmp	0x100008600
0000000100008426	48 8d 3d b3 65 00 00 	leaq	0x65b3(%rip), %rdi ## literal pool for: "dDi"
000000010000842d	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008431	0f be 30 	movsbl	(%rax), %esi
0000000100008434	e8 37 d6 ff ff 	callq	_ft_isin
0000000100008439	83 f8 00 	cmpl	$0x0, %eax
000000010000843c	0f 84 6f 00 00 00 	je	0x1000084b1
0000000100008442	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008446	83 78 50 06 	cmpl	$0x6, 0x50(%rax)
000000010000844a	0f 85 61 00 00 00 	jne	0x1000084b1
0000000100008450	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008454	48 89 c1 	movq	%rax, %rcx
0000000100008457	48 83 c1 08 	addq	$0x8, %rcx
000000010000845b	8b 50 08 	movl	0x8(%rax), %edx
000000010000845e	83 fa 28 	cmpl	$0x28, %edx
0000000100008461	48 89 4d 98 	movq	%rcx, -0x68(%rbp)
0000000100008465	89 55 94 	movl	%edx, -0x6c(%rbp)
0000000100008468	0f 87 1c 00 00 00 	ja	0x10000848a
000000010000846e	8b 45 94 	movl	-0x6c(%rbp), %eax
0000000100008471	48 63 c8 	movslq	%eax, %rcx
0000000100008474	48 8b 55 98 	movq	-0x68(%rbp), %rdx
0000000100008478	48 03 4a 10 	addq	0x10(%rdx), %rcx
000000010000847c	83 c0 08 	addl	$0x8, %eax
000000010000847f	89 02 	movl	%eax, (%rdx)
0000000100008481	48 89 4d 88 	movq	%rcx, -0x78(%rbp)
0000000100008485	e9 17 00 00 00 	jmp	0x1000084a1
000000010000848a	48 8b 45 98 	movq	-0x68(%rbp), %rax
000000010000848e	48 8b 48 08 	movq	0x8(%rax), %rcx
0000000100008492	48 89 ca 	movq	%rcx, %rdx
0000000100008495	48 83 c1 08 	addq	$0x8, %rcx
0000000100008499	48 89 48 08 	movq	%rcx, 0x8(%rax)
000000010000849d	48 89 55 88 	movq	%rdx, -0x78(%rbp)
00000001000084a1	48 8b 45 88 	movq	-0x78(%rbp), %rax
00000001000084a5	48 8b 00 	movq	(%rax), %rax
00000001000084a8	48 89 45 e8 	movq	%rax, -0x18(%rbp)
00000001000084ac	e9 4a 01 00 00 	jmp	0x1000085fb
00000001000084b1	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000084b5	0f be 08 	movsbl	(%rax), %ecx
00000001000084b8	83 f9 64 	cmpl	$0x64, %ecx
00000001000084bb	0f 84 10 00 00 00 	je	0x1000084d1
00000001000084c1	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000084c5	0f be 08 	movsbl	(%rax), %ecx
00000001000084c8	83 f9 69 	cmpl	$0x69, %ecx
00000001000084cb	0f 85 7e 00 00 00 	jne	0x10000854f
00000001000084d1	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000084d5	83 78 50 03 	cmpl	$0x3, 0x50(%rax)
00000001000084d9	0f 85 70 00 00 00 	jne	0x10000854f
00000001000084df	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000084e3	48 89 c1 	movq	%rax, %rcx
00000001000084e6	48 83 c1 08 	addq	$0x8, %rcx
00000001000084ea	8b 50 08 	movl	0x8(%rax), %edx
00000001000084ed	83 fa 28 	cmpl	$0x28, %edx
00000001000084f0	48 89 4d 80 	movq	%rcx, -0x80(%rbp)
00000001000084f4	89 95 7c ff ff ff 	movl	%edx, -0x84(%rbp)
00000001000084fa	0f 87 22 00 00 00 	ja	0x100008522
0000000100008500	8b 85 7c ff ff ff 	movl	-0x84(%rbp), %eax
0000000100008506	48 63 c8 	movslq	%eax, %rcx
0000000100008509	48 8b 55 80 	movq	-0x80(%rbp), %rdx
000000010000850d	48 03 4a 10 	addq	0x10(%rdx), %rcx
0000000100008511	83 c0 08 	addl	$0x8, %eax
0000000100008514	89 02 	movl	%eax, (%rdx)
0000000100008516	48 89 8d 70 ff ff ff 	movq	%rcx, -0x90(%rbp)
000000010000851d	e9 1a 00 00 00 	jmp	0x10000853c
0000000100008522	48 8b 45 80 	movq	-0x80(%rbp), %rax
0000000100008526	48 8b 48 08 	movq	0x8(%rax), %rcx
000000010000852a	48 89 ca 	movq	%rcx, %rdx
000000010000852d	48 83 c1 08 	addq	$0x8, %rcx
0000000100008531	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100008535	48 89 95 70 ff ff ff 	movq	%rdx, -0x90(%rbp)
000000010000853c	48 8b 85 70 ff ff ff 	movq	-0x90(%rbp), %rax
0000000100008543	48 8b 00 	movq	(%rax), %rax
0000000100008546	48 89 45 e8 	movq	%rax, -0x18(%rbp)
000000010000854a	e9 a7 00 00 00 	jmp	0x1000085f6
000000010000854f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008553	0f be 08 	movsbl	(%rax), %ecx
0000000100008556	83 f9 64 	cmpl	$0x64, %ecx
0000000100008559	0f 84 10 00 00 00 	je	0x10000856f
000000010000855f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008563	0f be 08 	movsbl	(%rax), %ecx
0000000100008566	83 f9 69 	cmpl	$0x69, %ecx
0000000100008569	0f 85 82 00 00 00 	jne	0x1000085f1
000000010000856f	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008573	83 78 50 04 	cmpl	$0x4, 0x50(%rax)
0000000100008577	0f 85 74 00 00 00 	jne	0x1000085f1
000000010000857d	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008581	48 89 c1 	movq	%rax, %rcx
0000000100008584	48 83 c1 08 	addq	$0x8, %rcx
0000000100008588	8b 50 08 	movl	0x8(%rax), %edx
000000010000858b	83 fa 28 	cmpl	$0x28, %edx
000000010000858e	48 89 8d 68 ff ff ff 	movq	%rcx, -0x98(%rbp)
0000000100008595	89 95 64 ff ff ff 	movl	%edx, -0x9c(%rbp)
000000010000859b	0f 87 25 00 00 00 	ja	0x1000085c6
00000001000085a1	8b 85 64 ff ff ff 	movl	-0x9c(%rbp), %eax
00000001000085a7	48 63 c8 	movslq	%eax, %rcx
00000001000085aa	48 8b 95 68 ff ff ff 	movq	-0x98(%rbp), %rdx
00000001000085b1	48 03 4a 10 	addq	0x10(%rdx), %rcx
00000001000085b5	83 c0 08 	addl	$0x8, %eax
00000001000085b8	89 02 	movl	%eax, (%rdx)
00000001000085ba	48 89 8d 58 ff ff ff 	movq	%rcx, -0xa8(%rbp)
00000001000085c1	e9 1d 00 00 00 	jmp	0x1000085e3
00000001000085c6	48 8b 85 68 ff ff ff 	movq	-0x98(%rbp), %rax
00000001000085cd	48 8b 48 08 	movq	0x8(%rax), %rcx
00000001000085d1	48 89 ca 	movq	%rcx, %rdx
00000001000085d4	48 83 c1 08 	addq	$0x8, %rcx
00000001000085d8	48 89 48 08 	movq	%rcx, 0x8(%rax)
00000001000085dc	48 89 95 58 ff ff ff 	movq	%rdx, -0xa8(%rbp)
00000001000085e3	48 8b 85 58 ff ff ff 	movq	-0xa8(%rbp), %rax
00000001000085ea	48 8b 00 	movq	(%rax), %rax
00000001000085ed	48 89 45 e8 	movq	%rax, -0x18(%rbp)
00000001000085f1	e9 00 00 00 00 	jmp	0x1000085f6
00000001000085f6	e9 00 00 00 00 	jmp	0x1000085fb
00000001000085fb	e9 00 00 00 00 	jmp	0x100008600
0000000100008600	e9 00 00 00 00 	jmp	0x100008605
0000000100008605	e9 00 00 00 00 	jmp	0x10000860a
000000010000860a	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000860e	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100008612	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
0000000100008616	e8 05 ea ff ff 	callq	_write_dipoux
000000010000861b	89 85 54 ff ff ff 	movl	%eax, -0xac(%rbp)
0000000100008621	48 81 c4 b0 00 00 00 	addq	$0xb0, %rsp
0000000100008628	5d 	popq	%rbp
0000000100008629	c3 	retq
000000010000862a	66 0f 1f 44 00 00 	nopw	(%rax,%rax)
_dipfoux:
0000000100008630	55 	pushq	%rbp
0000000100008631	48 89 e5 	movq	%rsp, %rbp
0000000100008634	48 81 ec 10 01 00 00 	subq	$0x110, %rsp
000000010000863b	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000863f	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100008643	48 c7 45 e0 00 00 00 00 	movq	$0x0, -0x20(%rbp)
000000010000864b	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000864f	0f be 06 	movsbl	(%rsi), %eax
0000000100008652	83 f8 66 	cmpl	$0x66, %eax
0000000100008655	0f 84 10 00 00 00 	je	0x10000866b
000000010000865b	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000865f	0f be 08 	movsbl	(%rax), %ecx
0000000100008662	83 f9 46 	cmpl	$0x46, %ecx
0000000100008665	0f 85 82 01 00 00 	jne	0x1000087ed
000000010000866b	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000866f	0f be 08 	movsbl	(%rax), %ecx
0000000100008672	83 f9 66 	cmpl	$0x66, %ecx
0000000100008675	0f 85 96 00 00 00 	jne	0x100008711
000000010000867b	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000867f	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100008683	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100008687	48 89 c1 	movq	%rax, %rcx
000000010000868a	48 83 c1 08 	addq	$0x8, %rcx
000000010000868e	48 89 ca 	movq	%rcx, %rdx
0000000100008691	48 83 c2 04 	addq	$0x4, %rdx
0000000100008695	44 8b 40 0c 	movl	0xc(%rax), %r8d
0000000100008699	41 81 f8 a0 00 00 00 	cmpl	$0xa0, %r8d
00000001000086a0	48 89 7d d8 	movq	%rdi, -0x28(%rbp)
00000001000086a4	48 89 75 d0 	movq	%rsi, -0x30(%rbp)
00000001000086a8	48 89 55 c8 	movq	%rdx, -0x38(%rbp)
00000001000086ac	48 89 4d c0 	movq	%rcx, -0x40(%rbp)
00000001000086b0	44 89 45 bc 	movl	%r8d, -0x44(%rbp)
00000001000086b4	0f 87 20 00 00 00 	ja	0x1000086da
00000001000086ba	8b 45 bc 	movl	-0x44(%rbp), %eax
00000001000086bd	48 63 c8 	movslq	%eax, %rcx
00000001000086c0	48 8b 55 c0 	movq	-0x40(%rbp), %rdx
00000001000086c4	48 03 4a 10 	addq	0x10(%rdx), %rcx
00000001000086c8	83 c0 10 	addl	$0x10, %eax
00000001000086cb	48 8b 75 c8 	movq	-0x38(%rbp), %rsi
00000001000086cf	89 06 	movl	%eax, (%rsi)
00000001000086d1	48 89 4d b0 	movq	%rcx, -0x50(%rbp)
00000001000086d5	e9 17 00 00 00 	jmp	0x1000086f1
00000001000086da	48 8b 45 c0 	movq	-0x40(%rbp), %rax
00000001000086de	48 8b 48 08 	movq	0x8(%rax), %rcx
00000001000086e2	48 89 ca 	movq	%rcx, %rdx
00000001000086e5	48 83 c1 08 	addq	$0x8, %rcx
00000001000086e9	48 89 48 08 	movq	%rcx, 0x8(%rax)
00000001000086ed	48 89 55 b0 	movq	%rdx, -0x50(%rbp)
00000001000086f1	48 8b 45 b0 	movq	-0x50(%rbp), %rax
00000001000086f5	dd 00 	fldl	(%rax)
00000001000086f7	48 89 e0 	movq	%rsp, %rax
00000001000086fa	db 38 	fstpt	(%rax)
00000001000086fc	48 8b 7d d8 	movq	-0x28(%rbp), %rdi
0000000100008700	48 8b 75 d0 	movq	-0x30(%rbp), %rsi
0000000100008704	e8 a7 03 00 00 	callq	_write_f
0000000100008709	89 45 ac 	movl	%eax, -0x54(%rbp)
000000010000870c	e9 d0 00 00 00 	jmp	0x1000087e1
0000000100008711	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008715	0f be 08 	movsbl	(%rax), %ecx
0000000100008718	83 f9 46 	cmpl	$0x46, %ecx
000000010000871b	0f 84 1e 00 00 00 	je	0x10000873f
0000000100008721	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008725	0f be 08 	movsbl	(%rax), %ecx
0000000100008728	83 f9 66 	cmpl	$0x66, %ecx
000000010000872b	0f 85 ab 00 00 00 	jne	0x1000087dc
0000000100008731	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100008735	83 78 50 07 	cmpl	$0x7, 0x50(%rax)
0000000100008739	0f 85 9d 00 00 00 	jne	0x1000087dc
000000010000873f	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100008743	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100008747	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000874b	48 89 c1 	movq	%rax, %rcx
000000010000874e	48 83 c1 08 	addq	$0x8, %rcx
0000000100008752	48 89 ca 	movq	%rcx, %rdx
0000000100008755	48 83 c2 04 	addq	$0x4, %rdx
0000000100008759	44 8b 40 0c 	movl	0xc(%rax), %r8d
000000010000875d	41 81 f8 a0 00 00 00 	cmpl	$0xa0, %r8d
0000000100008764	48 89 7d a0 	movq	%rdi, -0x60(%rbp)
0000000100008768	48 89 75 98 	movq	%rsi, -0x68(%rbp)
000000010000876c	48 89 55 90 	movq	%rdx, -0x70(%rbp)
0000000100008770	48 89 4d 88 	movq	%rcx, -0x78(%rbp)
0000000100008774	44 89 45 84 	movl	%r8d, -0x7c(%rbp)
0000000100008778	0f 87 23 00 00 00 	ja	0x1000087a1
000000010000877e	8b 45 84 	movl	-0x7c(%rbp), %eax
0000000100008781	48 63 c8 	movslq	%eax, %rcx
0000000100008784	48 8b 55 88 	movq	-0x78(%rbp), %rdx
0000000100008788	48 03 4a 10 	addq	0x10(%rdx), %rcx
000000010000878c	83 c0 10 	addl	$0x10, %eax
000000010000878f	48 8b 75 90 	movq	-0x70(%rbp), %rsi
0000000100008793	89 06 	movl	%eax, (%rsi)
0000000100008795	48 89 8d 78 ff ff ff 	movq	%rcx, -0x88(%rbp)
000000010000879c	e9 1a 00 00 00 	jmp	0x1000087bb
00000001000087a1	48 8b 45 88 	movq	-0x78(%rbp), %rax
00000001000087a5	48 8b 48 08 	movq	0x8(%rax), %rcx
00000001000087a9	48 89 ca 	movq	%rcx, %rdx
00000001000087ac	48 83 c1 08 	addq	$0x8, %rcx
00000001000087b0	48 89 48 08 	movq	%rcx, 0x8(%rax)
00000001000087b4	48 89 95 78 ff ff ff 	movq	%rdx, -0x88(%rbp)
00000001000087bb	48 8b 85 78 ff ff ff 	movq	-0x88(%rbp), %rax
00000001000087c2	dd 00 	fldl	(%rax)
00000001000087c4	48 89 e0 	movq	%rsp, %rax
00000001000087c7	db 38 	fstpt	(%rax)
00000001000087c9	48 8b 7d a0 	movq	-0x60(%rbp), %rdi
00000001000087cd	48 8b 75 98 	movq	-0x68(%rbp), %rsi
00000001000087d1	e8 da 02 00 00 	callq	_write_f
00000001000087d6	89 85 74 ff ff ff 	movl	%eax, -0x8c(%rbp)
00000001000087dc	e9 00 00 00 00 	jmp	0x1000087e1
00000001000087e1	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
00000001000087e8	e9 b2 02 00 00 	jmp	0x100008a9f
00000001000087ed	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000087f1	0f be 08 	movsbl	(%rax), %ecx
00000001000087f4	83 f9 55 	cmpl	$0x55, %ecx
00000001000087f7	0f 84 10 00 00 00 	je	0x10000880d
00000001000087fd	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008801	0f be 08 	movsbl	(%rax), %ecx
0000000100008804	83 f9 4f 	cmpl	$0x4f, %ecx
0000000100008807	0f 85 79 00 00 00 	jne	0x100008886
000000010000880d	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100008811	48 89 c1 	movq	%rax, %rcx
0000000100008814	48 83 c1 08 	addq	$0x8, %rcx
0000000100008818	8b 50 08 	movl	0x8(%rax), %edx
000000010000881b	83 fa 28 	cmpl	$0x28, %edx
000000010000881e	48 89 8d 68 ff ff ff 	movq	%rcx, -0x98(%rbp)
0000000100008825	89 95 64 ff ff ff 	movl	%edx, -0x9c(%rbp)
000000010000882b	0f 87 25 00 00 00 	ja	0x100008856
0000000100008831	8b 85 64 ff ff ff 	movl	-0x9c(%rbp), %eax
0000000100008837	48 63 c8 	movslq	%eax, %rcx
000000010000883a	48 8b 95 68 ff ff ff 	movq	-0x98(%rbp), %rdx
0000000100008841	48 03 4a 10 	addq	0x10(%rdx), %rcx
0000000100008845	83 c0 08 	addl	$0x8, %eax
0000000100008848	89 02 	movl	%eax, (%rdx)
000000010000884a	48 89 8d 58 ff ff ff 	movq	%rcx, -0xa8(%rbp)
0000000100008851	e9 1d 00 00 00 	jmp	0x100008873
0000000100008856	48 8b 85 68 ff ff ff 	movq	-0x98(%rbp), %rax
000000010000885d	48 8b 48 08 	movq	0x8(%rax), %rcx
0000000100008861	48 89 ca 	movq	%rcx, %rdx
0000000100008864	48 83 c1 08 	addq	$0x8, %rcx
0000000100008868	48 89 48 08 	movq	%rcx, 0x8(%rax)
000000010000886c	48 89 95 58 ff ff ff 	movq	%rdx, -0xa8(%rbp)
0000000100008873	48 8b 85 58 ff ff ff 	movq	-0xa8(%rbp), %rax
000000010000887a	48 8b 00 	movq	(%rax), %rax
000000010000887d	48 89 45 e0 	movq	%rax, -0x20(%rbp)
0000000100008881	e9 f6 01 00 00 	jmp	0x100008a7c
0000000100008886	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000888a	0f be 08 	movsbl	(%rax), %ecx
000000010000888d	83 f9 75 	cmpl	$0x75, %ecx
0000000100008890	0f 84 30 00 00 00 	je	0x1000088c6
0000000100008896	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000889a	0f be 08 	movsbl	(%rax), %ecx
000000010000889d	83 f9 6f 	cmpl	$0x6f, %ecx
00000001000088a0	0f 84 20 00 00 00 	je	0x1000088c6
00000001000088a6	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000088aa	0f be 08 	movsbl	(%rax), %ecx
00000001000088ad	83 f9 78 	cmpl	$0x78, %ecx
00000001000088b0	0f 84 10 00 00 00 	je	0x1000088c6
00000001000088b6	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000088ba	0f be 08 	movsbl	(%rax), %ecx
00000001000088bd	83 f9 58 	cmpl	$0x58, %ecx
00000001000088c0	0f 85 7a 00 00 00 	jne	0x100008940
00000001000088c6	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000088ca	48 89 c1 	movq	%rax, %rcx
00000001000088cd	48 83 c1 08 	addq	$0x8, %rcx
00000001000088d1	8b 50 08 	movl	0x8(%rax), %edx
00000001000088d4	83 fa 28 	cmpl	$0x28, %edx
00000001000088d7	48 89 8d 50 ff ff ff 	movq	%rcx, -0xb0(%rbp)
00000001000088de	89 95 4c ff ff ff 	movl	%edx, -0xb4(%rbp)
00000001000088e4	0f 87 25 00 00 00 	ja	0x10000890f
00000001000088ea	8b 85 4c ff ff ff 	movl	-0xb4(%rbp), %eax
00000001000088f0	48 63 c8 	movslq	%eax, %rcx
00000001000088f3	48 8b 95 50 ff ff ff 	movq	-0xb0(%rbp), %rdx
00000001000088fa	48 03 4a 10 	addq	0x10(%rdx), %rcx
00000001000088fe	83 c0 08 	addl	$0x8, %eax
0000000100008901	89 02 	movl	%eax, (%rdx)
0000000100008903	48 89 8d 40 ff ff ff 	movq	%rcx, -0xc0(%rbp)
000000010000890a	e9 1d 00 00 00 	jmp	0x10000892c
000000010000890f	48 8b 85 50 ff ff ff 	movq	-0xb0(%rbp), %rax
0000000100008916	48 8b 48 08 	movq	0x8(%rax), %rcx
000000010000891a	48 89 ca 	movq	%rcx, %rdx
000000010000891d	48 83 c1 08 	addq	$0x8, %rcx
0000000100008921	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100008925	48 89 95 40 ff ff ff 	movq	%rdx, -0xc0(%rbp)
000000010000892c	48 8b 85 40 ff ff ff 	movq	-0xc0(%rbp), %rax
0000000100008933	8b 08 	movl	(%rax), %ecx
0000000100008935	89 c8 	movl	%ecx, %eax
0000000100008937	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000893b	e9 37 01 00 00 	jmp	0x100008a77
0000000100008940	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008944	0f be 08 	movsbl	(%rax), %ecx
0000000100008947	83 f9 64 	cmpl	$0x64, %ecx
000000010000894a	0f 84 20 00 00 00 	je	0x100008970
0000000100008950	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008954	0f be 08 	movsbl	(%rax), %ecx
0000000100008957	83 f9 69 	cmpl	$0x69, %ecx
000000010000895a	0f 84 10 00 00 00 	je	0x100008970
0000000100008960	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008964	0f be 08 	movsbl	(%rax), %ecx
0000000100008967	83 f9 44 	cmpl	$0x44, %ecx
000000010000896a	0f 85 79 00 00 00 	jne	0x1000089e9
0000000100008970	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100008974	48 89 c1 	movq	%rax, %rcx
0000000100008977	48 83 c1 08 	addq	$0x8, %rcx
000000010000897b	8b 50 08 	movl	0x8(%rax), %edx
000000010000897e	83 fa 28 	cmpl	$0x28, %edx
0000000100008981	48 89 8d 38 ff ff ff 	movq	%rcx, -0xc8(%rbp)
0000000100008988	89 95 34 ff ff ff 	movl	%edx, -0xcc(%rbp)
000000010000898e	0f 87 25 00 00 00 	ja	0x1000089b9
0000000100008994	8b 85 34 ff ff ff 	movl	-0xcc(%rbp), %eax
000000010000899a	48 63 c8 	movslq	%eax, %rcx
000000010000899d	48 8b 95 38 ff ff ff 	movq	-0xc8(%rbp), %rdx
00000001000089a4	48 03 4a 10 	addq	0x10(%rdx), %rcx
00000001000089a8	83 c0 08 	addl	$0x8, %eax
00000001000089ab	89 02 	movl	%eax, (%rdx)
00000001000089ad	48 89 8d 28 ff ff ff 	movq	%rcx, -0xd8(%rbp)
00000001000089b4	e9 1d 00 00 00 	jmp	0x1000089d6
00000001000089b9	48 8b 85 38 ff ff ff 	movq	-0xc8(%rbp), %rax
00000001000089c0	48 8b 48 08 	movq	0x8(%rax), %rcx
00000001000089c4	48 89 ca 	movq	%rcx, %rdx
00000001000089c7	48 83 c1 08 	addq	$0x8, %rcx
00000001000089cb	48 89 48 08 	movq	%rcx, 0x8(%rax)
00000001000089cf	48 89 95 28 ff ff ff 	movq	%rdx, -0xd8(%rbp)
00000001000089d6	48 8b 85 28 ff ff ff 	movq	-0xd8(%rbp), %rax
00000001000089dd	48 63 00 	movslq	(%rax), %rax
00000001000089e0	48 89 45 e0 	movq	%rax, -0x20(%rbp)
00000001000089e4	e9 89 00 00 00 	jmp	0x100008a72
00000001000089e9	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000089ed	0f be 08 	movsbl	(%rax), %ecx
00000001000089f0	83 f9 70 	cmpl	$0x70, %ecx
00000001000089f3	0f 85 74 00 00 00 	jne	0x100008a6d
00000001000089f9	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000089fd	48 89 c1 	movq	%rax, %rcx
0000000100008a00	48 83 c1 08 	addq	$0x8, %rcx
0000000100008a04	8b 50 08 	movl	0x8(%rax), %edx
0000000100008a07	83 fa 28 	cmpl	$0x28, %edx
0000000100008a0a	48 89 8d 20 ff ff ff 	movq	%rcx, -0xe0(%rbp)
0000000100008a11	89 95 1c ff ff ff 	movl	%edx, -0xe4(%rbp)
0000000100008a17	0f 87 25 00 00 00 	ja	0x100008a42
0000000100008a1d	8b 85 1c ff ff ff 	movl	-0xe4(%rbp), %eax
0000000100008a23	48 63 c8 	movslq	%eax, %rcx
0000000100008a26	48 8b 95 20 ff ff ff 	movq	-0xe0(%rbp), %rdx
0000000100008a2d	48 03 4a 10 	addq	0x10(%rdx), %rcx
0000000100008a31	83 c0 08 	addl	$0x8, %eax
0000000100008a34	89 02 	movl	%eax, (%rdx)
0000000100008a36	48 89 8d 10 ff ff ff 	movq	%rcx, -0xf0(%rbp)
0000000100008a3d	e9 1d 00 00 00 	jmp	0x100008a5f
0000000100008a42	48 8b 85 20 ff ff ff 	movq	-0xe0(%rbp), %rax
0000000100008a49	48 8b 48 08 	movq	0x8(%rax), %rcx
0000000100008a4d	48 89 ca 	movq	%rcx, %rdx
0000000100008a50	48 83 c1 08 	addq	$0x8, %rcx
0000000100008a54	48 89 48 08 	movq	%rcx, 0x8(%rax)
0000000100008a58	48 89 95 10 ff ff ff 	movq	%rdx, -0xf0(%rbp)
0000000100008a5f	48 8b 85 10 ff ff ff 	movq	-0xf0(%rbp), %rax
0000000100008a66	48 8b 00 	movq	(%rax), %rax
0000000100008a69	48 89 45 e0 	movq	%rax, -0x20(%rbp)
0000000100008a6d	e9 00 00 00 00 	jmp	0x100008a72
0000000100008a72	e9 00 00 00 00 	jmp	0x100008a77
0000000100008a77	e9 00 00 00 00 	jmp	0x100008a7c
0000000100008a7c	e9 00 00 00 00 	jmp	0x100008a81
0000000100008a81	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100008a85	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100008a89	48 8b 55 e0 	movq	-0x20(%rbp), %rdx
0000000100008a8d	e8 8e e5 ff ff 	callq	_write_dipoux
0000000100008a92	c7 45 fc 01 00 00 00 	movl	$0x1, -0x4(%rbp)
0000000100008a99	89 85 0c ff ff ff 	movl	%eax, -0xf4(%rbp)
0000000100008a9f	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100008aa2	48 81 c4 10 01 00 00 	addq	$0x110, %rsp
0000000100008aa9	5d 	popq	%rbp
0000000100008aaa	c3 	retq
0000000100008aab	90 	nop
0000000100008aac	90 	nop
0000000100008aad	90 	nop
0000000100008aae	90 	nop
0000000100008aaf	90 	nop
_write_f:
0000000100008ab0	55 	pushq	%rbp
0000000100008ab1	48 89 e5 	movq	%rsp, %rbp
0000000100008ab4	48 83 ec 30 	subq	$0x30, %rsp
0000000100008ab8	db 6d 10 	fldt	0x10(%rbp)
0000000100008abb	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100008abf	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100008ac3	db 7d e0 	fstpt	-0x20(%rbp)
0000000100008ac6	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100008aca	83 7e 34 00 	cmpl	$0x0, 0x34(%rsi)
0000000100008ace	0f 85 0c 00 00 00 	jne	0x100008ae0
0000000100008ad4	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008ad8	48 c7 40 48 06 00 00 00 	movq	$0x6, 0x48(%rax)
0000000100008ae0	db 6d e0 	fldt	-0x20(%rbp)
0000000100008ae3	d9 ee 	fldz
0000000100008ae5	d9 c9 	fxch	%st(1)
0000000100008ae7	df e9 	fucompi	%st(1)
0000000100008ae9	dd d8 	fstp	%st(0)
0000000100008aeb	0f 85 17 00 00 00 	jne	0x100008b08
0000000100008af1	0f 8b 05 00 00 00 	jnp	0x100008afc
0000000100008af7	e9 0c 00 00 00 	jmp	0x100008b08
0000000100008afc	48 8d 3d e1 5e 00 00 	leaq	0x5ee1(%rip), %rdi ## literal pool for: "ejf[eof"
0000000100008b03	e8 68 c7 ff ff 	callq	_ft_putstr
0000000100008b08	db 6d e0 	fldt	-0x20(%rbp)
0000000100008b0b	dd 5d d8 	fstpl	-0x28(%rbp)
0000000100008b0e	f2 0f 10 45 d8 	movsd	-0x28(%rbp), %xmm0
0000000100008b13	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008b17	48 8b 40 48 	movq	0x48(%rax), %rax
0000000100008b1b	89 c1 	movl	%eax, %ecx
0000000100008b1d	89 cf 	movl	%ecx, %edi
0000000100008b1f	e8 cc 1a 00 00 	callq	_ft_dotoa
0000000100008b24	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100008b28	48 89 42 58 	movq	%rax, 0x58(%rdx)
0000000100008b2c	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008b30	48 8b 40 58 	movq	0x58(%rax), %rax
0000000100008b34	0f be 08 	movsbl	(%rax), %ecx
0000000100008b37	83 f9 2d 	cmpl	$0x2d, %ecx
0000000100008b3a	0f 85 0e 00 00 00 	jne	0x100008b4e
0000000100008b40	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008b44	c7 80 88 00 00 00 ff ff ff ff 	movl	$0xffffffff, 0x88(%rax)
0000000100008b4e	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100008b52	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100008b56	e8 f5 e0 ff ff 	callq	_can_i_write_width
0000000100008b5b	83 f8 01 	cmpl	$0x1, %eax
0000000100008b5e	0f 85 b1 00 00 00 	jne	0x100008c15
0000000100008b64	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008b68	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
0000000100008b6c	0f 85 24 00 00 00 	jne	0x100008b96
0000000100008b72	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008b76	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100008b7a	0f 85 16 00 00 00 	jne	0x100008b96
0000000100008b80	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100008b84	e8 67 e1 ff ff 	callq	_write_width
0000000100008b89	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100008b8d	48 89 47 78 	movq	%rax, 0x78(%rdi)
0000000100008b91	e9 7a 00 00 00 	jmp	0x100008c10
0000000100008b96	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008b9a	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
0000000100008b9e	0f 84 28 00 00 00 	je	0x100008bcc
0000000100008ba4	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008ba8	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100008bac	0f 85 1a 00 00 00 	jne	0x100008bcc
0000000100008bb2	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100008bb6	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100008bba	e8 b1 e1 ff ff 	callq	_write_width_0
0000000100008bbf	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100008bc3	48 89 46 78 	movq	%rax, 0x78(%rsi)
0000000100008bc7	e9 3f 00 00 00 	jmp	0x100008c0b
0000000100008bcc	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008bd0	83 78 24 00 	cmpl	$0x0, 0x24(%rax)
0000000100008bd4	0f 84 2c 00 00 00 	je	0x100008c06
0000000100008bda	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008bde	48 8b 78 58 	movq	0x58(%rax), %rdi
0000000100008be2	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008be6	48 89 7d d0 	movq	%rdi, -0x30(%rbp)
0000000100008bea	48 89 c7 	movq	%rax, %rdi
0000000100008bed	e8 fe e0 ff ff 	callq	_write_width
0000000100008bf2	48 8b 7d d0 	movq	-0x30(%rbp), %rdi
0000000100008bf6	48 89 c6 	movq	%rax, %rsi
0000000100008bf9	e8 a2 17 00 00 	callq	_ft_strjoinfree
0000000100008bfe	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100008c02	48 89 46 58 	movq	%rax, 0x58(%rsi)
0000000100008c06	e9 00 00 00 00 	jmp	0x100008c0b
0000000100008c0b	e9 00 00 00 00 	jmp	0x100008c10
0000000100008c10	e9 00 00 00 00 	jmp	0x100008c15
0000000100008c15	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100008c19	e8 22 00 00 00 	callq	_assemblage
0000000100008c1e	31 c9 	xorl	%ecx, %ecx
0000000100008c20	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100008c24	48 89 87 90 00 00 00 	movq	%rax, 0x90(%rdi)
0000000100008c2b	89 c8 	movl	%ecx, %eax
0000000100008c2d	48 83 c4 30 	addq	$0x30, %rsp
0000000100008c31	5d 	popq	%rbp
0000000100008c32	c3 	retq
0000000100008c33	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_assemblage:
0000000100008c40	55 	pushq	%rbp
0000000100008c41	48 89 e5 	movq	%rsp, %rbp
0000000100008c44	48 83 ec 10 	subq	$0x10, %rsp
0000000100008c48	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100008c4c	48 c7 45 f0 00 00 00 00 	movq	$0x0, -0x10(%rbp)
0000000100008c54	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100008c58	48 83 7f 70 00 	cmpq	$0x0, 0x70(%rdi)
0000000100008c5d	0f 84 54 00 00 00 	je	0x100008cb7
0000000100008c63	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008c67	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
0000000100008c6b	0f 84 46 00 00 00 	je	0x100008cb7
0000000100008c71	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008c75	48 83 78 78 00 	cmpq	$0x0, 0x78(%rax)
0000000100008c7a	0f 84 22 00 00 00 	je	0x100008ca2
0000000100008c80	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008c84	48 8b 78 70 	movq	0x70(%rax), %rdi
0000000100008c88	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008c8c	48 8b 70 78 	movq	0x78(%rax), %rsi
0000000100008c90	e8 0b 17 00 00 	callq	_ft_strjoinfree
0000000100008c95	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100008c99	48 89 46 78 	movq	%rax, 0x78(%rsi)
0000000100008c9d	e9 10 00 00 00 	jmp	0x100008cb2
0000000100008ca2	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008ca6	48 8b 40 70 	movq	0x70(%rax), %rax
0000000100008caa	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100008cae	48 89 41 78 	movq	%rax, 0x78(%rcx)
0000000100008cb2	e9 00 00 00 00 	jmp	0x100008cb7
0000000100008cb7	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008cbb	48 83 78 70 00 	cmpq	$0x0, 0x70(%rax)
0000000100008cc0	0f 84 2b 00 00 00 	je	0x100008cf1
0000000100008cc6	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008cca	83 78 30 00 	cmpl	$0x0, 0x30(%rax)
0000000100008cce	0f 85 1d 00 00 00 	jne	0x100008cf1
0000000100008cd4	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008cd8	48 8b 78 70 	movq	0x70(%rax), %rdi
0000000100008cdc	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008ce0	48 8b 70 58 	movq	0x58(%rax), %rsi
0000000100008ce4	e8 b7 16 00 00 	callq	_ft_strjoinfree
0000000100008ce9	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100008ced	48 89 46 58 	movq	%rax, 0x58(%rsi)
0000000100008cf1	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008cf5	48 83 78 78 00 	cmpq	$0x0, 0x78(%rax)
0000000100008cfa	0f 84 1e 00 00 00 	je	0x100008d1e
0000000100008d00	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008d04	48 8b 78 78 	movq	0x78(%rax), %rdi
0000000100008d08	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008d0c	48 8b 70 58 	movq	0x58(%rax), %rsi
0000000100008d10	e8 8b 16 00 00 	callq	_ft_strjoinfree
0000000100008d15	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100008d19	e9 0c 00 00 00 	jmp	0x100008d2a
0000000100008d1e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008d22	48 8b 40 58 	movq	0x58(%rax), %rax
0000000100008d26	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100008d2a	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008d2e	48 83 c4 10 	addq	$0x10, %rsp
0000000100008d32	5d 	popq	%rbp
0000000100008d33	c3 	retq
0000000100008d34	90 	nop
0000000100008d35	90 	nop
0000000100008d36	90 	nop
0000000100008d37	90 	nop
0000000100008d38	90 	nop
0000000100008d39	90 	nop
0000000100008d3a	90 	nop
0000000100008d3b	90 	nop
0000000100008d3c	90 	nop
0000000100008d3d	90 	nop
0000000100008d3e	90 	nop
0000000100008d3f	90 	nop
_printf_loop:
0000000100008d40	55 	pushq	%rbp
0000000100008d41	48 89 e5 	movq	%rsp, %rbp
0000000100008d44	48 83 ec 20 	subq	$0x20, %rsp
0000000100008d48	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100008d4c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100008d50	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100008d57	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100008d5b	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100008d5f	80 3c 01 00 	cmpb	$0x0, (%rcx,%rax)
0000000100008d63	0f 84 c9 00 00 00 	je	0x100008e32
0000000100008d69	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100008d6d	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100008d71	0f be 14 01 	movsbl	(%rcx,%rax), %edx
0000000100008d75	83 fa 25 	cmpl	$0x25, %edx
0000000100008d78	0f 85 30 00 00 00 	jne	0x100008dae
0000000100008d7e	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100008d81	83 c0 01 	addl	$0x1, %eax
0000000100008d84	48 63 c8 	movslq	%eax, %rcx
0000000100008d87	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100008d8b	0f be 04 0a 	movsbl	(%rdx,%rcx), %eax
0000000100008d8f	83 f8 00 	cmpl	$0x0, %eax
0000000100008d92	0f 84 16 00 00 00 	je	0x100008dae
0000000100008d98	48 8d 75 ec 	leaq	-0x14(%rbp), %rsi
0000000100008d9c	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100008da0	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100008da4	e8 97 00 00 00 	callq	_padd_arg
0000000100008da9	e9 76 00 00 00 	jmp	0x100008e24
0000000100008dae	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100008db2	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100008db6	0f be 14 01 	movsbl	(%rcx,%rax), %edx
0000000100008dba	83 fa 25 	cmpl	$0x25, %edx
0000000100008dbd	0f 84 5c 00 00 00 	je	0x100008e1f
0000000100008dc3	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008dc7	48 8b 08 	movq	(%rax), %rcx
0000000100008dca	48 83 c1 01 	addq	$0x1, %rcx
0000000100008dce	48 89 08 	movq	%rcx, (%rax)
0000000100008dd1	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008dd5	8b 90 b0 00 00 00 	movl	0xb0(%rax), %edx
0000000100008ddb	83 e2 02 	andl	$0x2, %edx
0000000100008dde	83 fa 00 	cmpl	$0x0, %edx
0000000100008de1	0f 84 1c 00 00 00 	je	0x100008e03
0000000100008de7	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100008deb	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100008def	8a 14 01 	movb	(%rcx,%rax), %dl
0000000100008df2	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100008df6	0f be fa 	movsbl	%dl, %edi
0000000100008df9	e8 d2 05 00 00 	callq	_ft_reallocbufferchar
0000000100008dfe	e9 17 00 00 00 	jmp	0x100008e1a
0000000100008e03	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100008e07	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100008e0b	8a 14 01 	movb	(%rcx,%rax), %dl
0000000100008e0e	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100008e12	0f be fa 	movsbl	%dl, %edi
0000000100008e15	e8 46 04 00 00 	callq	_ft_putbufferchar
0000000100008e1a	e9 00 00 00 00 	jmp	0x100008e1f
0000000100008e1f	e9 00 00 00 00 	jmp	0x100008e24
0000000100008e24	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100008e27	83 c0 01 	addl	$0x1, %eax
0000000100008e2a	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100008e2d	e9 25 ff ff ff 	jmp	0x100008d57
0000000100008e32	48 83 c4 20 	addq	$0x20, %rsp
0000000100008e36	5d 	popq	%rbp
0000000100008e37	c3 	retq
0000000100008e38	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_padd_arg:
0000000100008e40	55 	pushq	%rbp
0000000100008e41	48 89 e5 	movq	%rsp, %rbp
0000000100008e44	48 83 ec 20 	subq	$0x20, %rsp
0000000100008e48	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100008e4c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100008e50	48 89 55 e8 	movq	%rdx, -0x18(%rbp)
0000000100008e54	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100008e58	e8 03 01 00 00 	callq	_init_struct
0000000100008e5d	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100008e61	8b 02 	movl	(%rdx), %eax
0000000100008e63	83 c0 01 	addl	$0x1, %eax
0000000100008e66	89 02 	movl	%eax, (%rdx)
0000000100008e68	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008e6c	48 63 00 	movslq	(%rax), %rax
0000000100008e6f	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
0000000100008e73	0f be 3c 01 	movsbl	(%rcx,%rax), %edi
0000000100008e77	e8 c4 be ff ff 	callq	_ft_isdigit
0000000100008e7c	b2 01 	movb	$0x1, %dl
0000000100008e7e	83 f8 00 	cmpl	$0x0, %eax
0000000100008e81	88 55 e7 	movb	%dl, -0x19(%rbp)
0000000100008e84	0f 85 24 00 00 00 	jne	0x100008eae
0000000100008e8a	48 8d 3d 5b 5b 00 00 	leaq	0x5b5b(%rip), %rdi ## literal pool for: " #+-lhzj.*"
0000000100008e91	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008e95	48 63 00 	movslq	(%rax), %rax
0000000100008e98	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
0000000100008e9c	0f be 34 01 	movsbl	(%rcx,%rax), %esi
0000000100008ea0	e8 cb cb ff ff 	callq	_ft_isin
0000000100008ea5	83 f8 00 	cmpl	$0x0, %eax
0000000100008ea8	0f 95 c2 	setne	%dl
0000000100008eab	88 55 e7 	movb	%dl, -0x19(%rbp)
0000000100008eae	8a 45 e7 	movb	-0x19(%rbp), %al
0000000100008eb1	a8 01 	testb	$0x1, %al
0000000100008eb3	0f 85 05 00 00 00 	jne	0x100008ebe
0000000100008eb9	e9 24 00 00 00 	jmp	0x100008ee2
0000000100008ebe	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008ec2	48 63 00 	movslq	(%rax), %rax
0000000100008ec5	48 03 45 e8 	addq	-0x18(%rbp), %rax
0000000100008ec9	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100008ecd	48 89 c7 	movq	%rax, %rdi
0000000100008ed0	e8 4b d4 ff ff 	callq	_check_flags
0000000100008ed5	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100008ed9	03 06 	addl	(%rsi), %eax
0000000100008edb	89 06 	movl	%eax, (%rsi)
0000000100008edd	e9 86 ff ff ff 	jmp	0x100008e68
0000000100008ee2	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100008ee6	48 63 00 	movslq	(%rax), %rax
0000000100008ee9	48 03 45 e8 	addq	-0x18(%rbp), %rax
0000000100008eed	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100008ef1	48 89 c7 	movq	%rax, %rdi
0000000100008ef4	e8 47 01 00 00 	callq	_check_type
0000000100008ef9	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100008efd	03 06 	addl	(%rsi), %eax
0000000100008eff	89 06 	movl	%eax, (%rsi)
0000000100008f01	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100008f05	48 63 b6 98 00 00 00 	movslq	0x98(%rsi), %rsi
0000000100008f0c	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100008f10	48 03 37 	addq	(%rdi), %rsi
0000000100008f13	48 89 37 	movq	%rsi, (%rdi)
0000000100008f16	48 8b 75 f8 	movq	-0x8(%rbp), %rsi
0000000100008f1a	8b 86 b0 00 00 00 	movl	0xb0(%rsi), %eax
0000000100008f20	83 e0 02 	andl	$0x2, %eax
0000000100008f23	83 f8 00 	cmpl	$0x0, %eax
0000000100008f26	0f 84 0e 00 00 00 	je	0x100008f3a
0000000100008f2c	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100008f30	e8 6b 05 00 00 	callq	_ft_reallocbuffer
0000000100008f35	e9 09 00 00 00 	jmp	0x100008f43
0000000100008f3a	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100008f3e	e8 bd 03 00 00 	callq	_ft_putbuffer
0000000100008f43	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008f47	48 05 90 00 00 00 	addq	$0x90, %rax
0000000100008f4d	48 89 c7 	movq	%rax, %rdi
0000000100008f50	e8 1b bf ff ff 	callq	_ft_strdel
0000000100008f55	48 83 c4 20 	addq	$0x20, %rsp
0000000100008f59	5d 	popq	%rbp
0000000100008f5a	c3 	retq
0000000100008f5b	0f 1f 44 00 00 	nopl	(%rax,%rax)
_init_struct:
0000000100008f60	55 	pushq	%rbp
0000000100008f61	48 89 e5 	movq	%rsp, %rbp
0000000100008f64	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100008f68	c7 45 f4 ff ff ff ff 	movl	$0xffffffff, -0xc(%rbp)
0000000100008f6f	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100008f72	83 c0 01 	addl	$0x1, %eax
0000000100008f75	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100008f78	83 f8 06 	cmpl	$0x6, %eax
0000000100008f7b	0f 8d 15 00 00 00 	jge	0x100008f96
0000000100008f81	48 63 45 f4 	movslq	-0xc(%rbp), %rax
0000000100008f85	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100008f89	c7 44 81 20 00 00 00 00 	movl	$0x0, 0x20(%rcx,%rax,4)
0000000100008f91	e9 d9 ff ff ff 	jmp	0x100008f6f
0000000100008f96	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008f9a	48 c7 40 70 00 00 00 00 	movq	$0x0, 0x70(%rax)
0000000100008fa2	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008fa6	48 c7 80 90 00 00 00 00 00 00 00 	movq	$0x0, 0x90(%rax)
0000000100008fb1	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008fb5	48 c7 40 78 00 00 00 00 	movq	$0x0, 0x78(%rax)
0000000100008fbd	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008fc1	48 c7 40 68 00 00 00 00 	movq	$0x0, 0x68(%rax)
0000000100008fc9	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008fcd	48 c7 40 60 00 00 00 00 	movq	$0x0, 0x60(%rax)
0000000100008fd5	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008fd9	48 c7 40 40 00 00 00 00 	movq	$0x0, 0x40(%rax)
0000000100008fe1	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008fe5	48 c7 40 48 00 00 00 00 	movq	$0x0, 0x48(%rax)
0000000100008fed	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008ff1	c7 40 50 00 00 00 00 	movl	$0x0, 0x50(%rax)
0000000100008ff8	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100008ffc	c7 80 80 00 00 00 00 00 00 00 	movl	$0x0, 0x80(%rax)
0000000100009006	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000900a	c7 80 84 00 00 00 00 00 00 00 	movl	$0x0, 0x84(%rax)
0000000100009014	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009018	c7 80 98 00 00 00 00 00 00 00 	movl	$0x0, 0x98(%rax)
0000000100009022	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009026	c7 80 9c 00 00 00 00 00 00 00 	movl	$0x0, 0x9c(%rax)
0000000100009030	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009034	c7 80 88 00 00 00 01 00 00 00 	movl	$0x1, 0x88(%rax)
000000010000903e	5d 	popq	%rbp
000000010000903f	c3 	retq
_check_type:
0000000100009040	55 	pushq	%rbp
0000000100009041	48 89 e5 	movq	%rsp, %rbp
0000000100009044	48 83 ec 30 	subq	$0x30, %rsp
0000000100009048	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000904c	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
0000000100009050	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100009054	0f be 06 	movsbl	(%rsi), %eax
0000000100009057	83 f8 25 	cmpl	$0x25, %eax
000000010000905a	0f 85 15 00 00 00 	jne	0x100009075
0000000100009060	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100009064	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100009068	e8 73 d9 ff ff 	callq	_write_percent
000000010000906d	89 45 e4 	movl	%eax, -0x1c(%rbp)
0000000100009070	e9 9b 01 00 00 	jmp	0x100009210
0000000100009075	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100009079	83 78 50 00 	cmpl	$0x0, 0x50(%rax)
000000010000907d	0f 84 2e 00 00 00 	je	0x1000090b1
0000000100009083	48 8d 3d 6d 59 00 00 	leaq	0x596d(%rip), %rdi ## literal pool for: "uoxX"
000000010000908a	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000908e	0f be 30 	movsbl	(%rax), %esi
0000000100009091	e8 da c9 ff ff 	callq	_ft_isin
0000000100009096	83 f8 00 	cmpl	$0x0, %eax
0000000100009099	0f 84 12 00 00 00 	je	0x1000090b1
000000010000909f	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000090a3	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
00000001000090a7	e8 44 ee ff ff 	callq	_mod_uox
00000001000090ac	e9 5a 01 00 00 	jmp	0x10000920b
00000001000090b1	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000090b5	83 78 50 00 	cmpl	$0x0, 0x50(%rax)
00000001000090b9	0f 84 1c 00 00 00 	je	0x1000090db
00000001000090bf	48 8d 3d 36 59 00 00 	leaq	0x5936(%rip), %rdi ## literal pool for: "di"
00000001000090c6	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000090ca	0f be 30 	movsbl	(%rax), %esi
00000001000090cd	e8 9e c9 ff ff 	callq	_ft_isin
00000001000090d2	83 f8 00 	cmpl	$0x0, %eax
00000001000090d5	0f 85 10 00 00 00 	jne	0x1000090eb
00000001000090db	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000090df	0f be 08 	movsbl	(%rax), %ecx
00000001000090e2	83 f9 44 	cmpl	$0x44, %ecx
00000001000090e5	0f 85 12 00 00 00 	jne	0x1000090fd
00000001000090eb	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000090ef	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
00000001000090f3	e8 18 f1 ff ff 	callq	_mod_di
00000001000090f8	e9 09 01 00 00 	jmp	0x100009206
00000001000090fd	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100009101	83 78 50 00 	cmpl	$0x0, 0x50(%rax)
0000000100009105	0f 85 1c 00 00 00 	jne	0x100009127
000000010000910b	48 8d 3d ed 58 00 00 	leaq	0x58ed(%rip), %rdi ## literal pool for: "dipouxX"
0000000100009112	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100009116	0f be 30 	movsbl	(%rax), %esi
0000000100009119	e8 52 c9 ff ff 	callq	_ft_isin
000000010000911e	83 f8 00 	cmpl	$0x0, %eax
0000000100009121	0f 85 1c 00 00 00 	jne	0x100009143
0000000100009127	48 8d 3d d9 58 00 00 	leaq	0x58d9(%rip), %rdi ## literal pool for: "fFUOp"
000000010000912e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100009132	0f be 30 	movsbl	(%rax), %esi
0000000100009135	e8 36 c9 ff ff 	callq	_ft_isin
000000010000913a	83 f8 00 	cmpl	$0x0, %eax
000000010000913d	0f 84 15 00 00 00 	je	0x100009158
0000000100009143	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100009147	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
000000010000914b	e8 e0 f4 ff ff 	callq	_dipfoux
0000000100009150	89 45 e0 	movl	%eax, -0x20(%rbp)
0000000100009153	e9 a9 00 00 00 	jmp	0x100009201
0000000100009158	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000915c	0f be 08 	movsbl	(%rax), %ecx
000000010000915f	83 f9 63 	cmpl	$0x63, %ecx
0000000100009162	0f 84 10 00 00 00 	je	0x100009178
0000000100009168	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000916c	0f be 08 	movsbl	(%rax), %ecx
000000010000916f	83 f9 43 	cmpl	$0x43, %ecx
0000000100009172	0f 85 15 00 00 00 	jne	0x10000918d
0000000100009178	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000917c	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
0000000100009180	e8 eb e2 ff ff 	callq	_sc_c
0000000100009185	89 45 dc 	movl	%eax, -0x24(%rbp)
0000000100009188	e9 6f 00 00 00 	jmp	0x1000091fc
000000010000918d	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100009191	0f be 08 	movsbl	(%rax), %ecx
0000000100009194	83 f9 73 	cmpl	$0x73, %ecx
0000000100009197	0f 84 10 00 00 00 	je	0x1000091ad
000000010000919d	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000091a1	0f be 08 	movsbl	(%rax), %ecx
00000001000091a4	83 f9 53 	cmpl	$0x53, %ecx
00000001000091a7	0f 85 15 00 00 00 	jne	0x1000091c2
00000001000091ad	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000091b1	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
00000001000091b5	e8 b6 e5 ff ff 	callq	_sc_s
00000001000091ba	89 45 d8 	movl	%eax, -0x28(%rbp)
00000001000091bd	e9 35 00 00 00 	jmp	0x1000091f7
00000001000091c2	48 8b 45 e8 	movq	-0x18(%rbp), %rax
00000001000091c6	48 83 78 40 00 	cmpq	$0x0, 0x40(%rax)
00000001000091cb	0f 84 15 00 00 00 	je	0x1000091e6
00000001000091d1	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000091d5	48 8b 75 e8 	movq	-0x18(%rbp), %rsi
00000001000091d9	e8 32 d9 ff ff 	callq	_write_other
00000001000091de	89 45 d4 	movl	%eax, -0x2c(%rbp)
00000001000091e1	e9 0c 00 00 00 	jmp	0x1000091f2
00000001000091e6	c7 45 fc ff ff ff ff 	movl	$0xffffffff, -0x4(%rbp)
00000001000091ed	e9 5f 00 00 00 	jmp	0x100009251
00000001000091f2	e9 00 00 00 00 	jmp	0x1000091f7
00000001000091f7	e9 00 00 00 00 	jmp	0x1000091fc
00000001000091fc	e9 00 00 00 00 	jmp	0x100009201
0000000100009201	e9 00 00 00 00 	jmp	0x100009206
0000000100009206	e9 00 00 00 00 	jmp	0x10000920b
000000010000920b	e9 00 00 00 00 	jmp	0x100009210
0000000100009210	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100009214	48 8b 40 40 	movq	0x40(%rax), %rax
0000000100009218	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
000000010000921c	48 63 89 80 00 00 00 	movslq	0x80(%rcx), %rcx
0000000100009223	48 01 c8 	addq	%rcx, %rax
0000000100009226	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
000000010000922a	48 63 89 84 00 00 00 	movslq	0x84(%rcx), %rcx
0000000100009231	48 01 c8 	addq	%rcx, %rax
0000000100009234	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
0000000100009238	48 63 91 98 00 00 00 	movslq	0x98(%rcx), %rdx
000000010000923f	48 01 c2 	addq	%rax, %rdx
0000000100009242	89 d6 	movl	%edx, %esi
0000000100009244	89 b1 98 00 00 00 	movl	%esi, 0x98(%rcx)
000000010000924a	c7 45 fc 00 00 00 00 	movl	$0x0, -0x4(%rbp)
0000000100009251	8b 45 fc 	movl	-0x4(%rbp), %eax
0000000100009254	48 83 c4 30 	addq	$0x30, %rsp
0000000100009258	5d 	popq	%rbp
0000000100009259	c3 	retq
000000010000925a	90 	nop
000000010000925b	90 	nop
000000010000925c	90 	nop
000000010000925d	90 	nop
000000010000925e	90 	nop
000000010000925f	90 	nop
_ft_putbufferchar:
0000000100009260	55 	pushq	%rbp
0000000100009261	48 89 e5 	movq	%rsp, %rbp
0000000100009264	48 83 ec 20 	subq	$0x20, %rsp
0000000100009268	40 88 f8 	movb	%dil, %al
000000010000926b	88 45 ff 	movb	%al, -0x1(%rbp)
000000010000926e	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
0000000100009272	8a 45 ff 	movb	-0x1(%rbp), %al
0000000100009275	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
0000000100009279	48 63 b6 b4 00 00 00 	movslq	0xb4(%rsi), %rsi
0000000100009280	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100009284	88 84 31 b8 00 00 00 	movb	%al, 0xb8(%rcx,%rsi)
000000010000928b	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000928f	8b b9 b4 00 00 00 	movl	0xb4(%rcx), %edi
0000000100009295	83 c7 01 	addl	$0x1, %edi
0000000100009298	89 b9 b4 00 00 00 	movl	%edi, 0xb4(%rcx)
000000010000929e	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000092a2	81 b9 b4 00 00 00 2c 01 00 00 	cmpl	$0x12c, 0xb4(%rcx)
00000001000092ac	0f 85 39 00 00 00 	jne	0x1000092eb
00000001000092b2	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000092b6	8b b8 a0 00 00 00 	movl	0xa0(%rax), %edi
00000001000092bc	48 8b 45 f0 	movq	-0x10(%rbp), %rax
00000001000092c0	48 05 b8 00 00 00 	addq	$0xb8, %rax
00000001000092c6	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000092ca	48 63 91 b4 00 00 00 	movslq	0xb4(%rcx), %rdx
00000001000092d1	48 89 c6 	movq	%rax, %rsi
00000001000092d4	e8 0f 52 00 00 	callq	0x10000e4e8 ## symbol stub for: _write
00000001000092d9	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
00000001000092dd	c7 81 b4 00 00 00 00 00 00 00 	movl	$0x0, 0xb4(%rcx)
00000001000092e7	48 89 45 e8 	movq	%rax, -0x18(%rbp)
00000001000092eb	48 83 c4 20 	addq	$0x20, %rsp
00000001000092ef	5d 	popq	%rbp
00000001000092f0	c3 	retq
00000001000092f1	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_ft_putbuffer:
0000000100009300	55 	pushq	%rbp
0000000100009301	48 89 e5 	movq	%rsp, %rbp
0000000100009304	48 83 ec 20 	subq	$0x20, %rsp
0000000100009308	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000930c	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
0000000100009313	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009316	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000931a	3b 81 98 00 00 00 	cmpl	0x98(%rcx), %eax
0000000100009320	0f 8d 9a 00 00 00 	jge	0x1000093c0
0000000100009326	48 63 45 f4 	movslq	-0xc(%rbp), %rax
000000010000932a	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000932e	48 8b 89 90 00 00 00 	movq	0x90(%rcx), %rcx
0000000100009335	8a 14 01 	movb	(%rcx,%rax), %dl
0000000100009338	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000933c	48 63 80 b4 00 00 00 	movslq	0xb4(%rax), %rax
0000000100009343	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100009347	88 94 01 b8 00 00 00 	movb	%dl, 0xb8(%rcx,%rax)
000000010000934e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009352	8b b0 b4 00 00 00 	movl	0xb4(%rax), %esi
0000000100009358	83 c6 01 	addl	$0x1, %esi
000000010000935b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000935f	89 b0 b4 00 00 00 	movl	%esi, 0xb4(%rax)
0000000100009365	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009369	81 b8 b4 00 00 00 2c 01 00 00 	cmpl	$0x12c, 0xb4(%rax)
0000000100009373	0f 85 39 00 00 00 	jne	0x1000093b2
0000000100009379	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000937d	8b b8 a0 00 00 00 	movl	0xa0(%rax), %edi
0000000100009383	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009387	48 05 b8 00 00 00 	addq	$0xb8, %rax
000000010000938d	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100009391	48 63 91 b4 00 00 00 	movslq	0xb4(%rcx), %rdx
0000000100009398	48 89 c6 	movq	%rax, %rsi
000000010000939b	e8 48 51 00 00 	callq	0x10000e4e8 ## symbol stub for: _write
00000001000093a0	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000093a4	c7 81 b4 00 00 00 00 00 00 00 	movl	$0x0, 0xb4(%rcx)
00000001000093ae	48 89 45 e8 	movq	%rax, -0x18(%rbp)
00000001000093b2	8b 45 f4 	movl	-0xc(%rbp), %eax
00000001000093b5	83 c0 01 	addl	$0x1, %eax
00000001000093b8	89 45 f4 	movl	%eax, -0xc(%rbp)
00000001000093bb	e9 53 ff ff ff 	jmp	0x100009313
00000001000093c0	48 83 c4 20 	addq	$0x20, %rsp
00000001000093c4	5d 	popq	%rbp
00000001000093c5	c3 	retq
00000001000093c6	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_ft_reallocbufferchar:
00000001000093d0	55 	pushq	%rbp
00000001000093d1	48 89 e5 	movq	%rsp, %rbp
00000001000093d4	48 83 ec 10 	subq	$0x10, %rsp
00000001000093d8	40 88 f8 	movb	%dil, %al
00000001000093db	bf 2c 01 00 00 	movl	$0x12c, %edi
00000001000093e0	88 45 ff 	movb	%al, -0x1(%rbp)
00000001000093e3	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
00000001000093e7	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000093eb	8b 86 b4 00 00 00 	movl	0xb4(%rsi), %eax
00000001000093f1	99 	cltd
00000001000093f2	f7 ff 	idivl	%edi
00000001000093f4	83 fa 00 	cmpl	$0x0, %edx
00000001000093f7	0f 85 63 00 00 00 	jne	0x100009460
00000001000093fd	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100009401	83 b8 b4 00 00 00 00 	cmpl	$0x0, 0xb4(%rax)
0000000100009408	0f 84 52 00 00 00 	je	0x100009460
000000010000940e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100009412	48 8b b8 a8 00 00 00 	movq	0xa8(%rax), %rdi
0000000100009419	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000941d	48 63 b0 b4 00 00 00 	movslq	0xb4(%rax), %rsi
0000000100009424	48 8b 45 f0 	movq	-0x10(%rbp), %rax
0000000100009428	8b 88 b4 00 00 00 	movl	0xb4(%rax), %ecx
000000010000942e	81 c1 2c 01 00 00 	addl	$0x12c, %ecx
0000000100009434	83 c1 01 	addl	$0x1, %ecx
0000000100009437	48 63 d1 	movslq	%ecx, %rdx
000000010000943a	e8 21 c5 ff ff 	callq	_ft_memrealloc
000000010000943f	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100009443	48 89 82 a8 00 00 00 	movq	%rax, 0xa8(%rdx)
000000010000944a	48 83 f8 00 	cmpq	$0x0, %rax
000000010000944e	0f 85 07 00 00 00 	jne	0x10000945b
0000000100009454	31 ff 	xorl	%edi, %edi
0000000100009456	e8 1f 4f 00 00 	callq	0x10000e37a ## symbol stub for: _exit
000000010000945b	e9 00 00 00 00 	jmp	0x100009460
0000000100009460	8a 45 ff 	movb	-0x1(%rbp), %al
0000000100009463	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100009467	48 63 89 b4 00 00 00 	movslq	0xb4(%rcx), %rcx
000000010000946e	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100009472	48 8b 92 a8 00 00 00 	movq	0xa8(%rdx), %rdx
0000000100009479	88 04 0a 	movb	%al, (%rdx,%rcx)
000000010000947c	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
0000000100009480	8b b1 b4 00 00 00 	movl	0xb4(%rcx), %esi
0000000100009486	83 c6 01 	addl	$0x1, %esi
0000000100009489	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000948d	89 b1 b4 00 00 00 	movl	%esi, 0xb4(%rcx)
0000000100009493	48 83 c4 10 	addq	$0x10, %rsp
0000000100009497	5d 	popq	%rbp
0000000100009498	c3 	retq
0000000100009499	0f 1f 80 00 00 00 00 	nopl	(%rax)
_ft_reallocbuffer:
00000001000094a0	55 	pushq	%rbp
00000001000094a1	48 89 e5 	movq	%rsp, %rbp
00000001000094a4	48 83 ec 10 	subq	$0x10, %rsp
00000001000094a8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000094ac	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
00000001000094b3	8b 45 f4 	movl	-0xc(%rbp), %eax
00000001000094b6	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000094ba	3b 81 98 00 00 00 	cmpl	0x98(%rcx), %eax
00000001000094c0	0f 8d d6 00 00 00 	jge	0x10000959c
00000001000094c6	b8 2c 01 00 00 	movl	$0x12c, %eax
00000001000094cb	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
00000001000094cf	8b 91 b4 00 00 00 	movl	0xb4(%rcx), %edx
00000001000094d5	89 45 f0 	movl	%eax, -0x10(%rbp)
00000001000094d8	89 d0 	movl	%edx, %eax
00000001000094da	99 	cltd
00000001000094db	8b 75 f0 	movl	-0x10(%rbp), %esi
00000001000094de	f7 fe 	idivl	%esi
00000001000094e0	83 fa 00 	cmpl	$0x0, %edx
00000001000094e3	0f 85 63 00 00 00 	jne	0x10000954c
00000001000094e9	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000094ed	83 b8 b4 00 00 00 00 	cmpl	$0x0, 0xb4(%rax)
00000001000094f4	0f 84 52 00 00 00 	je	0x10000954c
00000001000094fa	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000094fe	48 8b b8 a8 00 00 00 	movq	0xa8(%rax), %rdi
0000000100009505	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009509	48 63 b0 b4 00 00 00 	movslq	0xb4(%rax), %rsi
0000000100009510	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009514	8b 88 b4 00 00 00 	movl	0xb4(%rax), %ecx
000000010000951a	81 c1 2c 01 00 00 	addl	$0x12c, %ecx
0000000100009520	83 c1 01 	addl	$0x1, %ecx
0000000100009523	48 63 d1 	movslq	%ecx, %rdx
0000000100009526	e8 35 c4 ff ff 	callq	_ft_memrealloc
000000010000952b	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
000000010000952f	48 89 82 a8 00 00 00 	movq	%rax, 0xa8(%rdx)
0000000100009536	48 83 f8 00 	cmpq	$0x0, %rax
000000010000953a	0f 85 07 00 00 00 	jne	0x100009547
0000000100009540	31 ff 	xorl	%edi, %edi
0000000100009542	e8 33 4e 00 00 	callq	0x10000e37a ## symbol stub for: _exit
0000000100009547	e9 00 00 00 00 	jmp	0x10000954c
000000010000954c	48 63 45 f4 	movslq	-0xc(%rbp), %rax
0000000100009550	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100009554	48 8b 89 90 00 00 00 	movq	0x90(%rcx), %rcx
000000010000955b	8a 14 01 	movb	(%rcx,%rax), %dl
000000010000955e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009562	48 63 80 b4 00 00 00 	movslq	0xb4(%rax), %rax
0000000100009569	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000956d	48 8b 89 a8 00 00 00 	movq	0xa8(%rcx), %rcx
0000000100009574	88 14 01 	movb	%dl, (%rcx,%rax)
0000000100009577	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000957b	8b b0 b4 00 00 00 	movl	0xb4(%rax), %esi
0000000100009581	83 c6 01 	addl	$0x1, %esi
0000000100009584	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009588	89 b0 b4 00 00 00 	movl	%esi, 0xb4(%rax)
000000010000958e	8b 75 f4 	movl	-0xc(%rbp), %esi
0000000100009591	83 c6 01 	addl	$0x1, %esi
0000000100009594	89 75 f4 	movl	%esi, -0xc(%rbp)
0000000100009597	e9 17 ff ff ff 	jmp	0x1000094b3
000000010000959c	48 83 c4 10 	addq	$0x10, %rsp
00000001000095a0	5d 	popq	%rbp
00000001000095a1	c3 	retq
00000001000095a2	90 	nop
00000001000095a3	90 	nop
00000001000095a4	90 	nop
00000001000095a5	90 	nop
00000001000095a6	90 	nop
00000001000095a7	90 	nop
00000001000095a8	90 	nop
00000001000095a9	90 	nop
00000001000095aa	90 	nop
00000001000095ab	90 	nop
00000001000095ac	90 	nop
00000001000095ad	90 	nop
00000001000095ae	90 	nop
00000001000095af	90 	nop
_ft_itoa_base_ui:
00000001000095b0	55 	pushq	%rbp
00000001000095b1	48 89 e5 	movq	%rsp, %rbp
00000001000095b4	48 83 ec 30 	subq	$0x30, %rsp
00000001000095b8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
00000001000095bc	89 75 ec 	movl	%esi, -0x14(%rbp)
00000001000095bf	c7 45 e4 00 00 00 00 	movl	$0x0, -0x1c(%rbp)
00000001000095c6	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000095ca	8b 75 ec 	movl	-0x14(%rbp), %esi
00000001000095cd	e8 ee 00 00 00 	callq	_count_number_ui
00000001000095d2	83 e8 01 	subl	$0x1, %eax
00000001000095d5	89 45 e8 	movl	%eax, -0x18(%rbp)
00000001000095d8	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
00000001000095dc	8b 75 ec 	movl	-0x14(%rbp), %esi
00000001000095df	e8 dc 00 00 00 	callq	_count_number_ui
00000001000095e4	48 63 f8 	movslq	%eax, %rdi
00000001000095e7	e8 04 b8 ff ff 	callq	_ft_strnew
00000001000095ec	48 89 45 d8 	movq	%rax, -0x28(%rbp)
00000001000095f0	48 83 f8 00 	cmpq	$0x0, %rax
00000001000095f4	0f 85 0d 00 00 00 	jne	0x100009607
00000001000095fa	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100009602	e9 a7 00 00 00 	jmp	0x1000096ae
0000000100009607	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
000000010000960c	0f 85 0c 00 00 00 	jne	0x10000961e
0000000100009612	48 63 45 e8 	movslq	-0x18(%rbp), %rax
0000000100009616	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
000000010000961a	c6 04 01 30 	movb	$0x30, (%rcx,%rax)
000000010000961e	e9 00 00 00 00 	jmp	0x100009623
0000000100009623	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100009628	0f 84 78 00 00 00 	je	0x1000096a6
000000010000962e	b8 30 00 00 00 	movl	$0x30, %eax
0000000100009633	b9 57 00 00 00 	movl	$0x57, %ecx
0000000100009638	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000963c	48 63 75 ec 	movslq	-0x14(%rbp), %rsi
0000000100009640	89 45 d4 	movl	%eax, -0x2c(%rbp)
0000000100009643	48 89 d0 	movq	%rdx, %rax
0000000100009646	31 ff 	xorl	%edi, %edi
0000000100009648	89 fa 	movl	%edi, %edx
000000010000964a	48 f7 f6 	divq	%rsi
000000010000964d	48 83 fa 09 	cmpq	$0x9, %rdx
0000000100009651	8b 7d d4 	movl	-0x2c(%rbp), %edi
0000000100009654	0f 47 f9 	cmoval	%ecx, %edi
0000000100009657	89 7d e4 	movl	%edi, -0x1c(%rbp)
000000010000965a	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000965e	48 63 75 ec 	movslq	-0x14(%rbp), %rsi
0000000100009662	48 89 d0 	movq	%rdx, %rax
0000000100009665	31 c9 	xorl	%ecx, %ecx
0000000100009667	89 ca 	movl	%ecx, %edx
0000000100009669	48 f7 f6 	divq	%rsi
000000010000966c	48 63 75 e4 	movslq	-0x1c(%rbp), %rsi
0000000100009670	48 01 f2 	addq	%rsi, %rdx
0000000100009673	41 88 d0 	movb	%dl, %r8b
0000000100009676	48 63 55 e8 	movslq	-0x18(%rbp), %rdx
000000010000967a	48 8b 75 d8 	movq	-0x28(%rbp), %rsi
000000010000967e	44 88 04 16 	movb	%r8b, (%rsi,%rdx)
0000000100009682	8b 4d e8 	movl	-0x18(%rbp), %ecx
0000000100009685	83 c1 ff 	addl	$-0x1, %ecx
0000000100009688	89 4d e8 	movl	%ecx, -0x18(%rbp)
000000010000968b	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000968f	48 63 75 ec 	movslq	-0x14(%rbp), %rsi
0000000100009693	48 89 d0 	movq	%rdx, %rax
0000000100009696	31 c9 	xorl	%ecx, %ecx
0000000100009698	89 ca 	movl	%ecx, %edx
000000010000969a	48 f7 f6 	divq	%rsi
000000010000969d	48 89 45 f0 	movq	%rax, -0x10(%rbp)
00000001000096a1	e9 7d ff ff ff 	jmp	0x100009623
00000001000096a6	48 8b 45 d8 	movq	-0x28(%rbp), %rax
00000001000096aa	48 89 45 f8 	movq	%rax, -0x8(%rbp)
00000001000096ae	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000096b2	48 83 c4 30 	addq	$0x30, %rsp
00000001000096b6	5d 	popq	%rbp
00000001000096b7	c3 	retq
00000001000096b8	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_count_number_ui:
00000001000096c0	55 	pushq	%rbp
00000001000096c1	48 89 e5 	movq	%rsp, %rbp
00000001000096c4	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000096c8	89 75 f4 	movl	%esi, -0xc(%rbp)
00000001000096cb	c7 45 f0 00 00 00 00 	movl	$0x0, -0x10(%rbp)
00000001000096d2	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
00000001000096d7	0f 85 09 00 00 00 	jne	0x1000096e6
00000001000096dd	8b 45 f0 	movl	-0x10(%rbp), %eax
00000001000096e0	83 c0 01 	addl	$0x1, %eax
00000001000096e3	89 45 f0 	movl	%eax, -0x10(%rbp)
00000001000096e6	e9 00 00 00 00 	jmp	0x1000096eb
00000001000096eb	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
00000001000096f0	0f 84 1f 00 00 00 	je	0x100009715
00000001000096f6	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000096fa	48 63 4d f4 	movslq	-0xc(%rbp), %rcx
00000001000096fe	31 d2 	xorl	%edx, %edx
0000000100009700	48 f7 f1 	divq	%rcx
0000000100009703	48 89 45 f8 	movq	%rax, -0x8(%rbp)
0000000100009707	8b 75 f0 	movl	-0x10(%rbp), %esi
000000010000970a	83 c6 01 	addl	$0x1, %esi
000000010000970d	89 75 f0 	movl	%esi, -0x10(%rbp)
0000000100009710	e9 d6 ff ff ff 	jmp	0x1000096eb
0000000100009715	8b 45 f0 	movl	-0x10(%rbp), %eax
0000000100009718	5d 	popq	%rbp
0000000100009719	c3 	retq
000000010000971a	66 0f 1f 44 00 00 	nopw	(%rax,%rax)
_ft_itoa_base_maj_ui:
0000000100009720	55 	pushq	%rbp
0000000100009721	48 89 e5 	movq	%rsp, %rbp
0000000100009724	48 83 ec 30 	subq	$0x30, %rsp
0000000100009728	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000972c	89 75 ec 	movl	%esi, -0x14(%rbp)
000000010000972f	c7 45 e4 00 00 00 00 	movl	$0x0, -0x1c(%rbp)
0000000100009736	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000973a	8b 75 ec 	movl	-0x14(%rbp), %esi
000000010000973d	e8 7e ff ff ff 	callq	_count_number_ui
0000000100009742	83 e8 01 	subl	$0x1, %eax
0000000100009745	89 45 e8 	movl	%eax, -0x18(%rbp)
0000000100009748	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000974c	8b 75 ec 	movl	-0x14(%rbp), %esi
000000010000974f	e8 6c ff ff ff 	callq	_count_number_ui
0000000100009754	48 63 f8 	movslq	%eax, %rdi
0000000100009757	e8 94 b6 ff ff 	callq	_ft_strnew
000000010000975c	48 89 45 d8 	movq	%rax, -0x28(%rbp)
0000000100009760	48 83 f8 00 	cmpq	$0x0, %rax
0000000100009764	0f 85 0d 00 00 00 	jne	0x100009777
000000010000976a	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
0000000100009772	e9 a7 00 00 00 	jmp	0x10000981e
0000000100009777	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
000000010000977c	0f 85 0c 00 00 00 	jne	0x10000978e
0000000100009782	48 63 45 e8 	movslq	-0x18(%rbp), %rax
0000000100009786	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
000000010000978a	c6 04 01 30 	movb	$0x30, (%rcx,%rax)
000000010000978e	e9 00 00 00 00 	jmp	0x100009793
0000000100009793	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100009798	0f 84 78 00 00 00 	je	0x100009816
000000010000979e	b8 30 00 00 00 	movl	$0x30, %eax
00000001000097a3	b9 37 00 00 00 	movl	$0x37, %ecx
00000001000097a8	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000097ac	48 63 75 ec 	movslq	-0x14(%rbp), %rsi
00000001000097b0	89 45 d4 	movl	%eax, -0x2c(%rbp)
00000001000097b3	48 89 d0 	movq	%rdx, %rax
00000001000097b6	31 ff 	xorl	%edi, %edi
00000001000097b8	89 fa 	movl	%edi, %edx
00000001000097ba	48 f7 f6 	divq	%rsi
00000001000097bd	48 83 fa 09 	cmpq	$0x9, %rdx
00000001000097c1	8b 7d d4 	movl	-0x2c(%rbp), %edi
00000001000097c4	0f 47 f9 	cmoval	%ecx, %edi
00000001000097c7	89 7d e4 	movl	%edi, -0x1c(%rbp)
00000001000097ca	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000097ce	48 63 75 ec 	movslq	-0x14(%rbp), %rsi
00000001000097d2	48 89 d0 	movq	%rdx, %rax
00000001000097d5	31 c9 	xorl	%ecx, %ecx
00000001000097d7	89 ca 	movl	%ecx, %edx
00000001000097d9	48 f7 f6 	divq	%rsi
00000001000097dc	48 63 75 e4 	movslq	-0x1c(%rbp), %rsi
00000001000097e0	48 01 f2 	addq	%rsi, %rdx
00000001000097e3	41 88 d0 	movb	%dl, %r8b
00000001000097e6	48 63 55 e8 	movslq	-0x18(%rbp), %rdx
00000001000097ea	48 8b 75 d8 	movq	-0x28(%rbp), %rsi
00000001000097ee	44 88 04 16 	movb	%r8b, (%rsi,%rdx)
00000001000097f2	8b 4d e8 	movl	-0x18(%rbp), %ecx
00000001000097f5	83 c1 ff 	addl	$-0x1, %ecx
00000001000097f8	89 4d e8 	movl	%ecx, -0x18(%rbp)
00000001000097fb	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
00000001000097ff	48 63 75 ec 	movslq	-0x14(%rbp), %rsi
0000000100009803	48 89 d0 	movq	%rdx, %rax
0000000100009806	31 c9 	xorl	%ecx, %ecx
0000000100009808	89 ca 	movl	%ecx, %edx
000000010000980a	48 f7 f6 	divq	%rsi
000000010000980d	48 89 45 f0 	movq	%rax, -0x10(%rbp)
0000000100009811	e9 7d ff ff ff 	jmp	0x100009793
0000000100009816	48 8b 45 d8 	movq	-0x28(%rbp), %rax
000000010000981a	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000981e	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009822	48 83 c4 30 	addq	$0x30, %rsp
0000000100009826	5d 	popq	%rbp
0000000100009827	c3 	retq
0000000100009828	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_ft_itoa_ll_limit:
0000000100009830	55 	pushq	%rbp
0000000100009831	48 89 e5 	movq	%rsp, %rbp
0000000100009834	48 83 ec 30 	subq	$0x30, %rsp
0000000100009838	be 0a 00 00 00 	movl	$0xa, %esi
000000010000983d	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
0000000100009841	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100009845	e8 06 01 00 00 	callq	_count_number
000000010000984a	be 0a 00 00 00 	movl	$0xa, %esi
000000010000984f	83 e8 01 	subl	$0x1, %eax
0000000100009852	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100009855	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
0000000100009859	e8 f2 00 00 00 	callq	_count_number
000000010000985e	48 63 f8 	movslq	%eax, %rdi
0000000100009861	e8 8a b5 ff ff 	callq	_ft_strnew
0000000100009866	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000986a	48 83 7d e0 00 	cmpq	$0x0, -0x20(%rbp)
000000010000986f	0f 85 0d 00 00 00 	jne	0x100009882
0000000100009875	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000987d	e9 b9 00 00 00 	jmp	0x10000993b
0000000100009882	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100009887	0f 8d 07 00 00 00 	jge	0x100009894
000000010000988d	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100009891	c6 00 2d 	movb	$0x2d, (%rax)
0000000100009894	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
0000000100009899	0f 85 0c 00 00 00 	jne	0x1000098ab
000000010000989f	48 63 45 ec 	movslq	-0x14(%rbp), %rax
00000001000098a3	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
00000001000098a7	c6 04 01 30 	movb	$0x30, (%rcx,%rax)
00000001000098ab	e9 00 00 00 00 	jmp	0x1000098b0
00000001000098b0	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
00000001000098b5	0f 84 78 00 00 00 	je	0x100009933
00000001000098bb	b8 0a 00 00 00 	movl	$0xa, %eax
00000001000098c0	89 c1 	movl	%eax, %ecx
00000001000098c2	b8 01 00 00 00 	movl	$0x1, %eax
00000001000098c7	ba ff ff ff ff 	movl	$0xffffffff, %edx
00000001000098cc	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
00000001000098d0	89 45 d4 	movl	%eax, -0x2c(%rbp)
00000001000098d3	48 89 f0 	movq	%rsi, %rax
00000001000098d6	89 55 d0 	movl	%edx, -0x30(%rbp)
00000001000098d9	48 99 	cqto
00000001000098db	48 f7 f9 	idivq	%rcx
00000001000098de	48 89 55 d8 	movq	%rdx, -0x28(%rbp)
00000001000098e2	48 83 7d d8 00 	cmpq	$0x0, -0x28(%rbp)
00000001000098e7	8b 7d d4 	movl	-0x2c(%rbp), %edi
00000001000098ea	44 8b 45 d0 	movl	-0x30(%rbp), %r8d
00000001000098ee	41 0f 4c f8 	cmovll	%r8d, %edi
00000001000098f2	48 63 d7 	movslq	%edi, %rdx
00000001000098f5	48 0f af 55 d8 	imulq	-0x28(%rbp), %rdx
00000001000098fa	48 89 55 d8 	movq	%rdx, -0x28(%rbp)
00000001000098fe	48 8b 55 d8 	movq	-0x28(%rbp), %rdx
0000000100009902	48 83 c2 30 	addq	$0x30, %rdx
0000000100009906	41 88 d1 	movb	%dl, %r9b
0000000100009909	48 63 55 ec 	movslq	-0x14(%rbp), %rdx
000000010000990d	48 8b 75 e0 	movq	-0x20(%rbp), %rsi
0000000100009911	44 88 0c 16 	movb	%r9b, (%rsi,%rdx)
0000000100009915	8b 7d ec 	movl	-0x14(%rbp), %edi
0000000100009918	83 c7 ff 	addl	$-0x1, %edi
000000010000991b	89 7d ec 	movl	%edi, -0x14(%rbp)
000000010000991e	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
0000000100009922	48 89 d0 	movq	%rdx, %rax
0000000100009925	48 99 	cqto
0000000100009927	48 f7 f9 	idivq	%rcx
000000010000992a	48 89 45 f0 	movq	%rax, -0x10(%rbp)
000000010000992e	e9 7d ff ff ff 	jmp	0x1000098b0
0000000100009933	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100009937	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000993b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000993f	48 83 c4 30 	addq	$0x30, %rsp
0000000100009943	5d 	popq	%rbp
0000000100009944	c3 	retq
0000000100009945	66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_count_number:
0000000100009950	55 	pushq	%rbp
0000000100009951	48 89 e5 	movq	%rsp, %rbp
0000000100009954	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100009958	89 75 f4 	movl	%esi, -0xc(%rbp)
000000010000995b	c7 45 f0 00 00 00 00 	movl	$0x0, -0x10(%rbp)
0000000100009962	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
0000000100009967	0f 85 09 00 00 00 	jne	0x100009976
000000010000996d	8b 45 f0 	movl	-0x10(%rbp), %eax
0000000100009970	83 c0 01 	addl	$0x1, %eax
0000000100009973	89 45 f0 	movl	%eax, -0x10(%rbp)
0000000100009976	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
000000010000997b	0f 8d 09 00 00 00 	jge	0x10000998a
0000000100009981	8b 45 f0 	movl	-0x10(%rbp), %eax
0000000100009984	83 c0 01 	addl	$0x1, %eax
0000000100009987	89 45 f0 	movl	%eax, -0x10(%rbp)
000000010000998a	e9 00 00 00 00 	jmp	0x10000998f
000000010000998f	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
0000000100009994	0f 84 1f 00 00 00 	je	0x1000099b9
000000010000999a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000999e	48 63 4d f4 	movslq	-0xc(%rbp), %rcx
00000001000099a2	48 99 	cqto
00000001000099a4	48 f7 f9 	idivq	%rcx
00000001000099a7	48 89 45 f8 	movq	%rax, -0x8(%rbp)
00000001000099ab	8b 75 f0 	movl	-0x10(%rbp), %esi
00000001000099ae	83 c6 01 	addl	$0x1, %esi
00000001000099b1	89 75 f0 	movl	%esi, -0x10(%rbp)
00000001000099b4	e9 d6 ff ff ff 	jmp	0x10000998f
00000001000099b9	8b 45 f0 	movl	-0x10(%rbp), %eax
00000001000099bc	5d 	popq	%rbp
00000001000099bd	c3 	retq
00000001000099be	90 	nop
00000001000099bf	90 	nop
_ft_sizebit:
00000001000099c0	55 	pushq	%rbp
00000001000099c1	48 89 e5 	movq	%rsp, %rbp
00000001000099c4	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
00000001000099c8	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
00000001000099cf	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
00000001000099d4	0f 84 1a 00 00 00 	je	0x1000099f4
00000001000099da	48 8b 45 f8 	movq	-0x8(%rbp), %rax
00000001000099de	48 c1 f8 01 	sarq	$0x1, %rax
00000001000099e2	48 89 45 f8 	movq	%rax, -0x8(%rbp)
00000001000099e6	8b 4d f4 	movl	-0xc(%rbp), %ecx
00000001000099e9	83 c1 01 	addl	$0x1, %ecx
00000001000099ec	89 4d f4 	movl	%ecx, -0xc(%rbp)
00000001000099ef	e9 db ff ff ff 	jmp	0x1000099cf
00000001000099f4	8b 45 f4 	movl	-0xc(%rbp), %eax
00000001000099f7	5d 	popq	%rbp
00000001000099f8	c3 	retq
00000001000099f9	90 	nop
00000001000099fa	90 	nop
00000001000099fb	90 	nop
00000001000099fc	90 	nop
00000001000099fd	90 	nop
00000001000099fe	90 	nop
00000001000099ff	90 	nop
_ft_wcharlen:
0000000100009a00	55 	pushq	%rbp
0000000100009a01	48 89 e5 	movq	%rsp, %rbp
0000000100009a04	48 83 ec 10 	subq	$0x10, %rsp
0000000100009a08	89 7d fc 	movl	%edi, -0x4(%rbp)
0000000100009a0b	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
0000000100009a12	48 63 7d fc 	movslq	-0x4(%rbp), %rdi
0000000100009a16	e8 a5 ff ff ff 	callq	_ft_sizebit
0000000100009a1b	89 45 f8 	movl	%eax, -0x8(%rbp)
0000000100009a1e	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009a21	83 c0 01 	addl	$0x1, %eax
0000000100009a24	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100009a27	83 7d f8 07 	cmpl	$0x7, -0x8(%rbp)
0000000100009a2b	0f 8e 09 00 00 00 	jle	0x100009a3a
0000000100009a31	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009a34	83 c0 01 	addl	$0x1, %eax
0000000100009a37	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100009a3a	83 7d f8 0b 	cmpl	$0xb, -0x8(%rbp)
0000000100009a3e	0f 8e 09 00 00 00 	jle	0x100009a4d
0000000100009a44	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009a47	83 c0 01 	addl	$0x1, %eax
0000000100009a4a	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100009a4d	83 7d f8 10 	cmpl	$0x10, -0x8(%rbp)
0000000100009a51	0f 8e 09 00 00 00 	jle	0x100009a60
0000000100009a57	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009a5a	83 c0 01 	addl	$0x1, %eax
0000000100009a5d	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100009a60	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009a63	48 83 c4 10 	addq	$0x10, %rsp
0000000100009a67	5d 	popq	%rbp
0000000100009a68	c3 	retq
0000000100009a69	90 	nop
0000000100009a6a	90 	nop
0000000100009a6b	90 	nop
0000000100009a6c	90 	nop
0000000100009a6d	90 	nop
0000000100009a6e	90 	nop
0000000100009a6f	90 	nop
_ft_wctoc:
0000000100009a70	55 	pushq	%rbp
0000000100009a71	48 89 e5 	movq	%rsp, %rbp
0000000100009a74	48 83 ec 20 	subq	$0x20, %rsp
0000000100009a78	b8 05 00 00 00 	movl	$0x5, %eax
0000000100009a7d	89 c1 	movl	%eax, %ecx
0000000100009a7f	89 7d f4 	movl	%edi, -0xc(%rbp)
0000000100009a82	48 89 cf 	movq	%rcx, %rdi
0000000100009a85	e8 66 b3 ff ff 	callq	_ft_strnew
0000000100009a8a	48 89 45 e8 	movq	%rax, -0x18(%rbp)
0000000100009a8e	83 7d f4 00 	cmpl	$0x0, -0xc(%rbp)
0000000100009a92	0f 85 0d 00 00 00 	jne	0x100009aa5
0000000100009a98	48 8b 45 e8 	movq	-0x18(%rbp), %rax
0000000100009a9c	48 89 45 f8 	movq	%rax, -0x8(%rbp)
0000000100009aa0	e9 23 00 00 00 	jmp	0x100009ac8
0000000100009aa5	48 63 7d f4 	movslq	-0xc(%rbp), %rdi
0000000100009aa9	e8 12 ff ff ff 	callq	_ft_sizebit
0000000100009aae	89 45 f0 	movl	%eax, -0x10(%rbp)
0000000100009ab1	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100009ab5	8b 75 f4 	movl	-0xc(%rbp), %esi
0000000100009ab8	8b 55 f0 	movl	-0x10(%rbp), %edx
0000000100009abb	e8 20 00 00 00 	callq	_put_in_str
0000000100009ac0	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
0000000100009ac4	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100009ac8	48 8b 45 f8 	movq	-0x8(%rbp), %rax
0000000100009acc	48 83 c4 20 	addq	$0x20, %rsp
0000000100009ad0	5d 	popq	%rbp
0000000100009ad1	c3 	retq
0000000100009ad2	66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_put_in_str:
0000000100009ae0	55 	pushq	%rbp
0000000100009ae1	48 89 e5 	movq	%rsp, %rbp
0000000100009ae4	48 83 ec 20 	subq	$0x20, %rsp
0000000100009ae8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100009aec	89 75 f4 	movl	%esi, -0xc(%rbp)
0000000100009aef	89 55 f0 	movl	%edx, -0x10(%rbp)
0000000100009af2	83 7d f0 07 	cmpl	$0x7, -0x10(%rbp)
0000000100009af6	0f 8f 10 00 00 00 	jg	0x100009b0c
0000000100009afc	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009aff	88 c1 	movb	%al, %cl
0000000100009b01	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100009b05	88 0a 	movb	%cl, (%rdx)
0000000100009b07	e9 51 01 00 00 	jmp	0x100009c5d
0000000100009b0c	83 7d f0 0b 	cmpl	$0xb, -0x10(%rbp)
0000000100009b10	0f 8f 44 00 00 00 	jg	0x100009b5a
0000000100009b16	31 f6 	xorl	%esi, %esi
0000000100009b18	ba 06 00 00 00 	movl	$0x6, %edx
0000000100009b1d	b9 c0 00 00 00 	movl	$0xc0, %ecx
0000000100009b22	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009b25	e8 46 01 00 00 	callq	_ft_save
0000000100009b2a	b9 1a 00 00 00 	movl	$0x1a, %ecx
0000000100009b2f	ba 80 00 00 00 	movl	$0x80, %edx
0000000100009b34	4c 8b 45 f8 	movq	-0x8(%rbp), %r8
0000000100009b38	41 88 00 	movb	%al, (%r8)
0000000100009b3b	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009b3e	89 ce 	movl	%ecx, %esi
0000000100009b40	89 55 ec 	movl	%edx, -0x14(%rbp)
0000000100009b43	89 ca 	movl	%ecx, %edx
0000000100009b45	8b 4d ec 	movl	-0x14(%rbp), %ecx
0000000100009b48	e8 23 01 00 00 	callq	_ft_save
0000000100009b4d	4c 8b 45 f8 	movq	-0x8(%rbp), %r8
0000000100009b51	41 88 40 01 	movb	%al, 0x1(%r8)
0000000100009b55	e9 fe 00 00 00 	jmp	0x100009c58
0000000100009b5a	83 7d f0 10 	cmpl	$0x10, -0x10(%rbp)
0000000100009b5e	0f 8f 63 00 00 00 	jg	0x100009bc7
0000000100009b64	31 f6 	xorl	%esi, %esi
0000000100009b66	ba 0c 00 00 00 	movl	$0xc, %edx
0000000100009b6b	b9 e0 00 00 00 	movl	$0xe0, %ecx
0000000100009b70	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009b73	e8 f8 00 00 00 	callq	_ft_save
0000000100009b78	be 14 00 00 00 	movl	$0x14, %esi
0000000100009b7d	ba 1a 00 00 00 	movl	$0x1a, %edx
0000000100009b82	b9 80 00 00 00 	movl	$0x80, %ecx
0000000100009b87	4c 8b 45 f8 	movq	-0x8(%rbp), %r8
0000000100009b8b	41 88 00 	movb	%al, (%r8)
0000000100009b8e	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009b91	e8 da 00 00 00 	callq	_ft_save
0000000100009b96	b9 1a 00 00 00 	movl	$0x1a, %ecx
0000000100009b9b	ba 80 00 00 00 	movl	$0x80, %edx
0000000100009ba0	4c 8b 45 f8 	movq	-0x8(%rbp), %r8
0000000100009ba4	41 88 40 01 	movb	%al, 0x1(%r8)
0000000100009ba8	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009bab	89 ce 	movl	%ecx, %esi
0000000100009bad	89 55 e8 	movl	%edx, -0x18(%rbp)
0000000100009bb0	89 ca 	movl	%ecx, %edx
0000000100009bb2	8b 4d e8 	movl	-0x18(%rbp), %ecx
0000000100009bb5	e8 b6 00 00 00 	callq	_ft_save
0000000100009bba	4c 8b 45 f8 	movq	-0x8(%rbp), %r8
0000000100009bbe	41 88 40 02 	movb	%al, 0x2(%r8)
0000000100009bc2	e9 8c 00 00 00 	jmp	0x100009c53
0000000100009bc7	83 7d f0 15 	cmpl	$0x15, -0x10(%rbp)
0000000100009bcb	0f 8f 7d 00 00 00 	jg	0x100009c4e
0000000100009bd1	31 f6 	xorl	%esi, %esi
0000000100009bd3	ba 12 00 00 00 	movl	$0x12, %edx
0000000100009bd8	b9 f0 00 00 00 	movl	$0xf0, %ecx
0000000100009bdd	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009be0	e8 8b 00 00 00 	callq	_ft_save
0000000100009be5	be 0e 00 00 00 	movl	$0xe, %esi
0000000100009bea	ba 1a 00 00 00 	movl	$0x1a, %edx
0000000100009bef	b9 80 00 00 00 	movl	$0x80, %ecx
0000000100009bf4	4c 8b 45 f8 	movq	-0x8(%rbp), %r8
0000000100009bf8	41 88 00 	movb	%al, (%r8)
0000000100009bfb	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009bfe	e8 6d 00 00 00 	callq	_ft_save
0000000100009c03	be 14 00 00 00 	movl	$0x14, %esi
0000000100009c08	ba 1a 00 00 00 	movl	$0x1a, %edx
0000000100009c0d	b9 80 00 00 00 	movl	$0x80, %ecx
0000000100009c12	4c 8b 45 f8 	movq	-0x8(%rbp), %r8
0000000100009c16	41 88 40 01 	movb	%al, 0x1(%r8)
0000000100009c1a	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009c1d	e8 4e 00 00 00 	callq	_ft_save
0000000100009c22	b9 1a 00 00 00 	movl	$0x1a, %ecx
0000000100009c27	ba 80 00 00 00 	movl	$0x80, %edx
0000000100009c2c	4c 8b 45 f8 	movq	-0x8(%rbp), %r8
0000000100009c30	41 88 40 02 	movb	%al, 0x2(%r8)
0000000100009c34	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009c37	89 ce 	movl	%ecx, %esi
0000000100009c39	89 55 e4 	movl	%edx, -0x1c(%rbp)
0000000100009c3c	89 ca 	movl	%ecx, %edx
0000000100009c3e	8b 4d e4 	movl	-0x1c(%rbp), %ecx
0000000100009c41	e8 2a 00 00 00 	callq	_ft_save
0000000100009c46	4c 8b 45 f8 	movq	-0x8(%rbp), %r8
0000000100009c4a	41 88 40 03 	movb	%al, 0x3(%r8)
0000000100009c4e	e9 00 00 00 00 	jmp	0x100009c53
0000000100009c53	e9 00 00 00 00 	jmp	0x100009c58
0000000100009c58	e9 00 00 00 00 	jmp	0x100009c5d
0000000100009c5d	48 83 c4 20 	addq	$0x20, %rsp
0000000100009c61	5d 	popq	%rbp
0000000100009c62	c3 	retq
0000000100009c63	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_ft_save:
0000000100009c70	55 	pushq	%rbp
0000000100009c71	48 89 e5 	movq	%rsp, %rbp
0000000100009c74	89 7d fc 	movl	%edi, -0x4(%rbp)
0000000100009c77	89 75 f8 	movl	%esi, -0x8(%rbp)
0000000100009c7a	89 55 f4 	movl	%edx, -0xc(%rbp)
0000000100009c7d	89 4d f0 	movl	%ecx, -0x10(%rbp)
0000000100009c80	8b 4d fc 	movl	-0x4(%rbp), %ecx
0000000100009c83	8b 55 f8 	movl	-0x8(%rbp), %edx
0000000100009c86	89 4d ec 	movl	%ecx, -0x14(%rbp)
0000000100009c89	89 d1 	movl	%edx, %ecx
0000000100009c8b	8b 55 ec 	movl	-0x14(%rbp), %edx
0000000100009c8e	d3 e2 	shll	%cl, %edx
0000000100009c90	8b 4d f4 	movl	-0xc(%rbp), %ecx
0000000100009c93	d3 ea 	shrl	%cl, %edx
0000000100009c95	0b 55 f0 	orl	-0x10(%rbp), %edx
0000000100009c98	89 55 fc 	movl	%edx, -0x4(%rbp)
0000000100009c9b	8b 55 fc 	movl	-0x4(%rbp), %edx
0000000100009c9e	88 d1 	movb	%dl, %cl
0000000100009ca0	0f b6 c1 	movzbl	%cl, %eax
0000000100009ca3	5d 	popq	%rbp
0000000100009ca4	c3 	retq
0000000100009ca5	90 	nop
0000000100009ca6	90 	nop
0000000100009ca7	90 	nop
0000000100009ca8	90 	nop
0000000100009ca9	90 	nop
0000000100009caa	90 	nop
0000000100009cab	90 	nop
0000000100009cac	90 	nop
0000000100009cad	90 	nop
0000000100009cae	90 	nop
0000000100009caf	90 	nop
_ft_watoa:
0000000100009cb0	55 	pushq	%rbp
0000000100009cb1	48 89 e5 	movq	%rsp, %rbp
0000000100009cb4	48 83 ec 20 	subq	$0x20, %rsp
0000000100009cb8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100009cbc	48 c7 45 e0 00 00 00 00 	movq	$0x0, -0x20(%rbp)
0000000100009cc4	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100009ccb	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
0000000100009cd2	c7 45 f0 00 00 00 00 	movl	$0x0, -0x10(%rbp)
0000000100009cd9	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100009cdd	e8 7e 00 00 00 	callq	_size_tab
0000000100009ce2	89 45 f0 	movl	%eax, -0x10(%rbp)
0000000100009ce5	48 63 7d f0 	movslq	-0x10(%rbp), %rdi
0000000100009ce9	e8 02 b1 ff ff 	callq	_ft_strnew
0000000100009cee	48 89 45 e0 	movq	%rax, -0x20(%rbp)
0000000100009cf2	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100009cf9	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100009cfd	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100009d01	83 3c 81 00 	cmpl	$0x0, (%rcx,%rax,4)
0000000100009d05	0f 84 3f 00 00 00 	je	0x100009d4a
0000000100009d0b	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100009d0f	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100009d13	48 63 3c 81 	movslq	(%rcx,%rax,4), %rdi
0000000100009d17	e8 a4 fc ff ff 	callq	_ft_sizebit
0000000100009d1c	89 45 f0 	movl	%eax, -0x10(%rbp)
0000000100009d1f	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
0000000100009d23	48 63 4d ec 	movslq	-0x14(%rbp), %rcx
0000000100009d27	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
0000000100009d2b	8b 34 8a 	movl	(%rdx,%rcx,4), %esi
0000000100009d2e	8b 55 f4 	movl	-0xc(%rbp), %edx
0000000100009d31	8b 4d f0 	movl	-0x10(%rbp), %ecx
0000000100009d34	e8 f7 00 00 00 	callq	_put_in
0000000100009d39	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100009d3c	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100009d3f	83 c0 01 	addl	$0x1, %eax
0000000100009d42	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100009d45	e9 af ff ff ff 	jmp	0x100009cf9
0000000100009d4a	48 8b 45 e0 	movq	-0x20(%rbp), %rax
0000000100009d4e	48 83 c4 20 	addq	$0x20, %rsp
0000000100009d52	5d 	popq	%rbp
0000000100009d53	c3 	retq
0000000100009d54	66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_size_tab:
0000000100009d60	55 	pushq	%rbp
0000000100009d61	48 89 e5 	movq	%rsp, %rbp
0000000100009d64	48 83 ec 20 	subq	$0x20, %rsp
0000000100009d68	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100009d6c	c7 45 ec 00 00 00 00 	movl	$0x0, -0x14(%rbp)
0000000100009d73	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
0000000100009d7a	c7 45 f0 00 00 00 00 	movl	$0x0, -0x10(%rbp)
0000000100009d81	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100009d85	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100009d89	83 3c 81 00 	cmpl	$0x0, (%rcx,%rax,4)
0000000100009d8d	0f 84 8c 00 00 00 	je	0x100009e1f
0000000100009d93	48 63 45 ec 	movslq	-0x14(%rbp), %rax
0000000100009d97	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
0000000100009d9b	48 63 3c 81 	movslq	(%rcx,%rax,4), %rdi
0000000100009d9f	e8 1c fc ff ff 	callq	_ft_sizebit
0000000100009da4	89 45 f0 	movl	%eax, -0x10(%rbp)
0000000100009da7	83 7d f0 07 	cmpl	$0x7, -0x10(%rbp)
0000000100009dab	0f 8f 0e 00 00 00 	jg	0x100009dbf
0000000100009db1	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009db4	83 c0 01 	addl	$0x1, %eax
0000000100009db7	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100009dba	e9 52 00 00 00 	jmp	0x100009e11
0000000100009dbf	83 7d f0 0b 	cmpl	$0xb, -0x10(%rbp)
0000000100009dc3	0f 8f 0e 00 00 00 	jg	0x100009dd7
0000000100009dc9	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009dcc	83 c0 02 	addl	$0x2, %eax
0000000100009dcf	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100009dd2	e9 35 00 00 00 	jmp	0x100009e0c
0000000100009dd7	83 7d f0 10 	cmpl	$0x10, -0x10(%rbp)
0000000100009ddb	0f 8f 0e 00 00 00 	jg	0x100009def
0000000100009de1	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009de4	83 c0 03 	addl	$0x3, %eax
0000000100009de7	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100009dea	e9 18 00 00 00 	jmp	0x100009e07
0000000100009def	83 7d f0 15 	cmpl	$0x15, -0x10(%rbp)
0000000100009df3	0f 8f 09 00 00 00 	jg	0x100009e02
0000000100009df9	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009dfc	83 c0 04 	addl	$0x4, %eax
0000000100009dff	89 45 f4 	movl	%eax, -0xc(%rbp)
0000000100009e02	e9 00 00 00 00 	jmp	0x100009e07
0000000100009e07	e9 00 00 00 00 	jmp	0x100009e0c
0000000100009e0c	e9 00 00 00 00 	jmp	0x100009e11
0000000100009e11	8b 45 ec 	movl	-0x14(%rbp), %eax
0000000100009e14	83 c0 01 	addl	$0x1, %eax
0000000100009e17	89 45 ec 	movl	%eax, -0x14(%rbp)
0000000100009e1a	e9 62 ff ff ff 	jmp	0x100009d81
0000000100009e1f	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009e22	48 83 c4 20 	addq	$0x20, %rsp
0000000100009e26	5d 	popq	%rbp
0000000100009e27	c3 	retq
0000000100009e28	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_put_in:
0000000100009e30	55 	pushq	%rbp
0000000100009e31	48 89 e5 	movq	%rsp, %rbp
0000000100009e34	48 83 ec 20 	subq	$0x20, %rsp
0000000100009e38	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
0000000100009e3c	89 75 f4 	movl	%esi, -0xc(%rbp)
0000000100009e3f	89 55 f0 	movl	%edx, -0x10(%rbp)
0000000100009e42	89 4d ec 	movl	%ecx, -0x14(%rbp)
0000000100009e45	83 7d ec 07 	cmpl	$0x7, -0x14(%rbp)
0000000100009e49	0f 8f 1f 00 00 00 	jg	0x100009e6e
0000000100009e4f	8b 45 f4 	movl	-0xc(%rbp), %eax
0000000100009e52	88 c1 	movb	%al, %cl
0000000100009e54	8b 45 f0 	movl	-0x10(%rbp), %eax
0000000100009e57	89 c2 	movl	%eax, %edx
0000000100009e59	83 c2 01 	addl	$0x1, %edx
0000000100009e5c	89 55 f0 	movl	%edx, -0x10(%rbp)
0000000100009e5f	48 63 f0 	movslq	%eax, %rsi
0000000100009e62	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
0000000100009e66	88 0c 37 	movb	%cl, (%rdi,%rsi)
0000000100009e69	e9 db 01 00 00 	jmp	0x10000a049
0000000100009e6e	83 7d ec 0b 	cmpl	$0xb, -0x14(%rbp)
0000000100009e72	0f 8f 61 00 00 00 	jg	0x100009ed9
0000000100009e78	31 f6 	xorl	%esi, %esi
0000000100009e7a	ba 06 00 00 00 	movl	$0x6, %edx
0000000100009e7f	b9 c0 00 00 00 	movl	$0xc0, %ecx
0000000100009e84	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009e87	e8 d4 01 00 00 	callq	_ft_save
0000000100009e8c	b9 1a 00 00 00 	movl	$0x1a, %ecx
0000000100009e91	ba 80 00 00 00 	movl	$0x80, %edx
0000000100009e96	8b 75 f0 	movl	-0x10(%rbp), %esi
0000000100009e99	89 f7 	movl	%esi, %edi
0000000100009e9b	83 c7 01 	addl	$0x1, %edi
0000000100009e9e	89 7d f0 	movl	%edi, -0x10(%rbp)
0000000100009ea1	4c 63 c6 	movslq	%esi, %r8
0000000100009ea4	4c 8b 4d f8 	movq	-0x8(%rbp), %r9
0000000100009ea8	43 88 04 01 	movb	%al, (%r9,%r8)
0000000100009eac	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009eaf	89 ce 	movl	%ecx, %esi
0000000100009eb1	89 55 e8 	movl	%edx, -0x18(%rbp)
0000000100009eb4	89 ca 	movl	%ecx, %edx
0000000100009eb6	8b 4d e8 	movl	-0x18(%rbp), %ecx
0000000100009eb9	e8 a2 01 00 00 	callq	_ft_save
0000000100009ebe	8b 4d f0 	movl	-0x10(%rbp), %ecx
0000000100009ec1	89 ca 	movl	%ecx, %edx
0000000100009ec3	83 c2 01 	addl	$0x1, %edx
0000000100009ec6	89 55 f0 	movl	%edx, -0x10(%rbp)
0000000100009ec9	4c 63 c1 	movslq	%ecx, %r8
0000000100009ecc	4c 8b 4d f8 	movq	-0x8(%rbp), %r9
0000000100009ed0	43 88 04 01 	movb	%al, (%r9,%r8)
0000000100009ed4	e9 6b 01 00 00 	jmp	0x10000a044
0000000100009ed9	83 7d ec 10 	cmpl	$0x10, -0x14(%rbp)
0000000100009edd	0f 8f 91 00 00 00 	jg	0x100009f74
0000000100009ee3	31 f6 	xorl	%esi, %esi
0000000100009ee5	ba 0c 00 00 00 	movl	$0xc, %edx
0000000100009eea	b9 e0 00 00 00 	movl	$0xe0, %ecx
0000000100009eef	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009ef2	e8 69 01 00 00 	callq	_ft_save
0000000100009ef7	be 14 00 00 00 	movl	$0x14, %esi
0000000100009efc	ba 1a 00 00 00 	movl	$0x1a, %edx
0000000100009f01	b9 80 00 00 00 	movl	$0x80, %ecx
0000000100009f06	8b 7d f0 	movl	-0x10(%rbp), %edi
0000000100009f09	41 89 f8 	movl	%edi, %r8d
0000000100009f0c	41 83 c0 01 	addl	$0x1, %r8d
0000000100009f10	44 89 45 f0 	movl	%r8d, -0x10(%rbp)
0000000100009f14	4c 63 cf 	movslq	%edi, %r9
0000000100009f17	4c 8b 55 f8 	movq	-0x8(%rbp), %r10
0000000100009f1b	43 88 04 0a 	movb	%al, (%r10,%r9)
0000000100009f1f	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009f22	e8 39 01 00 00 	callq	_ft_save
0000000100009f27	b9 1a 00 00 00 	movl	$0x1a, %ecx
0000000100009f2c	ba 80 00 00 00 	movl	$0x80, %edx
0000000100009f31	8b 75 f0 	movl	-0x10(%rbp), %esi
0000000100009f34	89 f7 	movl	%esi, %edi
0000000100009f36	83 c7 01 	addl	$0x1, %edi
0000000100009f39	89 7d f0 	movl	%edi, -0x10(%rbp)
0000000100009f3c	4c 63 ce 	movslq	%esi, %r9
0000000100009f3f	4c 8b 55 f8 	movq	-0x8(%rbp), %r10
0000000100009f43	43 88 04 0a 	movb	%al, (%r10,%r9)
0000000100009f47	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009f4a	89 ce 	movl	%ecx, %esi
0000000100009f4c	89 55 e4 	movl	%edx, -0x1c(%rbp)
0000000100009f4f	89 ca 	movl	%ecx, %edx
0000000100009f51	8b 4d e4 	movl	-0x1c(%rbp), %ecx
0000000100009f54	e8 07 01 00 00 	callq	_ft_save
0000000100009f59	8b 4d f0 	movl	-0x10(%rbp), %ecx
0000000100009f5c	89 ca 	movl	%ecx, %edx
0000000100009f5e	83 c2 01 	addl	$0x1, %edx
0000000100009f61	89 55 f0 	movl	%edx, -0x10(%rbp)
0000000100009f64	4c 63 c9 	movslq	%ecx, %r9
0000000100009f67	4c 8b 55 f8 	movq	-0x8(%rbp), %r10
0000000100009f6b	43 88 04 0a 	movb	%al, (%r10,%r9)
0000000100009f6f	e9 cb 00 00 00 	jmp	0x10000a03f
0000000100009f74	83 7d ec 15 	cmpl	$0x15, -0x14(%rbp)
0000000100009f78	0f 8f bc 00 00 00 	jg	0x10000a03a
0000000100009f7e	31 f6 	xorl	%esi, %esi
0000000100009f80	ba 12 00 00 00 	movl	$0x12, %edx
0000000100009f85	b9 f0 00 00 00 	movl	$0xf0, %ecx
0000000100009f8a	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009f8d	e8 ce 00 00 00 	callq	_ft_save
0000000100009f92	be 0e 00 00 00 	movl	$0xe, %esi
0000000100009f97	ba 1a 00 00 00 	movl	$0x1a, %edx
0000000100009f9c	b9 80 00 00 00 	movl	$0x80, %ecx
0000000100009fa1	8b 7d f0 	movl	-0x10(%rbp), %edi
0000000100009fa4	41 89 f8 	movl	%edi, %r8d
0000000100009fa7	41 83 c0 01 	addl	$0x1, %r8d
0000000100009fab	44 89 45 f0 	movl	%r8d, -0x10(%rbp)
0000000100009faf	4c 63 cf 	movslq	%edi, %r9
0000000100009fb2	4c 8b 55 f8 	movq	-0x8(%rbp), %r10
0000000100009fb6	43 88 04 0a 	movb	%al, (%r10,%r9)
0000000100009fba	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009fbd	e8 9e 00 00 00 	callq	_ft_save
0000000100009fc2	be 14 00 00 00 	movl	$0x14, %esi
0000000100009fc7	ba 1a 00 00 00 	movl	$0x1a, %edx
0000000100009fcc	b9 80 00 00 00 	movl	$0x80, %ecx
0000000100009fd1	8b 7d f0 	movl	-0x10(%rbp), %edi
0000000100009fd4	41 89 f8 	movl	%edi, %r8d
0000000100009fd7	41 83 c0 01 	addl	$0x1, %r8d
0000000100009fdb	44 89 45 f0 	movl	%r8d, -0x10(%rbp)
0000000100009fdf	4c 63 cf 	movslq	%edi, %r9
0000000100009fe2	4c 8b 55 f8 	movq	-0x8(%rbp), %r10
0000000100009fe6	43 88 04 0a 	movb	%al, (%r10,%r9)
0000000100009fea	8b 7d f4 	movl	-0xc(%rbp), %edi
0000000100009fed	e8 6e 00 00 00 	callq	_ft_save
0000000100009ff2	b9 1a 00 00 00 	movl	$0x1a, %ecx
0000000100009ff7	ba 80 00 00 00 	movl	$0x80, %edx
0000000100009ffc	8b 75 f0 	movl	-0x10(%rbp), %esi
0000000100009fff	89 f7 	movl	%esi, %edi
000000010000a001	83 c7 01 	addl	$0x1, %edi
000000010000a004	89 7d f0 	movl	%edi, -0x10(%rbp)
000000010000a007	4c 63 ce 	movslq	%esi, %r9
000000010000a00a	4c 8b 55 f8 	movq	-0x8(%rbp), %r10
000000010000a00e	43 88 04 0a 	movb	%al, (%r10,%r9)
000000010000a012	8b 7d f4 	movl	-0xc(%rbp), %edi
000000010000a015	89 ce 	movl	%ecx, %esi
000000010000a017	89 55 e0 	movl	%edx, -0x20(%rbp)
000000010000a01a	89 ca 	movl	%ecx, %edx
000000010000a01c	8b 4d e0 	movl	-0x20(%rbp), %ecx
000000010000a01f	e8 3c 00 00 00 	callq	_ft_save
000000010000a024	8b 4d f0 	movl	-0x10(%rbp), %ecx
000000010000a027	89 ca 	movl	%ecx, %edx
000000010000a029	83 c2 01 	addl	$0x1, %edx
000000010000a02c	89 55 f0 	movl	%edx, -0x10(%rbp)
000000010000a02f	4c 63 c9 	movslq	%ecx, %r9
000000010000a032	4c 8b 55 f8 	movq	-0x8(%rbp), %r10
000000010000a036	43 88 04 0a 	movb	%al, (%r10,%r9)
000000010000a03a	e9 00 00 00 00 	jmp	0x10000a03f
000000010000a03f	e9 00 00 00 00 	jmp	0x10000a044
000000010000a044	e9 00 00 00 00 	jmp	0x10000a049
000000010000a049	8b 45 f0 	movl	-0x10(%rbp), %eax
000000010000a04c	48 83 c4 20 	addq	$0x20, %rsp
000000010000a050	5d 	popq	%rbp
000000010000a051	c3 	retq
000000010000a052	66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_ft_save:
000000010000a060	55 	pushq	%rbp
000000010000a061	48 89 e5 	movq	%rsp, %rbp
000000010000a064	89 7d fc 	movl	%edi, -0x4(%rbp)
000000010000a067	89 75 f8 	movl	%esi, -0x8(%rbp)
000000010000a06a	89 55 f4 	movl	%edx, -0xc(%rbp)
000000010000a06d	89 4d f0 	movl	%ecx, -0x10(%rbp)
000000010000a070	8b 4d fc 	movl	-0x4(%rbp), %ecx
000000010000a073	8b 55 f8 	movl	-0x8(%rbp), %edx
000000010000a076	89 4d ec 	movl	%ecx, -0x14(%rbp)
000000010000a079	89 d1 	movl	%edx, %ecx
000000010000a07b	8b 55 ec 	movl	-0x14(%rbp), %edx
000000010000a07e	d3 e2 	shll	%cl, %edx
000000010000a080	8b 4d f4 	movl	-0xc(%rbp), %ecx
000000010000a083	d3 ea 	shrl	%cl, %edx
000000010000a085	0b 55 f0 	orl	-0x10(%rbp), %edx
000000010000a088	89 55 fc 	movl	%edx, -0x4(%rbp)
000000010000a08b	8b 55 fc 	movl	-0x4(%rbp), %edx
000000010000a08e	88 d1 	movb	%dl, %cl
000000010000a090	0f b6 c1 	movzbl	%cl, %eax
000000010000a093	5d 	popq	%rbp
000000010000a094	c3 	retq
000000010000a095	90 	nop
000000010000a096	90 	nop
000000010000a097	90 	nop
000000010000a098	90 	nop
000000010000a099	90 	nop
000000010000a09a	90 	nop
000000010000a09b	90 	nop
000000010000a09c	90 	nop
000000010000a09d	90 	nop
000000010000a09e	90 	nop
000000010000a09f	90 	nop
_ft_wstrlen:
000000010000a0a0	55 	pushq	%rbp
000000010000a0a1	48 89 e5 	movq	%rsp, %rbp
000000010000a0a4	48 83 ec 10 	subq	$0x10, %rsp
000000010000a0a8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000a0ac	c7 45 f0 00 00 00 00 	movl	$0x0, -0x10(%rbp)
000000010000a0b3	c7 45 f4 00 00 00 00 	movl	$0x0, -0xc(%rbp)
000000010000a0ba	48 63 45 f0 	movslq	-0x10(%rbp), %rax
000000010000a0be	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000a0c2	83 3c 81 00 	cmpl	$0x0, (%rcx,%rax,4)
000000010000a0c6	0f 84 24 00 00 00 	je	0x10000a0f0
000000010000a0cc	48 63 45 f0 	movslq	-0x10(%rbp), %rax
000000010000a0d0	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000a0d4	8b 3c 81 	movl	(%rcx,%rax,4), %edi
000000010000a0d7	e8 24 f9 ff ff 	callq	_ft_wcharlen
000000010000a0dc	03 45 f4 	addl	-0xc(%rbp), %eax
000000010000a0df	89 45 f4 	movl	%eax, -0xc(%rbp)
000000010000a0e2	8b 45 f0 	movl	-0x10(%rbp), %eax
000000010000a0e5	83 c0 01 	addl	$0x1, %eax
000000010000a0e8	89 45 f0 	movl	%eax, -0x10(%rbp)
000000010000a0eb	e9 ca ff ff ff 	jmp	0x10000a0ba
000000010000a0f0	48 63 45 f4 	movslq	-0xc(%rbp), %rax
000000010000a0f4	48 83 c4 10 	addq	$0x10, %rsp
000000010000a0f8	5d 	popq	%rbp
000000010000a0f9	c3 	retq
000000010000a0fa	90 	nop
000000010000a0fb	90 	nop
000000010000a0fc	90 	nop
000000010000a0fd	90 	nop
000000010000a0fe	90 	nop
000000010000a0ff	90 	nop
_ft_wstrnew:
000000010000a100	55 	pushq	%rbp
000000010000a101	48 89 e5 	movq	%rsp, %rbp
000000010000a104	48 83 ec 20 	subq	$0x20, %rsp
000000010000a108	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000a10c	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000a110	48 c1 e7 02 	shlq	$0x2, %rdi
000000010000a114	48 83 c7 01 	addq	$0x1, %rdi
000000010000a118	e8 63 ac ff ff 	callq	_ft_memalloc
000000010000a11d	48 89 45 e8 	movq	%rax, -0x18(%rbp)
000000010000a121	48 83 f8 00 	cmpq	$0x0, %rax
000000010000a125	0f 85 07 00 00 00 	jne	0x10000a132
000000010000a12b	31 ff 	xorl	%edi, %edi
000000010000a12d	e8 48 42 00 00 	callq	0x10000e37a ## symbol stub for: _exit
000000010000a132	48 83 7d e8 00 	cmpq	$0x0, -0x18(%rbp)
000000010000a137	0f 85 0d 00 00 00 	jne	0x10000a14a
000000010000a13d	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000a145	e9 45 00 00 00 	jmp	0x10000a18f
000000010000a14a	48 c7 45 e0 00 00 00 00 	movq	$0x0, -0x20(%rbp)
000000010000a152	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000a156	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000a15a	48 83 c1 01 	addq	$0x1, %rcx
000000010000a15e	48 39 c8 	cmpq	%rcx, %rax
000000010000a161	0f 83 20 00 00 00 	jae	0x10000a187
000000010000a167	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000a16b	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
000000010000a16f	c7 04 81 00 00 00 00 	movl	$0x0, (%rcx,%rax,4)
000000010000a176	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000a17a	48 83 c0 01 	addq	$0x1, %rax
000000010000a17e	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000a182	e9 cb ff ff ff 	jmp	0x10000a152
000000010000a187	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000a18b	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000a18f	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000a193	48 83 c4 20 	addq	$0x20, %rsp
000000010000a197	5d 	popq	%rbp
000000010000a198	c3 	retq
000000010000a199	90 	nop
000000010000a19a	90 	nop
000000010000a19b	90 	nop
000000010000a19c	90 	nop
000000010000a19d	90 	nop
000000010000a19e	90 	nop
000000010000a19f	90 	nop
_ft_wstrsub:
000000010000a1a0	55 	pushq	%rbp
000000010000a1a1	48 89 e5 	movq	%rsp, %rbp
000000010000a1a4	48 83 ec 40 	subq	$0x40, %rsp
000000010000a1a8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000a1ac	89 75 ec 	movl	%esi, -0x14(%rbp)
000000010000a1af	48 89 55 e0 	movq	%rdx, -0x20(%rbp)
000000010000a1b3	48 c7 45 c8 00 00 00 00 	movq	$0x0, -0x38(%rbp)
000000010000a1bb	48 c7 45 d0 00 00 00 00 	movq	$0x0, -0x30(%rbp)
000000010000a1c3	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
000000010000a1c8	0f 85 0d 00 00 00 	jne	0x10000a1db
000000010000a1ce	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000a1d6	e9 21 01 00 00 	jmp	0x10000a2fc
000000010000a1db	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000a1de	89 c1 	movl	%eax, %ecx
000000010000a1e0	48 c1 e1 02 	shlq	$0x2, %rcx
000000010000a1e4	48 03 4d f0 	addq	-0x10(%rbp), %rcx
000000010000a1e8	48 89 cf 	movq	%rcx, %rdi
000000010000a1eb	e8 b0 fe ff ff 	callq	_ft_wstrlen
000000010000a1f0	48 3b 45 e0 	cmpq	-0x20(%rbp), %rax
000000010000a1f4	0f 83 0d 00 00 00 	jae	0x10000a207
000000010000a1fa	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000a202	e9 f5 00 00 00 	jmp	0x10000a2fc
000000010000a207	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000a20a	89 c1 	movl	%eax, %ecx
000000010000a20c	48 c1 e1 02 	shlq	$0x2, %rcx
000000010000a210	48 03 4d f0 	addq	-0x10(%rbp), %rcx
000000010000a214	48 8b 75 e0 	movq	-0x20(%rbp), %rsi
000000010000a218	48 89 cf 	movq	%rcx, %rdi
000000010000a21b	e8 f0 00 00 00 	callq	_ft_size_wstr
000000010000a220	48 63 f8 	movslq	%eax, %rdi
000000010000a223	e8 d8 fe ff ff 	callq	_ft_wstrnew
000000010000a228	48 89 45 d8 	movq	%rax, -0x28(%rbp)
000000010000a22c	48 83 7d d8 00 	cmpq	$0x0, -0x28(%rbp)
000000010000a231	0f 85 0d 00 00 00 	jne	0x10000a244
000000010000a237	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000a23f	e9 b8 00 00 00 	jmp	0x10000a2fc
000000010000a244	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000a247	89 c1 	movl	%eax, %ecx
000000010000a249	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000a24d	8b 3c 8a 	movl	(%rdx,%rcx,4), %edi
000000010000a250	e8 ab f7 ff ff 	callq	_ft_wcharlen
000000010000a255	48 63 c8 	movslq	%eax, %rcx
000000010000a258	48 03 4d c8 	addq	-0x38(%rbp), %rcx
000000010000a25c	48 89 4d c8 	movq	%rcx, -0x38(%rbp)
000000010000a260	31 c0 	xorl	%eax, %eax
000000010000a262	88 c1 	movb	%al, %cl
000000010000a264	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000a267	89 c2 	movl	%eax, %edx
000000010000a269	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000a26d	83 3c 96 00 	cmpl	$0x0, (%rsi,%rdx,4)
000000010000a271	88 4d c7 	movb	%cl, -0x39(%rbp)
000000010000a274	0f 84 0e 00 00 00 	je	0x10000a288
000000010000a27a	48 8b 45 c8 	movq	-0x38(%rbp), %rax
000000010000a27e	48 3b 45 e0 	cmpq	-0x20(%rbp), %rax
000000010000a282	0f 96 c1 	setbe	%cl
000000010000a285	88 4d c7 	movb	%cl, -0x39(%rbp)
000000010000a288	8a 45 c7 	movb	-0x39(%rbp), %al
000000010000a28b	a8 01 	testb	$0x1, %al
000000010000a28d	0f 85 05 00 00 00 	jne	0x10000a298
000000010000a293	e9 4d 00 00 00 	jmp	0x10000a2e5
000000010000a298	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000a29b	89 c1 	movl	%eax, %ecx
000000010000a29d	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000a2a1	8b 04 8a 	movl	(%rdx,%rcx,4), %eax
000000010000a2a4	48 8b 4d d0 	movq	-0x30(%rbp), %rcx
000000010000a2a8	48 8b 55 d8 	movq	-0x28(%rbp), %rdx
000000010000a2ac	89 04 8a 	movl	%eax, (%rdx,%rcx,4)
000000010000a2af	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000a2b2	83 c0 01 	addl	$0x1, %eax
000000010000a2b5	89 45 ec 	movl	%eax, -0x14(%rbp)
000000010000a2b8	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000a2bb	89 c1 	movl	%eax, %ecx
000000010000a2bd	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000a2c1	8b 3c 8a 	movl	(%rdx,%rcx,4), %edi
000000010000a2c4	e8 37 f7 ff ff 	callq	_ft_wcharlen
000000010000a2c9	48 63 c8 	movslq	%eax, %rcx
000000010000a2cc	48 03 4d c8 	addq	-0x38(%rbp), %rcx
000000010000a2d0	48 89 4d c8 	movq	%rcx, -0x38(%rbp)
000000010000a2d4	48 8b 4d d0 	movq	-0x30(%rbp), %rcx
000000010000a2d8	48 83 c1 01 	addq	$0x1, %rcx
000000010000a2dc	48 89 4d d0 	movq	%rcx, -0x30(%rbp)
000000010000a2e0	e9 7b ff ff ff 	jmp	0x10000a260
000000010000a2e5	48 8b 45 d0 	movq	-0x30(%rbp), %rax
000000010000a2e9	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
000000010000a2ed	c7 04 81 00 00 00 00 	movl	$0x0, (%rcx,%rax,4)
000000010000a2f4	48 8b 45 d8 	movq	-0x28(%rbp), %rax
000000010000a2f8	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000a2fc	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000a300	48 83 c4 40 	addq	$0x40, %rsp
000000010000a304	5d 	popq	%rbp
000000010000a305	c3 	retq
000000010000a306	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_ft_size_wstr:
000000010000a310	55 	pushq	%rbp
000000010000a311	48 89 e5 	movq	%rsp, %rbp
000000010000a314	48 83 ec 30 	subq	$0x30, %rsp
000000010000a318	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000a31c	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
000000010000a320	48 c7 45 d8 00 00 00 00 	movq	$0x0, -0x28(%rbp)
000000010000a328	48 c7 45 e0 00 00 00 00 	movq	$0x0, -0x20(%rbp)
000000010000a330	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000a334	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000a338	83 3c 81 00 	cmpl	$0x0, (%rcx,%rax,4)
000000010000a33c	0f 84 48 00 00 00 	je	0x10000a38a
000000010000a342	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000a346	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000a34a	8b 3c 81 	movl	(%rcx,%rax,4), %edi
000000010000a34d	e8 ae f6 ff ff 	callq	_ft_wcharlen
000000010000a352	48 63 c8 	movslq	%eax, %rcx
000000010000a355	48 03 4d d8 	addq	-0x28(%rbp), %rcx
000000010000a359	48 89 4d d8 	movq	%rcx, -0x28(%rbp)
000000010000a35d	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
000000010000a361	48 3b 4d e8 	cmpq	-0x18(%rbp), %rcx
000000010000a365	0f 86 0e 00 00 00 	jbe	0x10000a379
000000010000a36b	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000a36f	89 c1 	movl	%eax, %ecx
000000010000a371	89 4d fc 	movl	%ecx, -0x4(%rbp)
000000010000a374	e9 1a 00 00 00 	jmp	0x10000a393
000000010000a379	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000a37d	48 83 c0 01 	addq	$0x1, %rax
000000010000a381	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000a385	e9 a6 ff ff ff 	jmp	0x10000a330
000000010000a38a	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000a38e	89 c1 	movl	%eax, %ecx
000000010000a390	89 4d fc 	movl	%ecx, -0x4(%rbp)
000000010000a393	8b 45 fc 	movl	-0x4(%rbp), %eax
000000010000a396	48 83 c4 30 	addq	$0x30, %rsp
000000010000a39a	5d 	popq	%rbp
000000010000a39b	c3 	retq
000000010000a39c	90 	nop
000000010000a39d	90 	nop
000000010000a39e	90 	nop
000000010000a39f	90 	nop
_ft_strjoinfree:
000000010000a3a0	55 	pushq	%rbp
000000010000a3a1	48 89 e5 	movq	%rsp, %rbp
000000010000a3a4	48 83 ec 30 	subq	$0x30, %rsp
000000010000a3a8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000a3ac	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
000000010000a3b0	c7 45 d8 00 00 00 00 	movl	$0x0, -0x28(%rbp)
000000010000a3b7	c7 45 dc 00 00 00 00 	movl	$0x0, -0x24(%rbp)
000000010000a3be	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000a3c2	e8 b9 a7 ff ff 	callq	_ft_strlen
000000010000a3c7	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
000000010000a3cb	48 89 45 d0 	movq	%rax, -0x30(%rbp)
000000010000a3cf	e8 ac a7 ff ff 	callq	_ft_strlen
000000010000a3d4	48 8b 75 d0 	movq	-0x30(%rbp), %rsi
000000010000a3d8	48 01 c6 	addq	%rax, %rsi
000000010000a3db	48 89 f7 	movq	%rsi, %rdi
000000010000a3de	e8 0d aa ff ff 	callq	_ft_strnew
000000010000a3e3	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000a3e7	48 83 7d e0 00 	cmpq	$0x0, -0x20(%rbp)
000000010000a3ec	0f 85 0d 00 00 00 	jne	0x10000a3ff
000000010000a3f2	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000a3fa	e9 bc 00 00 00 	jmp	0x10000a4bb
000000010000a3ff	e9 00 00 00 00 	jmp	0x10000a404
000000010000a404	48 63 45 dc 	movslq	-0x24(%rbp), %rax
000000010000a408	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000a40c	80 3c 01 00 	cmpb	$0x0, (%rcx,%rax)
000000010000a410	0f 84 24 00 00 00 	je	0x10000a43a
000000010000a416	48 63 45 dc 	movslq	-0x24(%rbp), %rax
000000010000a41a	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000a41e	8a 14 01 	movb	(%rcx,%rax), %dl
000000010000a421	48 63 45 dc 	movslq	-0x24(%rbp), %rax
000000010000a425	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
000000010000a429	88 14 01 	movb	%dl, (%rcx,%rax)
000000010000a42c	8b 75 dc 	movl	-0x24(%rbp), %esi
000000010000a42f	83 c6 01 	addl	$0x1, %esi
000000010000a432	89 75 dc 	movl	%esi, -0x24(%rbp)
000000010000a435	e9 ca ff ff ff 	jmp	0x10000a404
000000010000a43a	e9 00 00 00 00 	jmp	0x10000a43f
000000010000a43f	48 63 45 d8 	movslq	-0x28(%rbp), %rax
000000010000a443	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
000000010000a447	80 3c 01 00 	cmpb	$0x0, (%rcx,%rax)
000000010000a44b	0f 84 29 00 00 00 	je	0x10000a47a
000000010000a451	48 63 45 d8 	movslq	-0x28(%rbp), %rax
000000010000a455	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
000000010000a459	8a 14 01 	movb	(%rcx,%rax), %dl
000000010000a45c	8b 75 dc 	movl	-0x24(%rbp), %esi
000000010000a45f	03 75 d8 	addl	-0x28(%rbp), %esi
000000010000a462	48 63 c6 	movslq	%esi, %rax
000000010000a465	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
000000010000a469	88 14 01 	movb	%dl, (%rcx,%rax)
000000010000a46c	8b 75 d8 	movl	-0x28(%rbp), %esi
000000010000a46f	83 c6 01 	addl	$0x1, %esi
000000010000a472	89 75 d8 	movl	%esi, -0x28(%rbp)
000000010000a475	e9 c5 ff ff ff 	jmp	0x10000a43f
000000010000a47a	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
000000010000a47f	0f 84 09 00 00 00 	je	0x10000a48e
000000010000a485	48 8d 7d f0 	leaq	-0x10(%rbp), %rdi
000000010000a489	e8 e2 a9 ff ff 	callq	_ft_strdel
000000010000a48e	48 83 7d e8 00 	cmpq	$0x0, -0x18(%rbp)
000000010000a493	0f 84 09 00 00 00 	je	0x10000a4a2
000000010000a499	48 8d 7d e8 	leaq	-0x18(%rbp), %rdi
000000010000a49d	e8 ce a9 ff ff 	callq	_ft_strdel
000000010000a4a2	8b 45 dc 	movl	-0x24(%rbp), %eax
000000010000a4a5	03 45 d8 	addl	-0x28(%rbp), %eax
000000010000a4a8	48 63 c8 	movslq	%eax, %rcx
000000010000a4ab	48 8b 55 e0 	movq	-0x20(%rbp), %rdx
000000010000a4af	c6 04 0a 00 	movb	$0x0, (%rdx,%rcx)
000000010000a4b3	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
000000010000a4b7	48 89 4d f8 	movq	%rcx, -0x8(%rbp)
000000010000a4bb	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000a4bf	48 83 c4 30 	addq	$0x30, %rsp
000000010000a4c3	5d 	popq	%rbp
000000010000a4c4	c3 	retq
000000010000a4c5	66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_ft_memjoinfree:
000000010000a4d0	55 	pushq	%rbp
000000010000a4d1	48 89 e5 	movq	%rsp, %rbp
000000010000a4d4	48 83 ec 40 	subq	$0x40, %rsp
000000010000a4d8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000a4dc	48 89 75 e8 	movq	%rsi, -0x18(%rbp)
000000010000a4e0	89 55 e4 	movl	%edx, -0x1c(%rbp)
000000010000a4e3	c7 45 d0 00 00 00 00 	movl	$0x0, -0x30(%rbp)
000000010000a4ea	c7 45 d4 00 00 00 00 	movl	$0x0, -0x2c(%rbp)
000000010000a4f1	48 63 75 e4 	movslq	-0x1c(%rbp), %rsi
000000010000a4f5	48 8b 7d e8 	movq	-0x18(%rbp), %rdi
000000010000a4f9	48 89 75 c8 	movq	%rsi, -0x38(%rbp)
000000010000a4fd	e8 7e a6 ff ff 	callq	_ft_strlen
000000010000a502	48 8b 75 c8 	movq	-0x38(%rbp), %rsi
000000010000a506	48 01 c6 	addq	%rax, %rsi
000000010000a509	48 89 f7 	movq	%rsi, %rdi
000000010000a50c	e8 df a8 ff ff 	callq	_ft_strnew
000000010000a511	48 89 45 d8 	movq	%rax, -0x28(%rbp)
000000010000a515	48 83 7d d8 00 	cmpq	$0x0, -0x28(%rbp)
000000010000a51a	0f 85 0d 00 00 00 	jne	0x10000a52d
000000010000a520	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000a528	e9 b6 00 00 00 	jmp	0x10000a5e3
000000010000a52d	e9 00 00 00 00 	jmp	0x10000a532
000000010000a532	8b 45 d4 	movl	-0x2c(%rbp), %eax
000000010000a535	3b 45 e4 	cmpl	-0x1c(%rbp), %eax
000000010000a538	0f 8d 24 00 00 00 	jge	0x10000a562
000000010000a53e	48 63 45 d4 	movslq	-0x2c(%rbp), %rax
000000010000a542	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000a546	8a 14 01 	movb	(%rcx,%rax), %dl
000000010000a549	48 63 45 d4 	movslq	-0x2c(%rbp), %rax
000000010000a54d	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
000000010000a551	88 14 01 	movb	%dl, (%rcx,%rax)
000000010000a554	8b 75 d4 	movl	-0x2c(%rbp), %esi
000000010000a557	83 c6 01 	addl	$0x1, %esi
000000010000a55a	89 75 d4 	movl	%esi, -0x2c(%rbp)
000000010000a55d	e9 d0 ff ff ff 	jmp	0x10000a532
000000010000a562	e9 00 00 00 00 	jmp	0x10000a567
000000010000a567	48 63 45 d0 	movslq	-0x30(%rbp), %rax
000000010000a56b	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
000000010000a56f	80 3c 01 00 	cmpb	$0x0, (%rcx,%rax)
000000010000a573	0f 84 29 00 00 00 	je	0x10000a5a2
000000010000a579	48 63 45 d0 	movslq	-0x30(%rbp), %rax
000000010000a57d	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
000000010000a581	8a 14 01 	movb	(%rcx,%rax), %dl
000000010000a584	8b 75 d4 	movl	-0x2c(%rbp), %esi
000000010000a587	03 75 d0 	addl	-0x30(%rbp), %esi
000000010000a58a	48 63 c6 	movslq	%esi, %rax
000000010000a58d	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
000000010000a591	88 14 01 	movb	%dl, (%rcx,%rax)
000000010000a594	8b 75 d0 	movl	-0x30(%rbp), %esi
000000010000a597	83 c6 01 	addl	$0x1, %esi
000000010000a59a	89 75 d0 	movl	%esi, -0x30(%rbp)
000000010000a59d	e9 c5 ff ff ff 	jmp	0x10000a567
000000010000a5a2	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
000000010000a5a7	0f 84 09 00 00 00 	je	0x10000a5b6
000000010000a5ad	48 8d 7d f0 	leaq	-0x10(%rbp), %rdi
000000010000a5b1	e8 ba a8 ff ff 	callq	_ft_strdel
000000010000a5b6	48 83 7d e8 00 	cmpq	$0x0, -0x18(%rbp)
000000010000a5bb	0f 84 09 00 00 00 	je	0x10000a5ca
000000010000a5c1	48 8d 7d e8 	leaq	-0x18(%rbp), %rdi
000000010000a5c5	e8 a6 a8 ff ff 	callq	_ft_strdel
000000010000a5ca	8b 45 d4 	movl	-0x2c(%rbp), %eax
000000010000a5cd	03 45 d0 	addl	-0x30(%rbp), %eax
000000010000a5d0	48 63 c8 	movslq	%eax, %rcx
000000010000a5d3	48 8b 55 d8 	movq	-0x28(%rbp), %rdx
000000010000a5d7	c6 04 0a 00 	movb	$0x0, (%rdx,%rcx)
000000010000a5db	48 8b 4d d8 	movq	-0x28(%rbp), %rcx
000000010000a5df	48 89 4d f8 	movq	%rcx, -0x8(%rbp)
000000010000a5e3	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000a5e7	48 83 c4 40 	addq	$0x40, %rsp
000000010000a5eb	5d 	popq	%rbp
000000010000a5ec	c3 	retq
000000010000a5ed	90 	nop
000000010000a5ee	90 	nop
000000010000a5ef	90 	nop
_ft_dotoa:
000000010000a5f0	55 	pushq	%rbp
000000010000a5f1	48 89 e5 	movq	%rsp, %rbp
000000010000a5f4	48 83 ec 50 	subq	$0x50, %rsp
000000010000a5f8	f2 0f 11 45 f0 	movsd	%xmm0, -0x10(%rbp)
000000010000a5fd	89 7d ec 	movl	%edi, -0x14(%rbp)
000000010000a600	f2 48 0f 2c 7d f0 	cvttsd2si	-0x10(%rbp), %rdi
000000010000a606	e8 e5 aa ff ff 	callq	_ft_itoa
000000010000a60b	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000a60f	f2 48 0f 2c 45 f0 	cvttsd2si	-0x10(%rbp), %rax
000000010000a615	f2 48 0f 2a c0 	cvtsi2sdq	%rax, %xmm0
000000010000a61a	f2 0f 10 4d f0 	movsd	-0x10(%rbp), %xmm1
000000010000a61f	f2 0f 5c c8 	subsd	%xmm0, %xmm1
000000010000a623	f2 0f 11 4d f0 	movsd	%xmm1, -0x10(%rbp)
000000010000a628	83 7d ec 00 	cmpl	$0x0, -0x14(%rbp)
000000010000a62c	0f 84 18 00 00 00 	je	0x10000a64a
000000010000a632	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000a635	f2 0f 10 4d f0 	movsd	-0x10(%rbp), %xmm1
000000010000a63a	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
000000010000a63e	0f 85 20 00 00 00 	jne	0x10000a664
000000010000a644	0f 8a 1a 00 00 00 	jp	0x10000a664
000000010000a64a	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
000000010000a64e	8b 75 ec 	movl	-0x14(%rbp), %esi
000000010000a651	f2 0f 10 45 f0 	movsd	-0x10(%rbp), %xmm0
000000010000a656	e8 95 01 00 00 	callq	_ft_cases_dotoa
000000010000a65b	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000a65f	e9 7d 01 00 00 	jmp	0x10000a7e1
000000010000a664	48 8d 3d a2 43 00 00 	leaq	0x43a2(%rip), %rdi ## literal pool for: "."
000000010000a66b	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000a66f	48 89 45 d0 	movq	%rax, -0x30(%rbp)
000000010000a673	e8 48 a5 ff ff 	callq	_ft_strdup
000000010000a678	48 8b 7d d0 	movq	-0x30(%rbp), %rdi
000000010000a67c	48 89 c6 	movq	%rax, %rsi
000000010000a67f	e8 1c fd ff ff 	callq	_ft_strjoinfree
000000010000a684	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000a688	c7 45 dc 00 00 00 00 	movl	$0x0, -0x24(%rbp)
000000010000a68f	c7 45 d8 00 00 00 00 	movl	$0x0, -0x28(%rbp)
000000010000a696	8b 45 dc 	movl	-0x24(%rbp), %eax
000000010000a699	89 c1 	movl	%eax, %ecx
000000010000a69b	83 c1 01 	addl	$0x1, %ecx
000000010000a69e	89 4d dc 	movl	%ecx, -0x24(%rbp)
000000010000a6a1	8b 4d ec 	movl	-0x14(%rbp), %ecx
000000010000a6a4	83 c1 01 	addl	$0x1, %ecx
000000010000a6a7	39 c8 	cmpl	%ecx, %eax
000000010000a6a9	0f 8d 56 00 00 00 	jge	0x10000a705
000000010000a6af	f2 0f 10 05 19 4a 00 00 	movsd	0x4a19(%rip), %xmm0
000000010000a6b7	f2 0f 10 0d 69 4a 00 00 	movsd	0x4a69(%rip), %xmm1
000000010000a6bf	f2 0f 59 4d f0 	mulsd	-0x10(%rbp), %xmm1
000000010000a6c4	f2 0f 11 4d f0 	movsd	%xmm1, -0x10(%rbp)
000000010000a6c9	66 0f 2e 45 f0 	ucomisd	-0x10(%rbp), %xmm0
000000010000a6ce	0f 86 2c 00 00 00 	jbe	0x10000a700
000000010000a6d4	f2 0f 10 05 44 4a 00 00 	movsd	0x4a44(%rip), %xmm0
000000010000a6dc	f2 0f 10 4d f0 	movsd	-0x10(%rbp), %xmm1
000000010000a6e1	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
000000010000a6e5	0f 86 15 00 00 00 	jbe	0x10000a700
000000010000a6eb	8b 45 dc 	movl	-0x24(%rbp), %eax
000000010000a6ee	3b 45 ec 	cmpl	-0x14(%rbp), %eax
000000010000a6f1	0f 84 09 00 00 00 	je	0x10000a700
000000010000a6f7	8b 45 d8 	movl	-0x28(%rbp), %eax
000000010000a6fa	83 c0 01 	addl	$0x1, %eax
000000010000a6fd	89 45 d8 	movl	%eax, -0x28(%rbp)
000000010000a700	e9 91 ff ff ff 	jmp	0x10000a696
000000010000a705	83 7d d8 00 	cmpl	$0x0, -0x28(%rbp)
000000010000a709	0f 84 35 00 00 00 	je	0x10000a744
000000010000a70f	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
000000010000a713	48 63 45 d8 	movslq	-0x28(%rbp), %rax
000000010000a717	48 89 7d c8 	movq	%rdi, -0x38(%rbp)
000000010000a71b	48 89 c7 	movq	%rax, %rdi
000000010000a71e	e8 cd a6 ff ff 	callq	_ft_strnew
000000010000a723	be 30 00 00 00 	movl	$0x30, %esi
000000010000a728	48 63 55 d8 	movslq	-0x28(%rbp), %rdx
000000010000a72c	48 89 c7 	movq	%rax, %rdi
000000010000a72f	e8 1c a3 ff ff 	callq	_ft_memset
000000010000a734	48 8b 7d c8 	movq	-0x38(%rbp), %rdi
000000010000a738	48 89 c6 	movq	%rax, %rsi
000000010000a73b	e8 60 fc ff ff 	callq	_ft_strjoinfree
000000010000a740	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000a744	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000a747	66 0f 2e 45 f0 	ucomisd	-0x10(%rbp), %xmm0
000000010000a74c	0f 86 12 00 00 00 	jbe	0x10000a764
000000010000a752	f2 0f 10 05 c6 49 00 00 	movsd	0x49c6(%rip), %xmm0
000000010000a75a	f2 0f 59 45 f0 	mulsd	-0x10(%rbp), %xmm0
000000010000a75f	f2 0f 11 45 f0 	movsd	%xmm0, -0x10(%rbp)
000000010000a764	b8 0a 00 00 00 	movl	$0xa, %eax
000000010000a769	f2 0f 2c 4d f0 	cvttsd2si	-0x10(%rbp), %ecx
000000010000a76e	89 45 c4 	movl	%eax, -0x3c(%rbp)
000000010000a771	89 c8 	movl	%ecx, %eax
000000010000a773	99 	cltd
000000010000a774	8b 4d c4 	movl	-0x3c(%rbp), %ecx
000000010000a777	f7 f9 	idivl	%ecx
000000010000a779	83 fa 04 	cmpl	$0x4, %edx
000000010000a77c	0f 8e 23 00 00 00 	jle	0x10000a7a5
000000010000a782	b8 0a 00 00 00 	movl	$0xa, %eax
000000010000a787	f2 0f 2c 4d f0 	cvttsd2si	-0x10(%rbp), %ecx
000000010000a78c	89 45 c0 	movl	%eax, -0x40(%rbp)
000000010000a78f	89 c8 	movl	%ecx, %eax
000000010000a791	99 	cltd
000000010000a792	8b 4d c0 	movl	-0x40(%rbp), %ecx
000000010000a795	f7 f9 	idivl	%ecx
000000010000a797	f2 0f 2a c2 	cvtsi2sdl	%edx, %xmm0
000000010000a79b	f2 0f 58 45 f0 	addsd	-0x10(%rbp), %xmm0
000000010000a7a0	f2 0f 11 45 f0 	movsd	%xmm0, -0x10(%rbp)
000000010000a7a5	f2 0f 10 05 7b 49 00 00 	movsd	0x497b(%rip), %xmm0
000000010000a7ad	f2 0f 10 4d f0 	movsd	-0x10(%rbp), %xmm1
000000010000a7b2	f2 0f 5e c8 	divsd	%xmm0, %xmm1
000000010000a7b6	f2 0f 11 4d f0 	movsd	%xmm1, -0x10(%rbp)
000000010000a7bb	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
000000010000a7bf	f2 48 0f 2c 45 f0 	cvttsd2si	-0x10(%rbp), %rax
000000010000a7c5	48 89 7d b8 	movq	%rdi, -0x48(%rbp)
000000010000a7c9	48 89 c7 	movq	%rax, %rdi
000000010000a7cc	e8 1f a9 ff ff 	callq	_ft_itoa
000000010000a7d1	48 8b 7d b8 	movq	-0x48(%rbp), %rdi
000000010000a7d5	48 89 c6 	movq	%rax, %rsi
000000010000a7d8	e8 c3 fb ff ff 	callq	_ft_strjoinfree
000000010000a7dd	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000a7e1	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000a7e5	48 83 c4 50 	addq	$0x50, %rsp
000000010000a7e9	5d 	popq	%rbp
000000010000a7ea	c3 	retq
000000010000a7eb	0f 1f 44 00 00 	nopl	(%rax,%rax)
_ft_cases_dotoa:
000000010000a7f0	55 	pushq	%rbp
000000010000a7f1	48 89 e5 	movq	%rsp, %rbp
000000010000a7f4	48 83 ec 30 	subq	$0x30, %rsp
000000010000a7f8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000a7fc	89 75 ec 	movl	%esi, -0x14(%rbp)
000000010000a7ff	f2 0f 11 45 e0 	movsd	%xmm0, -0x20(%rbp)
000000010000a804	83 7d ec 00 	cmpl	$0x0, -0x14(%rbp)
000000010000a808	0f 85 0d 00 00 00 	jne	0x10000a81b
000000010000a80e	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000a812	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000a816	e9 49 00 00 00 	jmp	0x10000a864
000000010000a81b	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000a81e	f2 0f 10 4d e0 	movsd	-0x20(%rbp), %xmm1
000000010000a823	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
000000010000a827	0f 85 2f 00 00 00 	jne	0x10000a85c
000000010000a82d	0f 8a 29 00 00 00 	jp	0x10000a85c
000000010000a833	48 8d 3d d5 41 00 00 	leaq	0x41d5(%rip), %rdi ## literal pool for: ".0000000"
000000010000a83a	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000a83e	48 89 45 d8 	movq	%rax, -0x28(%rbp)
000000010000a842	e8 79 a3 ff ff 	callq	_ft_strdup
000000010000a847	48 8b 7d d8 	movq	-0x28(%rbp), %rdi
000000010000a84b	48 89 c6 	movq	%rax, %rsi
000000010000a84e	e8 4d fb ff ff 	callq	_ft_strjoinfree
000000010000a853	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000a857	e9 08 00 00 00 	jmp	0x10000a864
000000010000a85c	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000a864	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000a868	48 83 c4 30 	addq	$0x30, %rsp
000000010000a86c	5d 	popq	%rbp
000000010000a86d	c3 	retq
000000010000a86e	90 	nop
000000010000a86f	90 	nop
_btree_create_leaf:
000000010000a870	55 	pushq	%rbp
000000010000a871	48 89 e5 	movq	%rsp, %rbp
000000010000a874	48 83 ec 20 	subq	$0x20, %rsp
000000010000a878	b8 18 00 00 00 	movl	$0x18, %eax
000000010000a87d	89 c1 	movl	%eax, %ecx
000000010000a87f	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000a883	48 c7 45 e8 00 00 00 00 	movq	$0x0, -0x18(%rbp)
000000010000a88b	48 89 cf 	movq	%rcx, %rdi
000000010000a88e	e8 ed a4 ff ff 	callq	_ft_memalloc
000000010000a893	48 89 45 e8 	movq	%rax, -0x18(%rbp)
000000010000a897	48 83 f8 00 	cmpq	$0x0, %rax
000000010000a89b	0f 85 0d 00 00 00 	jne	0x10000a8ae
000000010000a8a1	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000a8a9	e9 2b 00 00 00 	jmp	0x10000a8d9
000000010000a8ae	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000a8b2	48 c7 00 00 00 00 00 	movq	$0x0, (%rax)
000000010000a8b9	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000a8bd	48 c7 40 08 00 00 00 00 	movq	$0x0, 0x8(%rax)
000000010000a8c5	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000a8c9	48 8b 4d e8 	movq	-0x18(%rbp), %rcx
000000010000a8cd	48 89 41 10 	movq	%rax, 0x10(%rcx)
000000010000a8d1	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000a8d5	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000a8d9	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000a8dd	48 83 c4 20 	addq	$0x20, %rsp
000000010000a8e1	5d 	popq	%rbp
000000010000a8e2	c3 	retq
000000010000a8e3	90 	nop
000000010000a8e4	90 	nop
000000010000a8e5	90 	nop
000000010000a8e6	90 	nop
000000010000a8e7	90 	nop
000000010000a8e8	90 	nop
000000010000a8e9	90 	nop
000000010000a8ea	90 	nop
000000010000a8eb	90 	nop
000000010000a8ec	90 	nop
000000010000a8ed	90 	nop
000000010000a8ee	90 	nop
000000010000a8ef	90 	nop
_btree_child_left:
000000010000a8f0	55 	pushq	%rbp
000000010000a8f1	48 89 e5 	movq	%rsp, %rbp
000000010000a8f4	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000a8f8	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
000000010000a8fd	0f 84 10 00 00 00 	je	0x10000a913
000000010000a903	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000a907	48 8b 00 	movq	(%rax), %rax
000000010000a90a	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000a90e	e9 08 00 00 00 	jmp	0x10000a91b
000000010000a913	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000a91b	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000a91f	5d 	popq	%rbp
000000010000a920	c3 	retq
000000010000a921	90 	nop
000000010000a922	90 	nop
000000010000a923	90 	nop
000000010000a924	90 	nop
000000010000a925	90 	nop
000000010000a926	90 	nop
000000010000a927	90 	nop
000000010000a928	90 	nop
000000010000a929	90 	nop
000000010000a92a	90 	nop
000000010000a92b	90 	nop
000000010000a92c	90 	nop
000000010000a92d	90 	nop
000000010000a92e	90 	nop
000000010000a92f	90 	nop
_btree_child_right:
000000010000a930	55 	pushq	%rbp
000000010000a931	48 89 e5 	movq	%rsp, %rbp
000000010000a934	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000a938	48 83 7d f0 00 	cmpq	$0x0, -0x10(%rbp)
000000010000a93d	0f 84 11 00 00 00 	je	0x10000a954
000000010000a943	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000a947	48 8b 40 08 	movq	0x8(%rax), %rax
000000010000a94b	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000a94f	e9 08 00 00 00 	jmp	0x10000a95c
000000010000a954	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000a95c	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000a960	5d 	popq	%rbp
000000010000a961	c3 	retq
000000010000a962	90 	nop
000000010000a963	90 	nop
000000010000a964	90 	nop
000000010000a965	90 	nop
000000010000a966	90 	nop
000000010000a967	90 	nop
000000010000a968	90 	nop
000000010000a969	90 	nop
000000010000a96a	90 	nop
000000010000a96b	90 	nop
000000010000a96c	90 	nop
000000010000a96d	90 	nop
000000010000a96e	90 	nop
000000010000a96f	90 	nop
_btree_apply_free:
000000010000a970	55 	pushq	%rbp
000000010000a971	48 89 e5 	movq	%rsp, %rbp
000000010000a974	48 83 ec 10 	subq	$0x10, %rsp
000000010000a978	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000a97c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
000000010000a980	48 83 7d f8 00 	cmpq	$0x0, -0x8(%rbp)
000000010000a985	0f 85 05 00 00 00 	jne	0x10000a990
000000010000a98b	e9 6a 00 00 00 	jmp	0x10000a9fa
000000010000a990	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000a994	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000a998	48 8b 79 10 	movq	0x10(%rcx), %rdi
000000010000a99c	ff d0 	callq	*%rax
000000010000a99e	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000a9a2	e8 49 ff ff ff 	callq	_btree_child_left
000000010000a9a7	48 83 f8 00 	cmpq	$0x0, %rax
000000010000a9ab	0f 84 15 00 00 00 	je	0x10000a9c6
000000010000a9b1	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000a9b5	e8 36 ff ff ff 	callq	_btree_child_left
000000010000a9ba	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000a9be	48 89 c7 	movq	%rax, %rdi
000000010000a9c1	e8 aa ff ff ff 	callq	_btree_apply_free
000000010000a9c6	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000a9ca	e8 61 ff ff ff 	callq	_btree_child_right
000000010000a9cf	48 83 f8 00 	cmpq	$0x0, %rax
000000010000a9d3	0f 84 15 00 00 00 	je	0x10000a9ee
000000010000a9d9	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000a9dd	e8 4e ff ff ff 	callq	_btree_child_right
000000010000a9e2	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000a9e6	48 89 c7 	movq	%rax, %rdi
000000010000a9e9	e8 82 ff ff ff 	callq	_btree_apply_free
000000010000a9ee	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000a9f2	48 89 c7 	movq	%rax, %rdi
000000010000a9f5	e8 8c 39 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000a9fa	48 83 c4 10 	addq	$0x10, %rsp
000000010000a9fe	5d 	popq	%rbp
000000010000a9ff	c3 	retq
_btree_finsert_infix_data:
000000010000aa00	55 	pushq	%rbp
000000010000aa01	48 89 e5 	movq	%rsp, %rbp
000000010000aa04	48 83 ec 20 	subq	$0x20, %rsp
000000010000aa08	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000aa0c	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
000000010000aa10	48 89 55 e8 	movq	%rdx, -0x18(%rbp)
000000010000aa14	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
000000010000aa18	48 83 3a 00 	cmpq	$0x0, (%rdx)
000000010000aa1c	0f 85 15 00 00 00 	jne	0x10000aa37
000000010000aa22	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000aa26	e8 45 fe ff ff 	callq	_btree_create_leaf
000000010000aa2b	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000aa2f	48 89 07 	movq	%rax, (%rdi)
000000010000aa32	e9 55 00 00 00 	jmp	0x10000aa8c
000000010000aa37	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000aa3b	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000aa3f	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000aa43	48 8b 09 	movq	(%rcx), %rcx
000000010000aa46	48 8b 71 10 	movq	0x10(%rcx), %rsi
000000010000aa4a	ff d0 	callq	*%rax
000000010000aa4c	0f 57 c9 	xorps	%xmm1, %xmm1
000000010000aa4f	0f 2e c8 	ucomiss	%xmm0, %xmm1
000000010000aa52	0f 82 19 00 00 00 	jb	0x10000aa71
000000010000aa58	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000aa5c	48 8b 38 	movq	(%rax), %rdi
000000010000aa5f	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000aa63	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
000000010000aa67	e8 94 ff ff ff 	callq	_btree_finsert_infix_data
000000010000aa6c	e9 1b 00 00 00 	jmp	0x10000aa8c
000000010000aa71	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000aa75	48 8b 00 	movq	(%rax), %rax
000000010000aa78	48 83 c0 08 	addq	$0x8, %rax
000000010000aa7c	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000aa80	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
000000010000aa84	48 89 c7 	movq	%rax, %rdi
000000010000aa87	e8 74 ff ff ff 	callq	_btree_finsert_infix_data
000000010000aa8c	48 83 c4 20 	addq	$0x20, %rsp
000000010000aa90	5d 	popq	%rbp
000000010000aa91	c3 	retq
000000010000aa92	90 	nop
000000010000aa93	90 	nop
000000010000aa94	90 	nop
000000010000aa95	90 	nop
000000010000aa96	90 	nop
000000010000aa97	90 	nop
000000010000aa98	90 	nop
000000010000aa99	90 	nop
000000010000aa9a	90 	nop
000000010000aa9b	90 	nop
000000010000aa9c	90 	nop
000000010000aa9d	90 	nop
000000010000aa9e	90 	nop
000000010000aa9f	90 	nop
_btree_env_apply_infix:
000000010000aaa0	55 	pushq	%rbp
000000010000aaa1	48 89 e5 	movq	%rsp, %rbp
000000010000aaa4	48 83 ec 30 	subq	$0x30, %rsp
000000010000aaa8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000aaac	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
000000010000aab0	48 89 55 e8 	movq	%rdx, -0x18(%rbp)
000000010000aab4	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000aab8	e8 33 fe ff ff 	callq	_btree_child_left
000000010000aabd	48 83 f8 00 	cmpq	$0x0, %rax
000000010000aac1	0f 84 24 00 00 00 	je	0x10000aaeb
000000010000aac7	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000aacb	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000aacf	48 89 7d e0 	movq	%rdi, -0x20(%rbp)
000000010000aad3	48 89 c7 	movq	%rax, %rdi
000000010000aad6	e8 15 fe ff ff 	callq	_btree_child_left
000000010000aadb	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
000000010000aadf	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
000000010000aae3	48 89 c6 	movq	%rax, %rsi
000000010000aae6	e8 b5 ff ff ff 	callq	_btree_env_apply_infix
000000010000aaeb	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000aaef	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000aaf3	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000aaf7	48 8b 71 10 	movq	0x10(%rcx), %rsi
000000010000aafb	ff d0 	callq	*%rax
000000010000aafd	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000ab01	e8 2a fe ff ff 	callq	_btree_child_right
000000010000ab06	48 83 f8 00 	cmpq	$0x0, %rax
000000010000ab0a	0f 84 24 00 00 00 	je	0x10000ab34
000000010000ab10	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000ab14	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000ab18	48 89 7d d8 	movq	%rdi, -0x28(%rbp)
000000010000ab1c	48 89 c7 	movq	%rax, %rdi
000000010000ab1f	e8 0c fe ff ff 	callq	_btree_child_right
000000010000ab24	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
000000010000ab28	48 8b 7d d8 	movq	-0x28(%rbp), %rdi
000000010000ab2c	48 89 c6 	movq	%rax, %rsi
000000010000ab2f	e8 6c ff ff ff 	callq	_btree_env_apply_infix
000000010000ab34	48 83 c4 30 	addq	$0x30, %rsp
000000010000ab38	5d 	popq	%rbp
000000010000ab39	c3 	retq
000000010000ab3a	90 	nop
000000010000ab3b	90 	nop
000000010000ab3c	90 	nop
000000010000ab3d	90 	nop
000000010000ab3e	90 	nop
000000010000ab3f	90 	nop
_mlxji_draw_line:
000000010000ab40	55 	pushq	%rbp
000000010000ab41	48 89 e5 	movq	%rsp, %rbp
000000010000ab44	48 83 ec 40 	subq	$0x40, %rsp
000000010000ab48	b8 ff ff ff ff 	movl	$0xffffffff, %eax
000000010000ab4d	b9 01 00 00 00 	movl	$0x1, %ecx
000000010000ab52	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000ab56	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
000000010000ab5a	89 55 ec 	movl	%edx, -0x14(%rbp)
000000010000ab5d	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000ab61	8b 16 	movl	(%rsi), %edx
000000010000ab63	89 55 d0 	movl	%edx, -0x30(%rbp)
000000010000ab66	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000ab6a	8b 56 08 	movl	0x8(%rsi), %edx
000000010000ab6d	89 55 d4 	movl	%edx, -0x2c(%rbp)
000000010000ab70	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000ab74	8b 56 04 	movl	0x4(%rsi), %edx
000000010000ab77	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000ab7b	2b 16 	subl	(%rsi), %edx
000000010000ab7d	89 55 c8 	movl	%edx, -0x38(%rbp)
000000010000ab80	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000ab84	8b 56 0c 	movl	0xc(%rsi), %edx
000000010000ab87	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000ab8b	2b 56 08 	subl	0x8(%rsi), %edx
000000010000ab8e	89 55 cc 	movl	%edx, -0x34(%rbp)
000000010000ab91	83 7d c8 00 	cmpl	$0x0, -0x38(%rbp)
000000010000ab95	89 c2 	movl	%eax, %edx
000000010000ab97	0f 4f d1 	cmovgl	%ecx, %edx
000000010000ab9a	89 55 d8 	movl	%edx, -0x28(%rbp)
000000010000ab9d	83 7d cc 00 	cmpl	$0x0, -0x34(%rbp)
000000010000aba1	0f 4f c1 	cmovgl	%ecx, %eax
000000010000aba4	89 45 dc 	movl	%eax, -0x24(%rbp)
000000010000aba7	8b 7d c8 	movl	-0x38(%rbp), %edi
000000010000abaa	e8 b9 37 00 00 	callq	0x10000e368 ## symbol stub for: _abs
000000010000abaf	89 45 c8 	movl	%eax, -0x38(%rbp)
000000010000abb2	8b 7d cc 	movl	-0x34(%rbp), %edi
000000010000abb5	e8 ae 37 00 00 	callq	0x10000e368 ## symbol stub for: _abs
000000010000abba	89 45 cc 	movl	%eax, -0x34(%rbp)
000000010000abbd	c7 45 e4 00 00 00 00 	movl	$0x0, -0x1c(%rbp)
000000010000abc4	83 7d d0 00 	cmpl	$0x0, -0x30(%rbp)
000000010000abc8	0f 8c 3c 00 00 00 	jl	0x10000ac0a
000000010000abce	8b 45 d0 	movl	-0x30(%rbp), %eax
000000010000abd1	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000abd5	3b 41 10 	cmpl	0x10(%rcx), %eax
000000010000abd8	0f 8f 2c 00 00 00 	jg	0x10000ac0a
000000010000abde	83 7d d4 00 	cmpl	$0x0, -0x2c(%rbp)
000000010000abe2	0f 8c 22 00 00 00 	jl	0x10000ac0a
000000010000abe8	8b 45 d4 	movl	-0x2c(%rbp), %eax
000000010000abeb	48 8b 4d f8 	movq	-0x8(%rbp), %rcx
000000010000abef	3b 41 14 	cmpl	0x14(%rcx), %eax
000000010000abf2	0f 8f 12 00 00 00 	jg	0x10000ac0a
000000010000abf8	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000abfc	8b 75 d0 	movl	-0x30(%rbp), %esi
000000010000abff	8b 55 d4 	movl	-0x2c(%rbp), %edx
000000010000ac02	8b 4d ec 	movl	-0x14(%rbp), %ecx
000000010000ac05	e8 16 03 00 00 	callq	_mlxji_put_pixel
000000010000ac0a	8b 45 c8 	movl	-0x38(%rbp), %eax
000000010000ac0d	3b 45 cc 	cmpl	-0x34(%rbp), %eax
000000010000ac10	0f 8e 15 00 00 00 	jle	0x10000ac2b
000000010000ac16	48 8d 55 c8 	leaq	-0x38(%rbp), %rdx
000000010000ac1a	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000ac1e	8b 75 ec 	movl	-0x14(%rbp), %esi
000000010000ac21	e8 2a 00 00 00 	callq	_dx_dy
000000010000ac26	e9 10 00 00 00 	jmp	0x10000ac3b
000000010000ac2b	48 8d 55 c8 	leaq	-0x38(%rbp), %rdx
000000010000ac2f	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000ac33	8b 75 ec 	movl	-0x14(%rbp), %esi
000000010000ac36	e8 15 01 00 00 	callq	_dy_dx
000000010000ac3b	b8 01 00 00 00 	movl	$0x1, %eax
000000010000ac40	48 83 c4 40 	addq	$0x40, %rsp
000000010000ac44	5d 	popq	%rbp
000000010000ac45	c3 	retq
000000010000ac46	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_dx_dy:
000000010000ac50	55 	pushq	%rbp
000000010000ac51	48 89 e5 	movq	%rsp, %rbp
000000010000ac54	48 83 ec 20 	subq	$0x20, %rsp
000000010000ac58	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000ac5c	89 75 f4 	movl	%esi, -0xc(%rbp)
000000010000ac5f	48 89 55 e8 	movq	%rdx, -0x18(%rbp)
000000010000ac63	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
000000010000ac67	c7 42 18 00 00 00 00 	movl	$0x0, 0x18(%rdx)
000000010000ac6e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ac72	8b 48 1c 	movl	0x1c(%rax), %ecx
000000010000ac75	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ac79	3b 08 	cmpl	(%rax), %ecx
000000010000ac7b	0f 8d c8 00 00 00 	jge	0x10000ad49
000000010000ac81	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ac85	8b 48 10 	movl	0x10(%rax), %ecx
000000010000ac88	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ac8c	03 48 08 	addl	0x8(%rax), %ecx
000000010000ac8f	89 48 08 	movl	%ecx, 0x8(%rax)
000000010000ac92	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ac96	8b 48 04 	movl	0x4(%rax), %ecx
000000010000ac99	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ac9d	03 48 18 	addl	0x18(%rax), %ecx
000000010000aca0	89 48 18 	movl	%ecx, 0x18(%rax)
000000010000aca3	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000aca7	8b 48 18 	movl	0x18(%rax), %ecx
000000010000acaa	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000acae	3b 08 	cmpl	(%rax), %ecx
000000010000acb0	0f 8c 23 00 00 00 	jl	0x10000acd9
000000010000acb6	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000acba	8b 08 	movl	(%rax), %ecx
000000010000acbc	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000acc0	8b 50 18 	movl	0x18(%rax), %edx
000000010000acc3	29 ca 	subl	%ecx, %edx
000000010000acc5	89 50 18 	movl	%edx, 0x18(%rax)
000000010000acc8	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000accc	8b 48 14 	movl	0x14(%rax), %ecx
000000010000accf	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000acd3	03 48 0c 	addl	0xc(%rax), %ecx
000000010000acd6	89 48 0c 	movl	%ecx, 0xc(%rax)
000000010000acd9	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000acdd	83 78 08 00 	cmpl	$0x0, 0x8(%rax)
000000010000ace1	0f 8c 50 00 00 00 	jl	0x10000ad37
000000010000ace7	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000aceb	8b 48 08 	movl	0x8(%rax), %ecx
000000010000acee	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000acf2	3b 48 10 	cmpl	0x10(%rax), %ecx
000000010000acf5	0f 8d 3c 00 00 00 	jge	0x10000ad37
000000010000acfb	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000acff	83 78 0c 00 	cmpl	$0x0, 0xc(%rax)
000000010000ad03	0f 8c 2e 00 00 00 	jl	0x10000ad37
000000010000ad09	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ad0d	8b 48 0c 	movl	0xc(%rax), %ecx
000000010000ad10	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000ad14	3b 48 14 	cmpl	0x14(%rax), %ecx
000000010000ad17	0f 8d 1a 00 00 00 	jge	0x10000ad37
000000010000ad1d	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000ad21	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ad25	8b 70 08 	movl	0x8(%rax), %esi
000000010000ad28	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ad2c	8b 50 0c 	movl	0xc(%rax), %edx
000000010000ad2f	8b 4d f4 	movl	-0xc(%rbp), %ecx
000000010000ad32	e8 e9 01 00 00 	callq	_mlxji_put_pixel
000000010000ad37	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ad3b	8b 48 1c 	movl	0x1c(%rax), %ecx
000000010000ad3e	83 c1 01 	addl	$0x1, %ecx
000000010000ad41	89 48 1c 	movl	%ecx, 0x1c(%rax)
000000010000ad44	e9 25 ff ff ff 	jmp	0x10000ac6e
000000010000ad49	48 83 c4 20 	addq	$0x20, %rsp
000000010000ad4d	5d 	popq	%rbp
000000010000ad4e	c3 	retq
000000010000ad4f	90 	nop
_dy_dx:
000000010000ad50	55 	pushq	%rbp
000000010000ad51	48 89 e5 	movq	%rsp, %rbp
000000010000ad54	48 83 ec 20 	subq	$0x20, %rsp
000000010000ad58	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000ad5c	89 75 f4 	movl	%esi, -0xc(%rbp)
000000010000ad5f	48 89 55 e8 	movq	%rdx, -0x18(%rbp)
000000010000ad63	48 8b 55 e8 	movq	-0x18(%rbp), %rdx
000000010000ad67	c7 42 18 00 00 00 00 	movl	$0x0, 0x18(%rdx)
000000010000ad6e	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ad72	8b 48 1c 	movl	0x1c(%rax), %ecx
000000010000ad75	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ad79	3b 48 04 	cmpl	0x4(%rax), %ecx
000000010000ad7c	0f 8d c9 00 00 00 	jge	0x10000ae4b
000000010000ad82	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ad86	8b 48 14 	movl	0x14(%rax), %ecx
000000010000ad89	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ad8d	03 48 0c 	addl	0xc(%rax), %ecx
000000010000ad90	89 48 0c 	movl	%ecx, 0xc(%rax)
000000010000ad93	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ad97	8b 08 	movl	(%rax), %ecx
000000010000ad99	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ad9d	03 48 18 	addl	0x18(%rax), %ecx
000000010000ada0	89 48 18 	movl	%ecx, 0x18(%rax)
000000010000ada3	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ada7	8b 48 18 	movl	0x18(%rax), %ecx
000000010000adaa	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000adae	3b 48 04 	cmpl	0x4(%rax), %ecx
000000010000adb1	0f 8c 24 00 00 00 	jl	0x10000addb
000000010000adb7	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000adbb	8b 48 04 	movl	0x4(%rax), %ecx
000000010000adbe	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000adc2	8b 50 18 	movl	0x18(%rax), %edx
000000010000adc5	29 ca 	subl	%ecx, %edx
000000010000adc7	89 50 18 	movl	%edx, 0x18(%rax)
000000010000adca	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000adce	8b 48 10 	movl	0x10(%rax), %ecx
000000010000add1	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000add5	03 48 08 	addl	0x8(%rax), %ecx
000000010000add8	89 48 08 	movl	%ecx, 0x8(%rax)
000000010000addb	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000addf	83 78 08 00 	cmpl	$0x0, 0x8(%rax)
000000010000ade3	0f 8c 50 00 00 00 	jl	0x10000ae39
000000010000ade9	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000aded	8b 48 08 	movl	0x8(%rax), %ecx
000000010000adf0	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000adf4	3b 48 10 	cmpl	0x10(%rax), %ecx
000000010000adf7	0f 8d 3c 00 00 00 	jge	0x10000ae39
000000010000adfd	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ae01	83 78 0c 00 	cmpl	$0x0, 0xc(%rax)
000000010000ae05	0f 8c 2e 00 00 00 	jl	0x10000ae39
000000010000ae0b	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ae0f	8b 48 0c 	movl	0xc(%rax), %ecx
000000010000ae12	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000ae16	3b 48 14 	cmpl	0x14(%rax), %ecx
000000010000ae19	0f 8d 1a 00 00 00 	jge	0x10000ae39
000000010000ae1f	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000ae23	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ae27	8b 70 08 	movl	0x8(%rax), %esi
000000010000ae2a	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ae2e	8b 50 0c 	movl	0xc(%rax), %edx
000000010000ae31	8b 4d f4 	movl	-0xc(%rbp), %ecx
000000010000ae34	e8 e7 00 00 00 	callq	_mlxji_put_pixel
000000010000ae39	48 8b 45 e8 	movq	-0x18(%rbp), %rax
000000010000ae3d	8b 48 1c 	movl	0x1c(%rax), %ecx
000000010000ae40	83 c1 01 	addl	$0x1, %ecx
000000010000ae43	89 48 1c 	movl	%ecx, 0x1c(%rax)
000000010000ae46	e9 23 ff ff ff 	jmp	0x10000ad6e
000000010000ae4b	48 83 c4 20 	addq	$0x20, %rsp
000000010000ae4f	5d 	popq	%rbp
000000010000ae50	c3 	retq
000000010000ae51	90 	nop
000000010000ae52	90 	nop
000000010000ae53	90 	nop
000000010000ae54	90 	nop
000000010000ae55	90 	nop
000000010000ae56	90 	nop
000000010000ae57	90 	nop
000000010000ae58	90 	nop
000000010000ae59	90 	nop
000000010000ae5a	90 	nop
000000010000ae5b	90 	nop
000000010000ae5c	90 	nop
000000010000ae5d	90 	nop
000000010000ae5e	90 	nop
000000010000ae5f	90 	nop
_mlxji_new_img:
000000010000ae60	55 	pushq	%rbp
000000010000ae61	48 89 e5 	movq	%rsp, %rbp
000000010000ae64	48 83 ec 20 	subq	$0x20, %rsp
000000010000ae68	b8 28 00 00 00 	movl	$0x28, %eax
000000010000ae6d	89 c1 	movl	%eax, %ecx
000000010000ae6f	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000ae73	89 75 ec 	movl	%esi, -0x14(%rbp)
000000010000ae76	89 55 e8 	movl	%edx, -0x18(%rbp)
000000010000ae79	48 89 cf 	movq	%rcx, %rdi
000000010000ae7c	e8 07 36 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000ae81	48 89 45 e0 	movq	%rax, -0x20(%rbp)
000000010000ae85	48 83 f8 00 	cmpq	$0x0, %rax
000000010000ae89	0f 85 07 00 00 00 	jne	0x10000ae96
000000010000ae8f	31 ff 	xorl	%edi, %edi
000000010000ae91	e8 e4 34 00 00 	callq	0x10000e37a ## symbol stub for: _exit
000000010000ae96	48 83 7d e0 00 	cmpq	$0x0, -0x20(%rbp)
000000010000ae9b	0f 85 0d 00 00 00 	jne	0x10000aeae
000000010000aea1	48 c7 45 f8 00 00 00 00 	movq	$0x0, -0x8(%rbp)
000000010000aea9	e9 67 00 00 00 	jmp	0x10000af15
000000010000aeae	48 8b 7d f0 	movq	-0x10(%rbp), %rdi
000000010000aeb2	8b 75 ec 	movl	-0x14(%rbp), %esi
000000010000aeb5	8b 55 e8 	movl	-0x18(%rbp), %edx
000000010000aeb8	e8 a3 2f 00 00 	callq	_mlx_new_image
000000010000aebd	48 8b 7d e0 	movq	-0x20(%rbp), %rdi
000000010000aec1	48 89 07 	movq	%rax, (%rdi)
000000010000aec4	8b 55 e8 	movl	-0x18(%rbp), %edx
000000010000aec7	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000aecb	89 50 14 	movl	%edx, 0x14(%rax)
000000010000aece	8b 55 ec 	movl	-0x14(%rbp), %edx
000000010000aed1	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000aed5	89 50 10 	movl	%edx, 0x10(%rax)
000000010000aed8	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000aedc	48 8b 38 	movq	(%rax), %rdi
000000010000aedf	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000aee3	48 83 c0 18 	addq	$0x18, %rax
000000010000aee7	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
000000010000aeeb	48 83 c1 1c 	addq	$0x1c, %rcx
000000010000aeef	4c 8b 45 e0 	movq	-0x20(%rbp), %r8
000000010000aef3	49 83 c0 20 	addq	$0x20, %r8
000000010000aef7	48 89 c6 	movq	%rax, %rsi
000000010000aefa	48 89 ca 	movq	%rcx, %rdx
000000010000aefd	4c 89 c1 	movq	%r8, %rcx
000000010000af00	e8 fb 31 00 00 	callq	_mlx_get_data_addr
000000010000af05	48 8b 4d e0 	movq	-0x20(%rbp), %rcx
000000010000af09	48 89 41 08 	movq	%rax, 0x8(%rcx)
000000010000af0d	48 8b 45 e0 	movq	-0x20(%rbp), %rax
000000010000af11	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000af15	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000af19	48 83 c4 20 	addq	$0x20, %rsp
000000010000af1d	5d 	popq	%rbp
000000010000af1e	c3 	retq
000000010000af1f	90 	nop
_mlxji_put_pixel:
000000010000af20	55 	pushq	%rbp
000000010000af21	48 89 e5 	movq	%rsp, %rbp
000000010000af24	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000af28	89 75 f4 	movl	%esi, -0xc(%rbp)
000000010000af2b	89 55 f0 	movl	%edx, -0x10(%rbp)
000000010000af2e	89 4d ec 	movl	%ecx, -0x14(%rbp)
000000010000af31	8b 4d ec 	movl	-0x14(%rbp), %ecx
000000010000af34	8b 55 f4 	movl	-0xc(%rbp), %edx
000000010000af37	c1 e2 02 	shll	$0x2, %edx
000000010000af3a	8b 75 f0 	movl	-0x10(%rbp), %esi
000000010000af3d	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000af41	0f af 77 1c 	imull	0x1c(%rdi), %esi
000000010000af45	01 f2 	addl	%esi, %edx
000000010000af47	48 63 fa 	movslq	%edx, %rdi
000000010000af4a	48 8b 45 f8 	movq	-0x8(%rbp), %rax
000000010000af4e	48 8b 40 08 	movq	0x8(%rax), %rax
000000010000af52	89 0c 38 	movl	%ecx, (%rax,%rdi)
000000010000af55	5d 	popq	%rbp
000000010000af56	c3 	retq
000000010000af57	90 	nop
000000010000af58	90 	nop
000000010000af59	90 	nop
000000010000af5a	90 	nop
000000010000af5b	90 	nop
000000010000af5c	90 	nop
000000010000af5d	90 	nop
000000010000af5e	90 	nop
000000010000af5f	90 	nop
_mlxji_draw_y_line:
000000010000af60	55 	pushq	%rbp
000000010000af61	48 89 e5 	movq	%rsp, %rbp
000000010000af64	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000af68	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
000000010000af6c	89 55 ec 	movl	%edx, -0x14(%rbp)
000000010000af6f	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000af73	8b 16 	movl	(%rsi), %edx
000000010000af75	c1 e2 02 	shll	$0x2, %edx
000000010000af78	89 55 e8 	movl	%edx, -0x18(%rbp)
000000010000af7b	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000af7f	8b 48 08 	movl	0x8(%rax), %ecx
000000010000af82	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000af86	3b 48 0c 	cmpl	0xc(%rax), %ecx
000000010000af89	0f 8d 37 00 00 00 	jge	0x10000afc6
000000010000af8f	8b 45 ec 	movl	-0x14(%rbp), %eax
000000010000af92	8b 4d e8 	movl	-0x18(%rbp), %ecx
000000010000af95	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000af99	8b 72 08 	movl	0x8(%rdx), %esi
000000010000af9c	48 8b 55 f8 	movq	-0x8(%rbp), %rdx
000000010000afa0	0f af 72 1c 	imull	0x1c(%rdx), %esi
000000010000afa4	01 f1 	addl	%esi, %ecx
000000010000afa6	48 63 d1 	movslq	%ecx, %rdx
000000010000afa9	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000afad	48 8b 7f 08 	movq	0x8(%rdi), %rdi
000000010000afb1	89 04 17 	movl	%eax, (%rdi,%rdx)
000000010000afb4	48 8b 55 f0 	movq	-0x10(%rbp), %rdx
000000010000afb8	8b 42 08 	movl	0x8(%rdx), %eax
000000010000afbb	83 c0 01 	addl	$0x1, %eax
000000010000afbe	89 42 08 	movl	%eax, 0x8(%rdx)
000000010000afc1	e9 b5 ff ff ff 	jmp	0x10000af7b
000000010000afc6	5d 	popq	%rbp
000000010000afc7	c3 	retq
000000010000afc8	90 	nop
000000010000afc9	90 	nop
000000010000afca	90 	nop
000000010000afcb	90 	nop
000000010000afcc	90 	nop
000000010000afcd	90 	nop
000000010000afce	90 	nop
000000010000afcf	90 	nop
_mlxji_draw_case:
000000010000afd0	55 	pushq	%rbp
000000010000afd1	48 89 e5 	movq	%rsp, %rbp
000000010000afd4	48 83 ec 30 	subq	$0x30, %rsp
000000010000afd8	48 89 7d f8 	movq	%rdi, -0x8(%rbp)
000000010000afdc	48 89 75 f0 	movq	%rsi, -0x10(%rbp)
000000010000afe0	89 55 ec 	movl	%edx, -0x14(%rbp)
000000010000afe3	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000afe7	8b 56 08 	movl	0x8(%rsi), %edx
000000010000afea	48 8b 75 f0 	movq	-0x10(%rbp), %rsi
000000010000afee	3b 56 0c 	cmpl	0xc(%rsi), %edx
000000010000aff1	0f 8d 0c 00 00 00 	jge	0x10000b003
000000010000aff7	c7 45 e0 01 00 00 00 	movl	$0x1, -0x20(%rbp)
000000010000affe	e9 07 00 00 00 	jmp	0x10000b00a
000000010000b003	c7 45 e0 ff ff ff ff 	movl	$0xffffffff, -0x20(%rbp)
000000010000b00a	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000b00e	8b 08 	movl	(%rax), %ecx
000000010000b010	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000b014	3b 48 04 	cmpl	0x4(%rax), %ecx
000000010000b017	0f 8d 0c 00 00 00 	jge	0x10000b029
000000010000b01d	c7 45 dc 01 00 00 00 	movl	$0x1, -0x24(%rbp)
000000010000b024	e9 07 00 00 00 	jmp	0x10000b030
000000010000b029	c7 45 dc ff ff ff ff 	movl	$0xffffffff, -0x24(%rbp)
000000010000b030	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000b034	8b 48 08 	movl	0x8(%rax), %ecx
000000010000b037	89 4d e4 	movl	%ecx, -0x1c(%rbp)
000000010000b03a	8b 45 e4 	movl	-0x1c(%rbp), %eax
000000010000b03d	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000b041	3b 41 0c 	cmpl	0xc(%rcx), %eax
000000010000b044	0f 84 47 00 00 00 	je	0x10000b091
000000010000b04a	48 8b 45 f0 	movq	-0x10(%rbp), %rax
000000010000b04e	8b 08 	movl	(%rax), %ecx
000000010000b050	89 4d e8 	movl	%ecx, -0x18(%rbp)
000000010000b053	8b 45 e8 	movl	-0x18(%rbp), %eax
000000010000b056	48 8b 4d f0 	movq	-0x10(%rbp), %rcx
000000010000b05a	3b 41 04 	cmpl	0x4(%rcx), %eax
000000010000b05d	0f 84 20 00 00 00 	je	0x10000b083
000000010000b063	48 8b 7d f8 	movq	-0x8(%rbp), %rdi
000000010000b067	8b 75 e8 	movl	-0x18(%rbp), %esi
000000010000b06a	8b 55 e4 	movl	-0x1c(%rbp), %edx
000000010000b06d	8b 4d ec 	movl	-0x14(%rbp), %ecx
000000010000b070	e8 ab fe ff ff 	callq	_mlxji_put_pixel
000000010000b075	8b 4d dc 	movl	-0x24(%rbp), %ecx
000000010000b078	03 4d e8 	addl	-0x18(%rbp), %ecx
000000010000b07b	89 4d e8 	movl	%ecx, -0x18(%rbp)
000000010000b07e	e9 d0 ff ff ff 	jmp	0x10000b053
000000010000b083	8b 45 e0 	movl	-0x20(%rbp), %eax
000000010000b086	03 45 e4 	addl	-0x1c(%rbp), %eax
000000010000b089	89 45 e4 	movl	%eax, -0x1c(%rbp)
000000010000b08c	e9 a9 ff ff ff 	jmp	0x10000b03a
000000010000b091	48 83 c4 30 	addq	$0x30, %rsp
000000010000b095	5d 	popq	%rbp
000000010000b096	c3 	retq
000000010000b097	90 	nop
000000010000b098	90 	nop
000000010000b099	90 	nop
000000010000b09a	90 	nop
000000010000b09b	90 	nop
000000010000b09c	90 	nop
000000010000b09d	90 	nop
000000010000b09e	90 	nop
000000010000b09f	90 	nop
_display_log:
000000010000b0a0	55 	pushq	%rbp
000000010000b0a1	48 89 e5 	movq	%rsp, %rbp
000000010000b0a4	41 57 	pushq	%r15
000000010000b0a6	41 56 	pushq	%r14
000000010000b0a8	41 54 	pushq	%r12
000000010000b0aa	53 	pushq	%rbx
000000010000b0ab	48 83 ec 10 	subq	$0x10, %rsp
000000010000b0af	49 89 d6 	movq	%rdx, %r14
000000010000b0b2	48 89 f1 	movq	%rsi, %rcx
000000010000b0b5	41 89 ff 	movl	%edi, %r15d
000000010000b0b8	48 8d 55 dc 	leaq	-0x24(%rbp), %rdx
000000010000b0bc	be 84 8b 00 00 	movl	$0x8b84, %esi
000000010000b0c1	31 c0 	xorl	%eax, %eax
000000010000b0c3	ff d1 	callq	*%rcx
000000010000b0c5	8b 45 dc 	movl	-0x24(%rbp), %eax
000000010000b0c8	4c 63 e0 	movslq	%eax, %r12
000000010000b0cb	4c 89 e7 	movq	%r12, %rdi
000000010000b0ce	e8 b5 33 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000b0d3	48 89 c3 	movq	%rax, %rbx
000000010000b0d6	31 d2 	xorl	%edx, %edx
000000010000b0d8	31 c0 	xorl	%eax, %eax
000000010000b0da	44 89 ff 	movl	%r15d, %edi
000000010000b0dd	44 89 e6 	movl	%r12d, %esi
000000010000b0e0	48 89 d9 	movq	%rbx, %rcx
000000010000b0e3	41 ff d6 	callq	*%r14
000000010000b0e6	48 8b 05 3b af 01 00 	movq	0x1af3b(%rip), %rax ## literal pool symbol address: ___stderrp
000000010000b0ed	48 8b 30 	movq	(%rax), %rsi
000000010000b0f0	48 89 df 	movq	%rbx, %rdi
000000010000b0f3	e8 88 32 00 00 	callq	0x10000e380 ## symbol stub for: _fputs
000000010000b0f8	48 89 df 	movq	%rbx, %rdi
000000010000b0fb	e8 86 32 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b100	48 83 c4 10 	addq	$0x10, %rsp
000000010000b104	5b 	popq	%rbx
000000010000b105	41 5c 	popq	%r12
000000010000b107	41 5e 	popq	%r14
000000010000b109	41 5f 	popq	%r15
000000010000b10b	5d 	popq	%rbp
000000010000b10c	c3 	retq
000000010000b10d	0f 1f 00 	nopl	(%rax)
_mlx_shaders_pixel:
000000010000b110	55 	pushq	%rbp
000000010000b111	48 89 e5 	movq	%rsp, %rbp
000000010000b114	41 57 	pushq	%r15
000000010000b116	41 56 	pushq	%r14
000000010000b118	41 55 	pushq	%r13
000000010000b11a	41 54 	pushq	%r12
000000010000b11c	53 	pushq	%rbx
000000010000b11d	48 83 ec 18 	subq	$0x18, %rsp
000000010000b121	48 89 fb 	movq	%rdi, %rbx
000000010000b124	bf 31 8b 00 00 	movl	$0x8b31, %edi
000000010000b129	e8 ac 32 00 00 	callq	0x10000e3da ## symbol stub for: _glCreateShader
000000010000b12e	89 03 	movl	%eax, (%rbx)
000000010000b130	48 8d 3d e1 38 00 00 	leaq	0x38e1(%rip), %rdi ## literal pool for: "#version 110 \nattribute vec2 position;varying vec2 texcoord;void main(){ gl_Position = vec4( position, 0.0, 1.0); texcoord = vec2(position[0]+1.0, 1.0 - position[1]) / 2.0;}"
000000010000b137	e8 9a 33 00 00 	callq	0x10000e4d6 ## symbol stub for: _strdup
000000010000b13c	48 89 45 c8 	movq	%rax, -0x38(%rbp)
000000010000b140	48 89 c7 	movq	%rax, %rdi
000000010000b143	e8 94 33 00 00 	callq	0x10000e4dc ## symbol stub for: _strlen
000000010000b148	89 45 c4 	movl	%eax, -0x3c(%rbp)
000000010000b14b	8b 3b 	movl	(%rbx), %edi
000000010000b14d	41 be 01 00 00 00 	movl	$0x1, %r14d
000000010000b153	48 8d 55 c8 	leaq	-0x38(%rbp), %rdx
000000010000b157	48 8d 4d c4 	leaq	-0x3c(%rbp), %rcx
000000010000b15b	be 01 00 00 00 	movl	$0x1, %esi
000000010000b160	e8 ed 32 00 00 	callq	0x10000e452 ## symbol stub for: _glShaderSource
000000010000b165	8b 3b 	movl	(%rbx), %edi
000000010000b167	e8 62 32 00 00 	callq	0x10000e3ce ## symbol stub for: _glCompileShader
000000010000b16c	48 8b 7d c8 	movq	-0x38(%rbp), %rdi
000000010000b170	e8 11 32 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b175	8b 3b 	movl	(%rbx), %edi
000000010000b177	48 8d 55 c0 	leaq	-0x40(%rbp), %rdx
000000010000b17b	be 81 8b 00 00 	movl	$0x8b81, %esi
000000010000b180	e8 bb 32 00 00 	callq	0x10000e440 ## symbol stub for: _glGetShaderiv
000000010000b185	83 7d c0 00 	cmpl	$0x0, -0x40(%rbp)
000000010000b189	0f 84 b7 00 00 00 	je	0x10000b246
000000010000b18f	bf 30 8b 00 00 	movl	$0x8b30, %edi
000000010000b194	e8 41 32 00 00 	callq	0x10000e3da ## symbol stub for: _glCreateShader
000000010000b199	89 43 04 	movl	%eax, 0x4(%rbx)
000000010000b19c	48 8d 3d 46 39 00 00 	leaq	0x3946(%rip), %rdi ## literal pool for: "#version 110 \nuniform sampler2D texture;varying vec2 texcoord;void main(){ gl_FragColor = texture2D(texture, texcoord);}"
000000010000b1a3	e8 2e 33 00 00 	callq	0x10000e4d6 ## symbol stub for: _strdup
000000010000b1a8	48 89 45 c8 	movq	%rax, -0x38(%rbp)
000000010000b1ac	48 89 c7 	movq	%rax, %rdi
000000010000b1af	e8 28 33 00 00 	callq	0x10000e4dc ## symbol stub for: _strlen
000000010000b1b4	89 45 c4 	movl	%eax, -0x3c(%rbp)
000000010000b1b7	8b 7b 04 	movl	0x4(%rbx), %edi
000000010000b1ba	41 be 01 00 00 00 	movl	$0x1, %r14d
000000010000b1c0	48 8d 55 c8 	leaq	-0x38(%rbp), %rdx
000000010000b1c4	48 8d 4d c4 	leaq	-0x3c(%rbp), %rcx
000000010000b1c8	be 01 00 00 00 	movl	$0x1, %esi
000000010000b1cd	e8 80 32 00 00 	callq	0x10000e452 ## symbol stub for: _glShaderSource
000000010000b1d2	8b 7b 04 	movl	0x4(%rbx), %edi
000000010000b1d5	e8 f4 31 00 00 	callq	0x10000e3ce ## symbol stub for: _glCompileShader
000000010000b1da	48 8b 7d c8 	movq	-0x38(%rbp), %rdi
000000010000b1de	e8 a3 31 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b1e3	8b 7b 04 	movl	0x4(%rbx), %edi
000000010000b1e6	48 8d 55 c0 	leaq	-0x40(%rbp), %rdx
000000010000b1ea	be 81 8b 00 00 	movl	$0x8b81, %esi
000000010000b1ef	e8 4c 32 00 00 	callq	0x10000e440 ## symbol stub for: _glGetShaderiv
000000010000b1f4	83 7d c0 00 	cmpl	$0x0, -0x40(%rbp)
000000010000b1f8	74 72 	je	0x10000b26c
000000010000b1fa	e8 d5 31 00 00 	callq	0x10000e3d4 ## symbol stub for: _glCreateProgram
000000010000b1ff	89 43 08 	movl	%eax, 0x8(%rbx)
000000010000b202	8b 33 	movl	(%rbx), %esi
000000010000b204	89 c7 	movl	%eax, %edi
000000010000b206	e8 93 31 00 00 	callq	0x10000e39e ## symbol stub for: _glAttachShader
000000010000b20b	8b 73 04 	movl	0x4(%rbx), %esi
000000010000b20e	8b 7b 08 	movl	0x8(%rbx), %edi
000000010000b211	e8 88 31 00 00 	callq	0x10000e39e ## symbol stub for: _glAttachShader
000000010000b216	8b 7b 08 	movl	0x8(%rbx), %edi
000000010000b219	e8 2e 32 00 00 	callq	0x10000e44c ## symbol stub for: _glLinkProgram
000000010000b21e	8b 7b 08 	movl	0x8(%rbx), %edi
000000010000b221	48 8d 55 c0 	leaq	-0x40(%rbp), %rdx
000000010000b225	be 82 8b 00 00 	movl	$0x8b82, %esi
000000010000b22a	e8 05 32 00 00 	callq	0x10000e434 ## symbol stub for: _glGetProgramiv
000000010000b22f	83 7d c0 00 	cmpl	$0x0, -0x40(%rbp)
000000010000b233	0f 84 a4 00 00 00 	je	0x10000b2dd
000000010000b239	e8 d8 31 00 00 	callq	0x10000e416 ## symbol stub for: _glFlush
000000010000b23e	45 31 f6 	xorl	%r14d, %r14d
000000010000b241	e9 0c 01 00 00 	jmp	0x10000b352
000000010000b246	4c 8b 2d db ad 01 00 	movq	0x1addb(%rip), %r13 ## literal pool symbol address: ___stderrp
000000010000b24d	49 8b 4d 00 	movq	(%r13), %rcx
000000010000b251	48 8d 3d 6e 38 00 00 	leaq	0x386e(%rip), %rdi ## literal pool for: "Failed to compile pixel vshader :\n"
000000010000b258	be 22 00 00 00 	movl	$0x22, %esi
000000010000b25d	ba 01 00 00 00 	movl	$0x1, %edx
000000010000b262	e8 25 31 00 00 	callq	0x10000e38c ## symbol stub for: _fwrite
000000010000b267	44 8b 3b 	movl	(%rbx), %r15d
000000010000b26a	eb 25 	jmp	0x10000b291
000000010000b26c	4c 8b 2d b5 ad 01 00 	movq	0x1adb5(%rip), %r13 ## literal pool symbol address: ___stderrp
000000010000b273	49 8b 4d 00 	movq	(%r13), %rcx
000000010000b277	48 8d 3d e4 38 00 00 	leaq	0x38e4(%rip), %rdi ## literal pool for: "Failed to compile pixel fshader :\n"
000000010000b27e	be 22 00 00 00 	movl	$0x22, %esi
000000010000b283	ba 01 00 00 00 	movl	$0x1, %edx
000000010000b288	e8 ff 30 00 00 	callq	0x10000e38c ## symbol stub for: _fwrite
000000010000b28d	44 8b 7b 04 	movl	0x4(%rbx), %r15d
000000010000b291	48 8d 55 d4 	leaq	-0x2c(%rbp), %rdx
000000010000b295	be 84 8b 00 00 	movl	$0x8b84, %esi
000000010000b29a	31 c0 	xorl	%eax, %eax
000000010000b29c	44 89 ff 	movl	%r15d, %edi
000000010000b29f	e8 9c 31 00 00 	callq	0x10000e440 ## symbol stub for: _glGetShaderiv
000000010000b2a4	8b 45 d4 	movl	-0x2c(%rbp), %eax
000000010000b2a7	4c 63 e0 	movslq	%eax, %r12
000000010000b2aa	4c 89 e7 	movq	%r12, %rdi
000000010000b2ad	e8 d6 31 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000b2b2	48 89 c3 	movq	%rax, %rbx
000000010000b2b5	31 d2 	xorl	%edx, %edx
000000010000b2b7	31 c0 	xorl	%eax, %eax
000000010000b2b9	44 89 ff 	movl	%r15d, %edi
000000010000b2bc	44 89 e6 	movl	%r12d, %esi
000000010000b2bf	48 89 d9 	movq	%rbx, %rcx
000000010000b2c2	e8 73 31 00 00 	callq	0x10000e43a ## symbol stub for: _glGetShaderInfoLog
000000010000b2c7	49 8b 75 00 	movq	(%r13), %rsi
000000010000b2cb	48 89 df 	movq	%rbx, %rdi
000000010000b2ce	e8 ad 30 00 00 	callq	0x10000e380 ## symbol stub for: _fputs
000000010000b2d3	48 89 df 	movq	%rbx, %rdi
000000010000b2d6	e8 ab 30 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b2db	eb 75 	jmp	0x10000b352
000000010000b2dd	4c 8b 25 44 ad 01 00 	movq	0x1ad44(%rip), %r12 ## literal pool symbol address: ___stderrp
000000010000b2e4	49 8b 0c 24 	movq	(%r12), %rcx
000000010000b2e8	48 8d 3d 96 38 00 00 	leaq	0x3896(%rip), %rdi ## literal pool for: "Failed to link pixel shader program:\n"
000000010000b2ef	be 25 00 00 00 	movl	$0x25, %esi
000000010000b2f4	ba 01 00 00 00 	movl	$0x1, %edx
000000010000b2f9	e8 8e 30 00 00 	callq	0x10000e38c ## symbol stub for: _fwrite
000000010000b2fe	44 8b 73 08 	movl	0x8(%rbx), %r14d
000000010000b302	48 8d 55 d4 	leaq	-0x2c(%rbp), %rdx
000000010000b306	be 84 8b 00 00 	movl	$0x8b84, %esi
000000010000b30b	31 c0 	xorl	%eax, %eax
000000010000b30d	44 89 f7 	movl	%r14d, %edi
000000010000b310	e8 1f 31 00 00 	callq	0x10000e434 ## symbol stub for: _glGetProgramiv
000000010000b315	8b 45 d4 	movl	-0x2c(%rbp), %eax
000000010000b318	4c 63 f8 	movslq	%eax, %r15
000000010000b31b	4c 89 ff 	movq	%r15, %rdi
000000010000b31e	e8 65 31 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000b323	48 89 c3 	movq	%rax, %rbx
000000010000b326	31 d2 	xorl	%edx, %edx
000000010000b328	31 c0 	xorl	%eax, %eax
000000010000b32a	44 89 f7 	movl	%r14d, %edi
000000010000b32d	44 89 fe 	movl	%r15d, %esi
000000010000b330	48 89 d9 	movq	%rbx, %rcx
000000010000b333	e8 f6 30 00 00 	callq	0x10000e42e ## symbol stub for: _glGetProgramInfoLog
000000010000b338	49 8b 34 24 	movq	(%r12), %rsi
000000010000b33c	48 89 df 	movq	%rbx, %rdi
000000010000b33f	e8 3c 30 00 00 	callq	0x10000e380 ## symbol stub for: _fputs
000000010000b344	48 89 df 	movq	%rbx, %rdi
000000010000b347	e8 3a 30 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b34c	41 be 01 00 00 00 	movl	$0x1, %r14d
000000010000b352	44 89 f0 	movl	%r14d, %eax
000000010000b355	48 83 c4 18 	addq	$0x18, %rsp
000000010000b359	5b 	popq	%rbx
000000010000b35a	41 5c 	popq	%r12
000000010000b35c	41 5d 	popq	%r13
000000010000b35e	41 5e 	popq	%r14
000000010000b360	41 5f 	popq	%r15
000000010000b362	5d 	popq	%rbp
000000010000b363	c3 	retq
000000010000b364	66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_mlx_shaders_image:
000000010000b370	55 	pushq	%rbp
000000010000b371	48 89 e5 	movq	%rsp, %rbp
000000010000b374	41 57 	pushq	%r15
000000010000b376	41 56 	pushq	%r14
000000010000b378	41 55 	pushq	%r13
000000010000b37a	41 54 	pushq	%r12
000000010000b37c	53 	pushq	%rbx
000000010000b37d	48 83 ec 18 	subq	$0x18, %rsp
000000010000b381	48 89 fb 	movq	%rdi, %rbx
000000010000b384	bf 31 8b 00 00 	movl	$0x8b31, %edi
000000010000b389	e8 4c 30 00 00 	callq	0x10000e3da ## symbol stub for: _glCreateShader
000000010000b38e	89 43 18 	movl	%eax, 0x18(%rbx)
000000010000b391	48 8d 3d 13 38 00 00 	leaq	0x3813(%rip), %rdi ## literal pool for: "#version 110 \nattribute vec2 position;uniform vec2 winhalfsize;uniform vec2 imagepos;uniform vec2 imagesize;varying vec2 texcoord;void main(){ texcoord = position / imagesize; vec2 pos = position - winhalfsize + imagepos; pos = pos / winhalfsize; gl_Position = vec4( pos, 0.0, 1.0);}"
000000010000b398	e8 39 31 00 00 	callq	0x10000e4d6 ## symbol stub for: _strdup
000000010000b39d	48 89 45 c8 	movq	%rax, -0x38(%rbp)
000000010000b3a1	48 89 c7 	movq	%rax, %rdi
000000010000b3a4	e8 33 31 00 00 	callq	0x10000e4dc ## symbol stub for: _strlen
000000010000b3a9	89 45 c4 	movl	%eax, -0x3c(%rbp)
000000010000b3ac	8b 7b 18 	movl	0x18(%rbx), %edi
000000010000b3af	41 be 01 00 00 00 	movl	$0x1, %r14d
000000010000b3b5	48 8d 55 c8 	leaq	-0x38(%rbp), %rdx
000000010000b3b9	48 8d 4d c4 	leaq	-0x3c(%rbp), %rcx
000000010000b3bd	be 01 00 00 00 	movl	$0x1, %esi
000000010000b3c2	e8 8b 30 00 00 	callq	0x10000e452 ## symbol stub for: _glShaderSource
000000010000b3c7	8b 7b 18 	movl	0x18(%rbx), %edi
000000010000b3ca	e8 ff 2f 00 00 	callq	0x10000e3ce ## symbol stub for: _glCompileShader
000000010000b3cf	48 8b 7d c8 	movq	-0x38(%rbp), %rdi
000000010000b3d3	e8 ae 2f 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b3d8	8b 7b 18 	movl	0x18(%rbx), %edi
000000010000b3db	48 8d 55 c0 	leaq	-0x40(%rbp), %rdx
000000010000b3df	be 81 8b 00 00 	movl	$0x8b81, %esi
000000010000b3e4	e8 57 30 00 00 	callq	0x10000e440 ## symbol stub for: _glGetShaderiv
000000010000b3e9	83 7d c0 00 	cmpl	$0x0, -0x40(%rbp)
000000010000b3ed	0f 84 b8 00 00 00 	je	0x10000b4ab
000000010000b3f3	bf 30 8b 00 00 	movl	$0x8b30, %edi
000000010000b3f8	e8 dd 2f 00 00 	callq	0x10000e3da ## symbol stub for: _glCreateShader
000000010000b3fd	89 43 1c 	movl	%eax, 0x1c(%rbx)
000000010000b400	48 8d 3d e2 36 00 00 	leaq	0x36e2(%rip), %rdi ## literal pool for: "#version 110 \nuniform sampler2D texture;varying vec2 texcoord;void main(){ gl_FragColor = texture2D(texture, texcoord);}"
000000010000b407	e8 ca 30 00 00 	callq	0x10000e4d6 ## symbol stub for: _strdup
000000010000b40c	48 89 45 c8 	movq	%rax, -0x38(%rbp)
000000010000b410	48 89 c7 	movq	%rax, %rdi
000000010000b413	e8 c4 30 00 00 	callq	0x10000e4dc ## symbol stub for: _strlen
000000010000b418	89 45 c4 	movl	%eax, -0x3c(%rbp)
000000010000b41b	8b 7b 1c 	movl	0x1c(%rbx), %edi
000000010000b41e	41 be 01 00 00 00 	movl	$0x1, %r14d
000000010000b424	48 8d 55 c8 	leaq	-0x38(%rbp), %rdx
000000010000b428	48 8d 4d c4 	leaq	-0x3c(%rbp), %rcx
000000010000b42c	be 01 00 00 00 	movl	$0x1, %esi
000000010000b431	e8 1c 30 00 00 	callq	0x10000e452 ## symbol stub for: _glShaderSource
000000010000b436	8b 7b 1c 	movl	0x1c(%rbx), %edi
000000010000b439	e8 90 2f 00 00 	callq	0x10000e3ce ## symbol stub for: _glCompileShader
000000010000b43e	48 8b 7d c8 	movq	-0x38(%rbp), %rdi
000000010000b442	e8 3f 2f 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b447	8b 7b 1c 	movl	0x1c(%rbx), %edi
000000010000b44a	48 8d 55 c0 	leaq	-0x40(%rbp), %rdx
000000010000b44e	be 81 8b 00 00 	movl	$0x8b81, %esi
000000010000b453	e8 e8 2f 00 00 	callq	0x10000e440 ## symbol stub for: _glGetShaderiv
000000010000b458	83 7d c0 00 	cmpl	$0x0, -0x40(%rbp)
000000010000b45c	74 74 	je	0x10000b4d2
000000010000b45e	e8 71 2f 00 00 	callq	0x10000e3d4 ## symbol stub for: _glCreateProgram
000000010000b463	89 43 20 	movl	%eax, 0x20(%rbx)
000000010000b466	8b 73 18 	movl	0x18(%rbx), %esi
000000010000b469	89 c7 	movl	%eax, %edi
000000010000b46b	e8 2e 2f 00 00 	callq	0x10000e39e ## symbol stub for: _glAttachShader
000000010000b470	8b 73 1c 	movl	0x1c(%rbx), %esi
000000010000b473	8b 7b 20 	movl	0x20(%rbx), %edi
000000010000b476	e8 23 2f 00 00 	callq	0x10000e39e ## symbol stub for: _glAttachShader
000000010000b47b	8b 7b 20 	movl	0x20(%rbx), %edi
000000010000b47e	e8 c9 2f 00 00 	callq	0x10000e44c ## symbol stub for: _glLinkProgram
000000010000b483	8b 7b 20 	movl	0x20(%rbx), %edi
000000010000b486	48 8d 55 c0 	leaq	-0x40(%rbp), %rdx
000000010000b48a	be 82 8b 00 00 	movl	$0x8b82, %esi
000000010000b48f	e8 a0 2f 00 00 	callq	0x10000e434 ## symbol stub for: _glGetProgramiv
000000010000b494	83 7d c0 00 	cmpl	$0x0, -0x40(%rbp)
000000010000b498	0f 84 a5 00 00 00 	je	0x10000b543
000000010000b49e	e8 73 2f 00 00 	callq	0x10000e416 ## symbol stub for: _glFlush
000000010000b4a3	45 31 f6 	xorl	%r14d, %r14d
000000010000b4a6	e9 0d 01 00 00 	jmp	0x10000b5b8
000000010000b4ab	4c 8b 2d 76 ab 01 00 	movq	0x1ab76(%rip), %r13 ## literal pool symbol address: ___stderrp
000000010000b4b2	49 8b 4d 00 	movq	(%r13), %rcx
000000010000b4b6	48 8d 3d 0a 38 00 00 	leaq	0x380a(%rip), %rdi ## literal pool for: "Failed to compile image vshader :\n"
000000010000b4bd	be 22 00 00 00 	movl	$0x22, %esi
000000010000b4c2	ba 01 00 00 00 	movl	$0x1, %edx
000000010000b4c7	e8 c0 2e 00 00 	callq	0x10000e38c ## symbol stub for: _fwrite
000000010000b4cc	44 8b 7b 18 	movl	0x18(%rbx), %r15d
000000010000b4d0	eb 25 	jmp	0x10000b4f7
000000010000b4d2	4c 8b 2d 4f ab 01 00 	movq	0x1ab4f(%rip), %r13 ## literal pool symbol address: ___stderrp
000000010000b4d9	49 8b 4d 00 	movq	(%r13), %rcx
000000010000b4dd	48 8d 3d 06 38 00 00 	leaq	0x3806(%rip), %rdi ## literal pool for: "Failed to compile image fshader :\n"
000000010000b4e4	be 22 00 00 00 	movl	$0x22, %esi
000000010000b4e9	ba 01 00 00 00 	movl	$0x1, %edx
000000010000b4ee	e8 99 2e 00 00 	callq	0x10000e38c ## symbol stub for: _fwrite
000000010000b4f3	44 8b 7b 1c 	movl	0x1c(%rbx), %r15d
000000010000b4f7	48 8d 55 d4 	leaq	-0x2c(%rbp), %rdx
000000010000b4fb	be 84 8b 00 00 	movl	$0x8b84, %esi
000000010000b500	31 c0 	xorl	%eax, %eax
000000010000b502	44 89 ff 	movl	%r15d, %edi
000000010000b505	e8 36 2f 00 00 	callq	0x10000e440 ## symbol stub for: _glGetShaderiv
000000010000b50a	8b 45 d4 	movl	-0x2c(%rbp), %eax
000000010000b50d	4c 63 e0 	movslq	%eax, %r12
000000010000b510	4c 89 e7 	movq	%r12, %rdi
000000010000b513	e8 70 2f 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000b518	48 89 c3 	movq	%rax, %rbx
000000010000b51b	31 d2 	xorl	%edx, %edx
000000010000b51d	31 c0 	xorl	%eax, %eax
000000010000b51f	44 89 ff 	movl	%r15d, %edi
000000010000b522	44 89 e6 	movl	%r12d, %esi
000000010000b525	48 89 d9 	movq	%rbx, %rcx
000000010000b528	e8 0d 2f 00 00 	callq	0x10000e43a ## symbol stub for: _glGetShaderInfoLog
000000010000b52d	49 8b 75 00 	movq	(%r13), %rsi
000000010000b531	48 89 df 	movq	%rbx, %rdi
000000010000b534	e8 47 2e 00 00 	callq	0x10000e380 ## symbol stub for: _fputs
000000010000b539	48 89 df 	movq	%rbx, %rdi
000000010000b53c	e8 45 2e 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b541	eb 75 	jmp	0x10000b5b8
000000010000b543	4c 8b 25 de aa 01 00 	movq	0x1aade(%rip), %r12 ## literal pool symbol address: ___stderrp
000000010000b54a	49 8b 0c 24 	movq	(%r12), %rcx
000000010000b54e	48 8d 3d b8 37 00 00 	leaq	0x37b8(%rip), %rdi ## literal pool for: "Failed to link image shader program:\n"
000000010000b555	be 25 00 00 00 	movl	$0x25, %esi
000000010000b55a	ba 01 00 00 00 	movl	$0x1, %edx
000000010000b55f	e8 28 2e 00 00 	callq	0x10000e38c ## symbol stub for: _fwrite
000000010000b564	44 8b 73 20 	movl	0x20(%rbx), %r14d
000000010000b568	48 8d 55 d4 	leaq	-0x2c(%rbp), %rdx
000000010000b56c	be 84 8b 00 00 	movl	$0x8b84, %esi
000000010000b571	31 c0 	xorl	%eax, %eax
000000010000b573	44 89 f7 	movl	%r14d, %edi
000000010000b576	e8 b9 2e 00 00 	callq	0x10000e434 ## symbol stub for: _glGetProgramiv
000000010000b57b	8b 45 d4 	movl	-0x2c(%rbp), %eax
000000010000b57e	4c 63 f8 	movslq	%eax, %r15
000000010000b581	4c 89 ff 	movq	%r15, %rdi
000000010000b584	e8 ff 2e 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000b589	48 89 c3 	movq	%rax, %rbx
000000010000b58c	31 d2 	xorl	%edx, %edx
000000010000b58e	31 c0 	xorl	%eax, %eax
000000010000b590	44 89 f7 	movl	%r14d, %edi
000000010000b593	44 89 fe 	movl	%r15d, %esi
000000010000b596	48 89 d9 	movq	%rbx, %rcx
000000010000b599	e8 90 2e 00 00 	callq	0x10000e42e ## symbol stub for: _glGetProgramInfoLog
000000010000b59e	49 8b 34 24 	movq	(%r12), %rsi
000000010000b5a2	48 89 df 	movq	%rbx, %rdi
000000010000b5a5	e8 d6 2d 00 00 	callq	0x10000e380 ## symbol stub for: _fputs
000000010000b5aa	48 89 df 	movq	%rbx, %rdi
000000010000b5ad	e8 d4 2d 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b5b2	41 be 01 00 00 00 	movl	$0x1, %r14d
000000010000b5b8	44 89 f0 	movl	%r14d, %eax
000000010000b5bb	48 83 c4 18 	addq	$0x18, %rsp
000000010000b5bf	5b 	popq	%rbx
000000010000b5c0	41 5c 	popq	%r12
000000010000b5c2	41 5d 	popq	%r13
000000010000b5c4	41 5e 	popq	%r14
000000010000b5c6	41 5f 	popq	%r15
000000010000b5c8	5d 	popq	%rbp
000000010000b5c9	c3 	retq
000000010000b5ca	66 0f 1f 44 00 00 	nopw	(%rax,%rax)
_mlx_shaders_font:
000000010000b5d0	55 	pushq	%rbp
000000010000b5d1	48 89 e5 	movq	%rsp, %rbp
000000010000b5d4	41 57 	pushq	%r15
000000010000b5d6	41 56 	pushq	%r14
000000010000b5d8	41 55 	pushq	%r13
000000010000b5da	41 54 	pushq	%r12
000000010000b5dc	53 	pushq	%rbx
000000010000b5dd	48 83 ec 18 	subq	$0x18, %rsp
000000010000b5e1	48 89 fb 	movq	%rdi, %rbx
000000010000b5e4	bf 31 8b 00 00 	movl	$0x8b31, %edi
000000010000b5e9	e8 ec 2d 00 00 	callq	0x10000e3da ## symbol stub for: _glCreateShader
000000010000b5ee	89 43 38 	movl	%eax, 0x38(%rbx)
000000010000b5f1	48 8d 3d 3b 37 00 00 	leaq	0x373b(%rip), %rdi ## literal pool for: "#version 110 \nattribute vec2 position;uniform vec2 winhalfsize;uniform vec2 fontposinwin;uniform vec2 fontposinatlas;uniform vec2 fontatlassize;varying vec2 texcoord;void main(){ texcoord = (position * vec2(1.0, -1.0) + fontposinatlas ) / fontatlassize; vec2 pos = position - winhalfsize + fontposinwin; pos = pos / winhalfsize; gl_Position = vec4( pos, 0.0, 1.0);}"
000000010000b5f8	e8 d9 2e 00 00 	callq	0x10000e4d6 ## symbol stub for: _strdup
000000010000b5fd	48 89 45 c8 	movq	%rax, -0x38(%rbp)
000000010000b601	48 89 c7 	movq	%rax, %rdi
000000010000b604	e8 d3 2e 00 00 	callq	0x10000e4dc ## symbol stub for: _strlen
000000010000b609	89 45 c4 	movl	%eax, -0x3c(%rbp)
000000010000b60c	8b 7b 38 	movl	0x38(%rbx), %edi
000000010000b60f	41 be 01 00 00 00 	movl	$0x1, %r14d
000000010000b615	48 8d 55 c8 	leaq	-0x38(%rbp), %rdx
000000010000b619	48 8d 4d c4 	leaq	-0x3c(%rbp), %rcx
000000010000b61d	be 01 00 00 00 	movl	$0x1, %esi
000000010000b622	e8 2b 2e 00 00 	callq	0x10000e452 ## symbol stub for: _glShaderSource
000000010000b627	8b 7b 38 	movl	0x38(%rbx), %edi
000000010000b62a	e8 9f 2d 00 00 	callq	0x10000e3ce ## symbol stub for: _glCompileShader
000000010000b62f	48 8b 7d c8 	movq	-0x38(%rbp), %rdi
000000010000b633	e8 4e 2d 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b638	8b 7b 38 	movl	0x38(%rbx), %edi
000000010000b63b	48 8d 55 c0 	leaq	-0x40(%rbp), %rdx
000000010000b63f	be 81 8b 00 00 	movl	$0x8b81, %esi
000000010000b644	e8 f7 2d 00 00 	callq	0x10000e440 ## symbol stub for: _glGetShaderiv
000000010000b649	83 7d c0 00 	cmpl	$0x0, -0x40(%rbp)
000000010000b64d	0f 84 b8 00 00 00 	je	0x10000b70b
000000010000b653	bf 30 8b 00 00 	movl	$0x8b30, %edi
000000010000b658	e8 7d 2d 00 00 	callq	0x10000e3da ## symbol stub for: _glCreateShader
000000010000b65d	89 43 3c 	movl	%eax, 0x3c(%rbx)
000000010000b660	48 8d 3d 5c 38 00 00 	leaq	0x385c(%rip), %rdi ## literal pool for: "#version 110 \nuniform sampler2D texture;uniform vec4 color;varying vec2 texcoord;void main(){ gl_FragColor = color * texture2D(texture, texcoord);}"
000000010000b667	e8 6a 2e 00 00 	callq	0x10000e4d6 ## symbol stub for: _strdup
000000010000b66c	48 89 45 c8 	movq	%rax, -0x38(%rbp)
000000010000b670	48 89 c7 	movq	%rax, %rdi
000000010000b673	e8 64 2e 00 00 	callq	0x10000e4dc ## symbol stub for: _strlen
000000010000b678	89 45 c4 	movl	%eax, -0x3c(%rbp)
000000010000b67b	8b 7b 3c 	movl	0x3c(%rbx), %edi
000000010000b67e	41 be 01 00 00 00 	movl	$0x1, %r14d
000000010000b684	48 8d 55 c8 	leaq	-0x38(%rbp), %rdx
000000010000b688	48 8d 4d c4 	leaq	-0x3c(%rbp), %rcx
000000010000b68c	be 01 00 00 00 	movl	$0x1, %esi
000000010000b691	e8 bc 2d 00 00 	callq	0x10000e452 ## symbol stub for: _glShaderSource
000000010000b696	8b 7b 3c 	movl	0x3c(%rbx), %edi
000000010000b699	e8 30 2d 00 00 	callq	0x10000e3ce ## symbol stub for: _glCompileShader
000000010000b69e	48 8b 7d c8 	movq	-0x38(%rbp), %rdi
000000010000b6a2	e8 df 2c 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b6a7	8b 7b 3c 	movl	0x3c(%rbx), %edi
000000010000b6aa	48 8d 55 c0 	leaq	-0x40(%rbp), %rdx
000000010000b6ae	be 81 8b 00 00 	movl	$0x8b81, %esi
000000010000b6b3	e8 88 2d 00 00 	callq	0x10000e440 ## symbol stub for: _glGetShaderiv
000000010000b6b8	83 7d c0 00 	cmpl	$0x0, -0x40(%rbp)
000000010000b6bc	74 74 	je	0x10000b732
000000010000b6be	e8 11 2d 00 00 	callq	0x10000e3d4 ## symbol stub for: _glCreateProgram
000000010000b6c3	89 43 40 	movl	%eax, 0x40(%rbx)
000000010000b6c6	8b 73 38 	movl	0x38(%rbx), %esi
000000010000b6c9	89 c7 	movl	%eax, %edi
000000010000b6cb	e8 ce 2c 00 00 	callq	0x10000e39e ## symbol stub for: _glAttachShader
000000010000b6d0	8b 73 3c 	movl	0x3c(%rbx), %esi
000000010000b6d3	8b 7b 40 	movl	0x40(%rbx), %edi
000000010000b6d6	e8 c3 2c 00 00 	callq	0x10000e39e ## symbol stub for: _glAttachShader
000000010000b6db	8b 7b 40 	movl	0x40(%rbx), %edi
000000010000b6de	e8 69 2d 00 00 	callq	0x10000e44c ## symbol stub for: _glLinkProgram
000000010000b6e3	8b 7b 40 	movl	0x40(%rbx), %edi
000000010000b6e6	48 8d 55 c0 	leaq	-0x40(%rbp), %rdx
000000010000b6ea	be 82 8b 00 00 	movl	$0x8b82, %esi
000000010000b6ef	e8 40 2d 00 00 	callq	0x10000e434 ## symbol stub for: _glGetProgramiv
000000010000b6f4	83 7d c0 00 	cmpl	$0x0, -0x40(%rbp)
000000010000b6f8	0f 84 a5 00 00 00 	je	0x10000b7a3
000000010000b6fe	e8 13 2d 00 00 	callq	0x10000e416 ## symbol stub for: _glFlush
000000010000b703	45 31 f6 	xorl	%r14d, %r14d
000000010000b706	e9 0d 01 00 00 	jmp	0x10000b818
000000010000b70b	4c 8b 2d 16 a9 01 00 	movq	0x1a916(%rip), %r13 ## literal pool symbol address: ___stderrp
000000010000b712	49 8b 4d 00 	movq	(%r13), %rcx
000000010000b716	48 8d 3d 84 37 00 00 	leaq	0x3784(%rip), %rdi ## literal pool for: "Failed to compile font vshader :\n"
000000010000b71d	be 21 00 00 00 	movl	$0x21, %esi
000000010000b722	ba 01 00 00 00 	movl	$0x1, %edx
000000010000b727	e8 60 2c 00 00 	callq	0x10000e38c ## symbol stub for: _fwrite
000000010000b72c	44 8b 7b 38 	movl	0x38(%rbx), %r15d
000000010000b730	eb 25 	jmp	0x10000b757
000000010000b732	4c 8b 2d ef a8 01 00 	movq	0x1a8ef(%rip), %r13 ## literal pool symbol address: ___stderrp
000000010000b739	49 8b 4d 00 	movq	(%r13), %rcx
000000010000b73d	48 8d 3d 13 38 00 00 	leaq	0x3813(%rip), %rdi ## literal pool for: "Failed to compile font fshader :\n"
000000010000b744	be 21 00 00 00 	movl	$0x21, %esi
000000010000b749	ba 01 00 00 00 	movl	$0x1, %edx
000000010000b74e	e8 39 2c 00 00 	callq	0x10000e38c ## symbol stub for: _fwrite
000000010000b753	44 8b 7b 3c 	movl	0x3c(%rbx), %r15d
000000010000b757	48 8d 55 d4 	leaq	-0x2c(%rbp), %rdx
000000010000b75b	be 84 8b 00 00 	movl	$0x8b84, %esi
000000010000b760	31 c0 	xorl	%eax, %eax
000000010000b762	44 89 ff 	movl	%r15d, %edi
000000010000b765	e8 d6 2c 00 00 	callq	0x10000e440 ## symbol stub for: _glGetShaderiv
000000010000b76a	8b 45 d4 	movl	-0x2c(%rbp), %eax
000000010000b76d	4c 63 e0 	movslq	%eax, %r12
000000010000b770	4c 89 e7 	movq	%r12, %rdi
000000010000b773	e8 10 2d 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000b778	48 89 c3 	movq	%rax, %rbx
000000010000b77b	31 d2 	xorl	%edx, %edx
000000010000b77d	31 c0 	xorl	%eax, %eax
000000010000b77f	44 89 ff 	movl	%r15d, %edi
000000010000b782	44 89 e6 	movl	%r12d, %esi
000000010000b785	48 89 d9 	movq	%rbx, %rcx
000000010000b788	e8 ad 2c 00 00 	callq	0x10000e43a ## symbol stub for: _glGetShaderInfoLog
000000010000b78d	49 8b 75 00 	movq	(%r13), %rsi
000000010000b791	48 89 df 	movq	%rbx, %rdi
000000010000b794	e8 e7 2b 00 00 	callq	0x10000e380 ## symbol stub for: _fputs
000000010000b799	48 89 df 	movq	%rbx, %rdi
000000010000b79c	e8 e5 2b 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b7a1	eb 75 	jmp	0x10000b818
000000010000b7a3	4c 8b 25 7e a8 01 00 	movq	0x1a87e(%rip), %r12 ## literal pool symbol address: ___stderrp
000000010000b7aa	49 8b 0c 24 	movq	(%r12), %rcx
000000010000b7ae	48 8d 3d c4 37 00 00 	leaq	0x37c4(%rip), %rdi ## literal pool for: "Failed to link font shader program:\n"
000000010000b7b5	be 24 00 00 00 	movl	$0x24, %esi
000000010000b7ba	ba 01 00 00 00 	movl	$0x1, %edx
000000010000b7bf	e8 c8 2b 00 00 	callq	0x10000e38c ## symbol stub for: _fwrite
000000010000b7c4	44 8b 73 40 	movl	0x40(%rbx), %r14d
000000010000b7c8	48 8d 55 d4 	leaq	-0x2c(%rbp), %rdx
000000010000b7cc	be 84 8b 00 00 	movl	$0x8b84, %esi
000000010000b7d1	31 c0 	xorl	%eax, %eax
000000010000b7d3	44 89 f7 	movl	%r14d, %edi
000000010000b7d6	e8 59 2c 00 00 	callq	0x10000e434 ## symbol stub for: _glGetProgramiv
000000010000b7db	8b 45 d4 	movl	-0x2c(%rbp), %eax
000000010000b7de	4c 63 f8 	movslq	%eax, %r15
000000010000b7e1	4c 89 ff 	movq	%r15, %rdi
000000010000b7e4	e8 9f 2c 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000b7e9	48 89 c3 	movq	%rax, %rbx
000000010000b7ec	31 d2 	xorl	%edx, %edx
000000010000b7ee	31 c0 	xorl	%eax, %eax
000000010000b7f0	44 89 f7 	movl	%r14d, %edi
000000010000b7f3	44 89 fe 	movl	%r15d, %esi
000000010000b7f6	48 89 d9 	movq	%rbx, %rcx
000000010000b7f9	e8 30 2c 00 00 	callq	0x10000e42e ## symbol stub for: _glGetProgramInfoLog
000000010000b7fe	49 8b 34 24 	movq	(%r12), %rsi
000000010000b802	48 89 df 	movq	%rbx, %rdi
000000010000b805	e8 76 2b 00 00 	callq	0x10000e380 ## symbol stub for: _fputs
000000010000b80a	48 89 df 	movq	%rbx, %rdi
000000010000b80d	e8 74 2b 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000b812	41 be 01 00 00 00 	movl	$0x1, %r14d
000000010000b818	44 89 f0 	movl	%r14d, %eax
000000010000b81b	48 83 c4 18 	addq	$0x18, %rsp
000000010000b81f	5b 	popq	%rbx
000000010000b820	41 5c 	popq	%r12
000000010000b822	41 5d 	popq	%r13
000000010000b824	41 5e 	popq	%r14
000000010000b826	41 5f 	popq	%r15
000000010000b828	5d 	popq	%rbp
000000010000b829	c3 	retq
000000010000b82a	66 0f 1f 44 00 00 	nopw	(%rax,%rax)
_mlx_shaders:
000000010000b830	55 	pushq	%rbp
000000010000b831	48 89 e5 	movq	%rsp, %rbp
000000010000b834	41 57 	pushq	%r15
000000010000b836	41 56 	pushq	%r14
000000010000b838	53 	pushq	%rbx
000000010000b839	50 	pushq	%rax
000000010000b83a	49 89 ff 	movq	%rdi, %r15
000000010000b83d	e8 ce f8 ff ff 	callq	_mlx_shaders_pixel
000000010000b842	41 89 c6 	movl	%eax, %r14d
000000010000b845	4c 89 ff 	movq	%r15, %rdi
000000010000b848	e8 23 fb ff ff 	callq	_mlx_shaders_image
000000010000b84d	89 c3 	movl	%eax, %ebx
000000010000b84f	44 01 f3 	addl	%r14d, %ebx
000000010000b852	4c 89 ff 	movq	%r15, %rdi
000000010000b855	e8 76 fd ff ff 	callq	_mlx_shaders_font
000000010000b85a	01 d8 	addl	%ebx, %eax
000000010000b85c	48 83 c4 08 	addq	$0x8, %rsp
000000010000b860	5b 	popq	%rbx
000000010000b861	41 5e 	popq	%r14
000000010000b863	41 5f 	popq	%r15
000000010000b865	5d 	popq	%rbp
000000010000b866	c3 	retq
000000010000b867	90 	nop
000000010000b868	90 	nop
000000010000b869	90 	nop
000000010000b86a	90 	nop
000000010000b86b	90 	nop
000000010000b86c	90 	nop
000000010000b86d	90 	nop
000000010000b86e	90 	nop
000000010000b86f	90 	nop
_get_mouse_button:
000000010000b870	55 	pushq	%rbp
000000010000b871	48 89 e5 	movq	%rsp, %rbp
000000010000b874	48 83 ff 1b 	cmpq	$0x1b, %rdi
000000010000b878	77 34 	ja	0x10000b8ae
000000010000b87a	b8 01 00 00 00 	movl	$0x1, %eax
000000010000b87f	b9 46 00 00 00 	movl	$0x46, %ecx
000000010000b884	48 0f a3 f9 	btq	%rdi, %rcx
000000010000b888	72 26 	jb	0x10000b8b0
000000010000b88a	b8 98 00 00 00 	movl	$0x98, %eax
000000010000b88f	48 0f a3 f8 	btq	%rdi, %rax
000000010000b893	72 12 	jb	0x10000b8a7
000000010000b895	b8 00 00 00 0e 	movl	$0xe000000, %eax
000000010000b89a	48 0f a3 f8 	btq	%rdi, %rax
000000010000b89e	73 0e 	jae	0x10000b8ae
000000010000b8a0	b8 03 00 00 00 	movl	$0x3, %eax
000000010000b8a5	5d 	popq	%rbp
000000010000b8a6	c3 	retq
000000010000b8a7	b8 02 00 00 00 	movl	$0x2, %eax
000000010000b8ac	5d 	popq	%rbp
000000010000b8ad	c3 	retq
000000010000b8ae	31 c0 	xorl	%eax, %eax
000000010000b8b0	5d 	popq	%rbp
000000010000b8b1	c3 	retq
000000010000b8b2	66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
-[NSWindowEvent initWithContentRect:styleMask:backing:defer:]:
000000010000b8c0	55 	pushq	%rbp
000000010000b8c1	48 89 e5 	movq	%rsp, %rbp
000000010000b8c4	48 83 ec 30 	subq	$0x30, %rsp
000000010000b8c8	48 89 7d f0 	movq	%rdi, -0x10(%rbp)
000000010000b8cc	48 8b 05 f5 b2 01 00 	movq	0x1b2f5(%rip), %rax ## Objc class ref: NSWindowEvent
000000010000b8d3	48 89 45 f8 	movq	%rax, -0x8(%rbp)
000000010000b8d7	48 8b 35 f2 b0 01 00 	movq	0x1b0f2(%rip), %rsi ## Objc selector ref: initWithContentRect:styleMask:backing:defer:
000000010000b8de	48 8b 45 28 	movq	0x28(%rbp), %rax
000000010000b8e2	48 89 44 24 18 	movq	%rax, 0x18(%rsp)
000000010000b8e7	48 8b 45 20 	movq	0x20(%rbp), %rax
000000010000b8eb	48 89 44 24 10 	movq	%rax, 0x10(%rsp)
000000010000b8f0	48 8b 45 10 	movq	0x10(%rbp), %rax
000000010000b8f4	48 8b 7d 18 	movq	0x18(%rbp), %rdi
000000010000b8f8	48 89 7c 24 08 	movq	%rdi, 0x8(%rsp)
000000010000b8fd	48 89 04 24 	movq	%rax, (%rsp)
000000010000b901	48 8d 7d f0 	leaq	-0x10(%rbp), %rdi
000000010000b905	e8 84 2b 00 00 	callq	0x10000e48e ## Objc message: -[[%rdi super] initWithContentRect:styleMask:backing:defer:]
000000010000b90a	48 85 c0 	testq	%rax, %rax
000000010000b90d	0f 84 ea 02 00 00 	je	0x10000bbfd
000000010000b913	48 8d 4d 10 	leaq	0x10(%rbp), %rcx
000000010000b917	48 8b 15 ba b2 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rdx
000000010000b91e	48 8b 35 bb b2 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rsi
000000010000b925	48 c7 84 10 f8 00 00 00 00 00 00 00 	movq	$0x0, 0xf8(%rax,%rdx)
000000010000b931	48 c7 84 30 f8 00 00 00 00 00 00 00 	movq	$0x0, 0xf8(%rax,%rsi)
000000010000b93d	48 c7 84 10 f0 00 00 00 00 00 00 00 	movq	$0x0, 0xf0(%rax,%rdx)
000000010000b949	48 c7 84 30 f0 00 00 00 00 00 00 00 	movq	$0x0, 0xf0(%rax,%rsi)
000000010000b955	48 c7 84 10 e8 00 00 00 00 00 00 00 	movq	$0x0, 0xe8(%rax,%rdx)
000000010000b961	48 c7 84 30 e8 00 00 00 00 00 00 00 	movq	$0x0, 0xe8(%rax,%rsi)
000000010000b96d	48 c7 84 10 e0 00 00 00 00 00 00 00 	movq	$0x0, 0xe0(%rax,%rdx)
000000010000b979	48 c7 84 30 e0 00 00 00 00 00 00 00 	movq	$0x0, 0xe0(%rax,%rsi)
000000010000b985	48 c7 84 10 d8 00 00 00 00 00 00 00 	movq	$0x0, 0xd8(%rax,%rdx)
000000010000b991	48 c7 84 30 d8 00 00 00 00 00 00 00 	movq	$0x0, 0xd8(%rax,%rsi)
000000010000b99d	48 c7 84 10 d0 00 00 00 00 00 00 00 	movq	$0x0, 0xd0(%rax,%rdx)
000000010000b9a9	48 c7 84 30 d0 00 00 00 00 00 00 00 	movq	$0x0, 0xd0(%rax,%rsi)
000000010000b9b5	48 c7 84 10 c8 00 00 00 00 00 00 00 	movq	$0x0, 0xc8(%rax,%rdx)
000000010000b9c1	48 c7 84 30 c8 00 00 00 00 00 00 00 	movq	$0x0, 0xc8(%rax,%rsi)
000000010000b9cd	48 c7 84 10 c0 00 00 00 00 00 00 00 	movq	$0x0, 0xc0(%rax,%rdx)
000000010000b9d9	48 c7 84 30 c0 00 00 00 00 00 00 00 	movq	$0x0, 0xc0(%rax,%rsi)
000000010000b9e5	48 c7 84 10 b8 00 00 00 00 00 00 00 	movq	$0x0, 0xb8(%rax,%rdx)
000000010000b9f1	48 c7 84 30 b8 00 00 00 00 00 00 00 	movq	$0x0, 0xb8(%rax,%rsi)
000000010000b9fd	48 c7 84 10 b0 00 00 00 00 00 00 00 	movq	$0x0, 0xb0(%rax,%rdx)
000000010000ba09	48 c7 84 30 b0 00 00 00 00 00 00 00 	movq	$0x0, 0xb0(%rax,%rsi)
000000010000ba15	48 c7 84 10 a8 00 00 00 00 00 00 00 	movq	$0x0, 0xa8(%rax,%rdx)
000000010000ba21	48 c7 84 30 a8 00 00 00 00 00 00 00 	movq	$0x0, 0xa8(%rax,%rsi)
000000010000ba2d	48 c7 84 10 a0 00 00 00 00 00 00 00 	movq	$0x0, 0xa0(%rax,%rdx)
000000010000ba39	48 c7 84 30 a0 00 00 00 00 00 00 00 	movq	$0x0, 0xa0(%rax,%rsi)
000000010000ba45	48 c7 84 10 98 00 00 00 00 00 00 00 	movq	$0x0, 0x98(%rax,%rdx)
000000010000ba51	48 c7 84 30 98 00 00 00 00 00 00 00 	movq	$0x0, 0x98(%rax,%rsi)
000000010000ba5d	48 c7 84 10 90 00 00 00 00 00 00 00 	movq	$0x0, 0x90(%rax,%rdx)
000000010000ba69	48 c7 84 30 90 00 00 00 00 00 00 00 	movq	$0x0, 0x90(%rax,%rsi)
000000010000ba75	48 c7 84 10 88 00 00 00 00 00 00 00 	movq	$0x0, 0x88(%rax,%rdx)
000000010000ba81	48 c7 84 30 88 00 00 00 00 00 00 00 	movq	$0x0, 0x88(%rax,%rsi)
000000010000ba8d	48 c7 84 10 80 00 00 00 00 00 00 00 	movq	$0x0, 0x80(%rax,%rdx)
000000010000ba99	48 c7 84 30 80 00 00 00 00 00 00 00 	movq	$0x0, 0x80(%rax,%rsi)
000000010000baa5	48 c7 44 10 78 00 00 00 00 	movq	$0x0, 0x78(%rax,%rdx)
000000010000baae	48 c7 44 30 78 00 00 00 00 	movq	$0x0, 0x78(%rax,%rsi)
000000010000bab7	48 c7 44 10 70 00 00 00 00 	movq	$0x0, 0x70(%rax,%rdx)
000000010000bac0	48 c7 44 30 70 00 00 00 00 	movq	$0x0, 0x70(%rax,%rsi)
000000010000bac9	48 c7 44 10 68 00 00 00 00 	movq	$0x0, 0x68(%rax,%rdx)
000000010000bad2	48 c7 44 30 68 00 00 00 00 	movq	$0x0, 0x68(%rax,%rsi)
000000010000badb	48 c7 44 10 60 00 00 00 00 	movq	$0x0, 0x60(%rax,%rdx)
000000010000bae4	48 c7 44 30 60 00 00 00 00 	movq	$0x0, 0x60(%rax,%rsi)
000000010000baed	48 c7 44 10 58 00 00 00 00 	movq	$0x0, 0x58(%rax,%rdx)
000000010000baf6	48 c7 44 30 58 00 00 00 00 	movq	$0x0, 0x58(%rax,%rsi)
000000010000baff	48 c7 44 10 50 00 00 00 00 	movq	$0x0, 0x50(%rax,%rdx)
000000010000bb08	48 c7 44 30 50 00 00 00 00 	movq	$0x0, 0x50(%rax,%rsi)
000000010000bb11	48 c7 44 10 48 00 00 00 00 	movq	$0x0, 0x48(%rax,%rdx)
000000010000bb1a	48 c7 44 30 48 00 00 00 00 	movq	$0x0, 0x48(%rax,%rsi)
000000010000bb23	48 c7 44 10 40 00 00 00 00 	movq	$0x0, 0x40(%rax,%rdx)
000000010000bb2c	48 c7 44 30 40 00 00 00 00 	movq	$0x0, 0x40(%rax,%rsi)
000000010000bb35	48 c7 44 10 38 00 00 00 00 	movq	$0x0, 0x38(%rax,%rdx)
000000010000bb3e	48 c7 44 30 38 00 00 00 00 	movq	$0x0, 0x38(%rax,%rsi)
000000010000bb47	48 c7 44 10 30 00 00 00 00 	movq	$0x0, 0x30(%rax,%rdx)
000000010000bb50	48 c7 44 30 30 00 00 00 00 	movq	$0x0, 0x30(%rax,%rsi)
000000010000bb59	48 c7 44 10 28 00 00 00 00 	movq	$0x0, 0x28(%rax,%rdx)
000000010000bb62	48 c7 44 30 28 00 00 00 00 	movq	$0x0, 0x28(%rax,%rsi)
000000010000bb6b	48 c7 44 10 20 00 00 00 00 	movq	$0x0, 0x20(%rax,%rdx)
000000010000bb74	48 c7 44 30 20 00 00 00 00 	movq	$0x0, 0x20(%rax,%rsi)
000000010000bb7d	48 c7 44 10 18 00 00 00 00 	movq	$0x0, 0x18(%rax,%rdx)
000000010000bb86	48 c7 44 30 18 00 00 00 00 	movq	$0x0, 0x18(%rax,%rsi)
000000010000bb8f	48 c7 44 10 10 00 00 00 00 	movq	$0x0, 0x10(%rax,%rdx)
000000010000bb98	48 c7 44 30 10 00 00 00 00 	movq	$0x0, 0x10(%rax,%rsi)
000000010000bba1	48 c7 44 10 08 00 00 00 00 	movq	$0x0, 0x8(%rax,%rdx)
000000010000bbaa	48 c7 44 30 08 00 00 00 00 	movq	$0x0, 0x8(%rax,%rsi)
000000010000bbb3	48 c7 04 10 00 00 00 00 	movq	$0x0, (%rax,%rdx)
000000010000bbbb	48 c7 04 30 00 00 00 00 	movq	$0x0, (%rax,%rsi)
000000010000bbc3	48 8b 15 1e b0 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.keyrepeat(%rip), %rdx
000000010000bbca	c7 04 10 00 00 00 00 	movl	$0x0, (%rax,%rdx)
000000010000bbd1	48 8b 15 18 b0 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.keyflag(%rip), %rdx
000000010000bbd8	c7 04 10 00 00 00 00 	movl	$0x0, (%rax,%rdx)
000000010000bbdf	f2 0f 2c 51 10 	cvttsd2si	0x10(%rcx), %edx
000000010000bbe4	48 8b 35 0d b0 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_x(%rip), %rsi
000000010000bbeb	89 14 30 	movl	%edx, (%rax,%rsi)
000000010000bbee	f2 0f 2c 49 18 	cvttsd2si	0x18(%rcx), %ecx
000000010000bbf3	48 8b 15 06 b0 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rdx
000000010000bbfa	89 0c 10 	movl	%ecx, (%rax,%rdx)
000000010000bbfd	48 83 c4 30 	addq	$0x30, %rsp
000000010000bc01	5d 	popq	%rbp
000000010000bc02	c3 	retq
000000010000bc03	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
-[NSWindowEvent setEvent:andFunc:andParam:]:
000000010000bc10	55 	pushq	%rbp
000000010000bc11	48 89 e5 	movq	%rsp, %rbp
000000010000bc14	48 63 c2 	movslq	%edx, %rax
000000010000bc17	48 8b 15 ba af 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rdx
000000010000bc1e	48 01 fa 	addq	%rdi, %rdx
000000010000bc21	48 89 0c c2 	movq	%rcx, (%rdx,%rax,8)
000000010000bc25	48 8b 15 b4 af 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rdx
000000010000bc2c	48 01 fa 	addq	%rdi, %rdx
000000010000bc2f	4c 89 04 c2 	movq	%r8, (%rdx,%rax,8)
000000010000bc33	83 f8 06 	cmpl	$0x6, %eax
000000010000bc36	75 18 	jne	0x10000bc50
000000010000bc38	48 8b 35 99 ad 01 00 	movq	0x1ad99(%rip), %rsi ## Objc selector ref: setAcceptsMouseMovedEvents:
000000010000bc3f	48 85 c9 	testq	%rcx, %rcx
000000010000bc42	74 0e 	je	0x10000bc52
000000010000bc44	ba 01 00 00 00 	movl	$0x1, %edx
000000010000bc49	5d 	popq	%rbp
000000010000bc4a	ff 25 f0 a3 01 00 	jmpq	*0x1a3f0(%rip) ## Objc message: -[%rdi setAcceptsMouseMovedEvents:]
000000010000bc50	5d 	popq	%rbp
000000010000bc51	c3 	retq
000000010000bc52	31 d2 	xorl	%edx, %edx
000000010000bc54	5d 	popq	%rbp
000000010000bc55	ff 25 e5 a3 01 00 	jmpq	*0x1a3e5(%rip) ## Objc message: -[%rdi setAcceptsMouseMovedEvents:]
000000010000bc5b	0f 1f 44 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent setKeyRepeat:]:
000000010000bc60	55 	pushq	%rbp
000000010000bc61	48 89 e5 	movq	%rsp, %rbp
000000010000bc64	48 8b 05 7d af 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.keyrepeat(%rip), %rax
000000010000bc6b	89 14 07 	movl	%edx, (%rdi,%rax)
000000010000bc6e	5d 	popq	%rbp
000000010000bc6f	c3 	retq
-[NSWindowEvent acceptsFirstResponder]:
000000010000bc70	55 	pushq	%rbp
000000010000bc71	48 89 e5 	movq	%rsp, %rbp
000000010000bc74	b8 01 00 00 00 	movl	$0x1, %eax
000000010000bc79	5d 	popq	%rbp
000000010000bc7a	c3 	retq
000000010000bc7b	0f 1f 44 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent flagsChanged:]:
000000010000bc80	55 	pushq	%rbp
000000010000bc81	48 89 e5 	movq	%rsp, %rbp
000000010000bc84	41 57 	pushq	%r15
000000010000bc86	41 56 	pushq	%r14
000000010000bc88	41 54 	pushq	%r12
000000010000bc8a	53 	pushq	%rbx
000000010000bc8b	49 89 fe 	movq	%rdi, %r14
000000010000bc8e	48 8b 35 4b ad 01 00 	movq	0x1ad4b(%rip), %rsi ## Objc selector ref: modifierFlags
000000010000bc95	48 89 d7 	movq	%rdx, %rdi
000000010000bc98	ff 15 a2 a3 01 00 	callq	*0x1a3a2(%rip) ## Objc message: -[%rdi modifierFlags]
000000010000bc9e	49 89 c7 	movq	%rax, %r15
000000010000bca1	4c 8b 25 48 af 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.keyflag(%rip), %r12
000000010000bca8	43 8b 04 26 	movl	(%r14,%r12), %eax
000000010000bcac	89 c1 	movl	%eax, %ecx
000000010000bcae	44 31 f9 	xorl	%r15d, %ecx
000000010000bcb1	74 72 	je	0x10000bd25
000000010000bcb3	bb ff 00 00 00 	movl	$0xff, %ebx
000000010000bcb8	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
000000010000bcc0	8d 93 01 ff ff ff 	leal	-0xff(%rbx), %edx
000000010000bcc6	ff c3 	incl	%ebx
000000010000bcc8	0f a3 d1 	btl	%edx, %ecx
000000010000bccb	73 f3 	jae	0x10000bcc0
000000010000bccd	41 39 c7 	cmpl	%eax, %r15d
000000010000bcd0	76 27 	jbe	0x10000bcf9
000000010000bcd2	48 8b 0d ff ae 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rcx
000000010000bcd9	49 8b 4c 0e 10 	movq	0x10(%r14,%rcx), %rcx
000000010000bcde	48 85 c9 	testq	%rcx, %rcx
000000010000bce1	74 16 	je	0x10000bcf9
000000010000bce3	48 8b 05 f6 ae 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000bcea	49 8b 74 06 10 	movq	0x10(%r14,%rax), %rsi
000000010000bcef	31 c0 	xorl	%eax, %eax
000000010000bcf1	89 df 	movl	%ebx, %edi
000000010000bcf3	ff d1 	callq	*%rcx
000000010000bcf5	43 8b 04 26 	movl	(%r14,%r12), %eax
000000010000bcf9	41 39 c7 	cmpl	%eax, %r15d
000000010000bcfc	73 23 	jae	0x10000bd21
000000010000bcfe	48 8b 05 d3 ae 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000bd05	49 8b 4c 06 18 	movq	0x18(%r14,%rax), %rcx
000000010000bd0a	48 85 c9 	testq	%rcx, %rcx
000000010000bd0d	74 12 	je	0x10000bd21
000000010000bd0f	48 8b 05 ca ae 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000bd16	49 8b 74 06 18 	movq	0x18(%r14,%rax), %rsi
000000010000bd1b	31 c0 	xorl	%eax, %eax
000000010000bd1d	89 df 	movl	%ebx, %edi
000000010000bd1f	ff d1 	callq	*%rcx
000000010000bd21	47 89 3c 26 	movl	%r15d, (%r14,%r12)
000000010000bd25	5b 	popq	%rbx
000000010000bd26	41 5c 	popq	%r12
000000010000bd28	41 5e 	popq	%r14
000000010000bd2a	41 5f 	popq	%r15
000000010000bd2c	5d 	popq	%rbp
000000010000bd2d	c3 	retq
000000010000bd2e	66 90 	nop
-[NSWindowEvent keyDown:]:
000000010000bd30	55 	pushq	%rbp
000000010000bd31	48 89 e5 	movq	%rsp, %rbp
000000010000bd34	41 56 	pushq	%r14
000000010000bd36	53 	pushq	%rbx
000000010000bd37	49 89 d6 	movq	%rdx, %r14
000000010000bd3a	48 89 fb 	movq	%rdi, %rbx
000000010000bd3d	48 8b 05 a4 ae 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.keyrepeat(%rip), %rax
000000010000bd44	83 3c 03 00 	cmpl	$0x0, (%rbx,%rax)
000000010000bd48	75 14 	jne	0x10000bd5e
000000010000bd4a	48 8b 35 97 ac 01 00 	movq	0x1ac97(%rip), %rsi ## Objc selector ref: isARepeat
000000010000bd51	4c 89 f7 	movq	%r14, %rdi
000000010000bd54	ff 15 e6 a2 01 00 	callq	*0x1a2e6(%rip) ## Objc message: -[%rdi isARepeat]
000000010000bd5a	84 c0 	testb	%al, %al
000000010000bd5c	75 3e 	jne	0x10000bd9c
000000010000bd5e	48 8b 05 73 ae 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000bd65	48 8b 44 03 10 	movq	0x10(%rbx,%rax), %rax
000000010000bd6a	48 85 c0 	testq	%rax, %rax
000000010000bd6d	74 2d 	je	0x10000bd9c
000000010000bd6f	48 8b 35 7a ac 01 00 	movq	0x1ac7a(%rip), %rsi ## Objc selector ref: keyCode
000000010000bd76	4c 89 f7 	movq	%r14, %rdi
000000010000bd79	49 89 c6 	movq	%rax, %r14
000000010000bd7c	ff 15 be a2 01 00 	callq	*0x1a2be(%rip) ## Objc message: -[%rdi keyCode]
000000010000bd82	0f b7 f8 	movzwl	%ax, %edi
000000010000bd85	48 8b 05 54 ae 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000bd8c	48 8b 74 03 10 	movq	0x10(%rbx,%rax), %rsi
000000010000bd91	31 c0 	xorl	%eax, %eax
000000010000bd93	4c 89 f1 	movq	%r14, %rcx
000000010000bd96	5b 	popq	%rbx
000000010000bd97	41 5e 	popq	%r14
000000010000bd99	5d 	popq	%rbp
000000010000bd9a	ff e1 	jmpq	*%rcx
000000010000bd9c	5b 	popq	%rbx
000000010000bd9d	41 5e 	popq	%r14
000000010000bd9f	5d 	popq	%rbp
000000010000bda0	c3 	retq
000000010000bda1	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
-[NSWindowEvent keyUp:]:
000000010000bdb0	55 	pushq	%rbp
000000010000bdb1	48 89 e5 	movq	%rsp, %rbp
000000010000bdb4	41 56 	pushq	%r14
000000010000bdb6	53 	pushq	%rbx
000000010000bdb7	48 89 fb 	movq	%rdi, %rbx
000000010000bdba	48 8b 05 17 ae 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000bdc1	48 8b 44 03 18 	movq	0x18(%rbx,%rax), %rax
000000010000bdc6	48 85 c0 	testq	%rax, %rax
000000010000bdc9	74 2d 	je	0x10000bdf8
000000010000bdcb	48 8b 35 1e ac 01 00 	movq	0x1ac1e(%rip), %rsi ## Objc selector ref: keyCode
000000010000bdd2	48 89 d7 	movq	%rdx, %rdi
000000010000bdd5	49 89 c6 	movq	%rax, %r14
000000010000bdd8	ff 15 62 a2 01 00 	callq	*0x1a262(%rip) ## Objc message: -[%rdi keyCode]
000000010000bdde	0f b7 f8 	movzwl	%ax, %edi
000000010000bde1	48 8b 05 f8 ad 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000bde8	48 8b 74 03 18 	movq	0x18(%rbx,%rax), %rsi
000000010000bded	31 c0 	xorl	%eax, %eax
000000010000bdef	4c 89 f1 	movq	%r14, %rcx
000000010000bdf2	5b 	popq	%rbx
000000010000bdf3	41 5e 	popq	%r14
000000010000bdf5	5d 	popq	%rbp
000000010000bdf6	ff e1 	jmpq	*%rcx
000000010000bdf8	5b 	popq	%rbx
000000010000bdf9	41 5e 	popq	%r14
000000010000bdfb	5d 	popq	%rbp
000000010000bdfc	c3 	retq
000000010000bdfd	0f 1f 00 	nopl	(%rax)
-[NSWindowEvent mouseDown:]:
000000010000be00	55 	pushq	%rbp
000000010000be01	48 89 e5 	movq	%rsp, %rbp
000000010000be04	41 57 	pushq	%r15
000000010000be06	41 56 	pushq	%r14
000000010000be08	53 	pushq	%rbx
000000010000be09	48 83 ec 18 	subq	$0x18, %rsp
000000010000be0d	48 89 d3 	movq	%rdx, %rbx
000000010000be10	49 89 fe 	movq	%rdi, %r14
000000010000be13	48 8b 35 de ab 01 00 	movq	0x1abde(%rip), %rsi ## Objc selector ref: locationInWindow
000000010000be1a	4c 8b 3d 1f a2 01 00 	movq	0x1a21f(%rip), %r15 ## Objc message: -[%rdi locationInWindow]
000000010000be21	48 89 df 	movq	%rbx, %rdi
000000010000be24	41 ff d7 	callq	*%r15
000000010000be27	f2 0f 11 45 e0 	movsd	%xmm0, -0x20(%rbp)
000000010000be2c	f2 0f 11 4d d8 	movsd	%xmm1, -0x28(%rbp)
000000010000be31	48 8b 35 c8 ab 01 00 	movq	0x1abc8(%rip), %rsi ## Objc selector ref: type
000000010000be38	48 89 df 	movq	%rbx, %rdi
000000010000be3b	41 ff d7 	callq	*%r15
000000010000be3e	48 83 f8 1b 	cmpq	$0x1b, %rax
000000010000be42	77 34 	ja	0x10000be78
000000010000be44	bf 01 00 00 00 	movl	$0x1, %edi
000000010000be49	b9 46 00 00 00 	movl	$0x46, %ecx
000000010000be4e	48 0f a3 c1 	btq	%rax, %rcx
000000010000be52	72 26 	jb	0x10000be7a
000000010000be54	b9 98 00 00 00 	movl	$0x98, %ecx
000000010000be59	48 0f a3 c1 	btq	%rax, %rcx
000000010000be5d	72 12 	jb	0x10000be71
000000010000be5f	b9 00 00 00 0e 	movl	$0xe000000, %ecx
000000010000be64	48 0f a3 c1 	btq	%rax, %rcx
000000010000be68	73 0e 	jae	0x10000be78
000000010000be6a	bf 03 00 00 00 	movl	$0x3, %edi
000000010000be6f	eb 09 	jmp	0x10000be7a
000000010000be71	bf 02 00 00 00 	movl	$0x2, %edi
000000010000be76	eb 02 	jmp	0x10000be7a
000000010000be78	31 ff 	xorl	%edi, %edi
000000010000be7a	48 8b 05 57 ad 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000be81	4d 8b 44 06 20 	movq	0x20(%r14,%rax), %r8
000000010000be86	4d 85 c0 	testq	%r8, %r8
000000010000be89	74 32 	je	0x10000bebd
000000010000be8b	f2 0f 2c 75 e0 	cvttsd2si	-0x20(%rbp), %esi
000000010000be90	48 8b 05 69 ad 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rax
000000010000be97	f2 0f 2c 55 d8 	cvttsd2si	-0x28(%rbp), %edx
000000010000be9c	f7 d2 	notl	%edx
000000010000be9e	41 03 14 06 	addl	(%r14,%rax), %edx
000000010000bea2	48 8b 05 37 ad 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000bea9	49 8b 4c 06 20 	movq	0x20(%r14,%rax), %rcx
000000010000beae	31 c0 	xorl	%eax, %eax
000000010000beb0	48 83 c4 18 	addq	$0x18, %rsp
000000010000beb4	5b 	popq	%rbx
000000010000beb5	41 5e 	popq	%r14
000000010000beb7	41 5f 	popq	%r15
000000010000beb9	5d 	popq	%rbp
000000010000beba	41 ff e0 	jmpq	*%r8
000000010000bebd	48 83 c4 18 	addq	$0x18, %rsp
000000010000bec1	5b 	popq	%rbx
000000010000bec2	41 5e 	popq	%r14
000000010000bec4	41 5f 	popq	%r15
000000010000bec6	5d 	popq	%rbp
000000010000bec7	c3 	retq
000000010000bec8	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent rightMouseDown:]:
000000010000bed0	55 	pushq	%rbp
000000010000bed1	48 89 e5 	movq	%rsp, %rbp
000000010000bed4	41 57 	pushq	%r15
000000010000bed6	41 56 	pushq	%r14
000000010000bed8	53 	pushq	%rbx
000000010000bed9	48 83 ec 18 	subq	$0x18, %rsp
000000010000bedd	48 89 d3 	movq	%rdx, %rbx
000000010000bee0	49 89 fe 	movq	%rdi, %r14
000000010000bee3	48 8b 35 0e ab 01 00 	movq	0x1ab0e(%rip), %rsi ## Objc selector ref: locationInWindow
000000010000beea	4c 8b 3d 4f a1 01 00 	movq	0x1a14f(%rip), %r15 ## Objc message: -[%rdi locationInWindow]
000000010000bef1	48 89 df 	movq	%rbx, %rdi
000000010000bef4	41 ff d7 	callq	*%r15
000000010000bef7	f2 0f 11 45 e0 	movsd	%xmm0, -0x20(%rbp)
000000010000befc	f2 0f 11 4d d8 	movsd	%xmm1, -0x28(%rbp)
000000010000bf01	48 8b 35 f8 aa 01 00 	movq	0x1aaf8(%rip), %rsi ## Objc selector ref: type
000000010000bf08	48 89 df 	movq	%rbx, %rdi
000000010000bf0b	41 ff d7 	callq	*%r15
000000010000bf0e	48 83 f8 1b 	cmpq	$0x1b, %rax
000000010000bf12	77 34 	ja	0x10000bf48
000000010000bf14	bf 01 00 00 00 	movl	$0x1, %edi
000000010000bf19	b9 46 00 00 00 	movl	$0x46, %ecx
000000010000bf1e	48 0f a3 c1 	btq	%rax, %rcx
000000010000bf22	72 26 	jb	0x10000bf4a
000000010000bf24	b9 98 00 00 00 	movl	$0x98, %ecx
000000010000bf29	48 0f a3 c1 	btq	%rax, %rcx
000000010000bf2d	72 12 	jb	0x10000bf41
000000010000bf2f	b9 00 00 00 0e 	movl	$0xe000000, %ecx
000000010000bf34	48 0f a3 c1 	btq	%rax, %rcx
000000010000bf38	73 0e 	jae	0x10000bf48
000000010000bf3a	bf 03 00 00 00 	movl	$0x3, %edi
000000010000bf3f	eb 09 	jmp	0x10000bf4a
000000010000bf41	bf 02 00 00 00 	movl	$0x2, %edi
000000010000bf46	eb 02 	jmp	0x10000bf4a
000000010000bf48	31 ff 	xorl	%edi, %edi
000000010000bf4a	48 8b 05 87 ac 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000bf51	4d 8b 44 06 20 	movq	0x20(%r14,%rax), %r8
000000010000bf56	4d 85 c0 	testq	%r8, %r8
000000010000bf59	74 32 	je	0x10000bf8d
000000010000bf5b	f2 0f 2c 75 e0 	cvttsd2si	-0x20(%rbp), %esi
000000010000bf60	48 8b 05 99 ac 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rax
000000010000bf67	f2 0f 2c 55 d8 	cvttsd2si	-0x28(%rbp), %edx
000000010000bf6c	f7 d2 	notl	%edx
000000010000bf6e	41 03 14 06 	addl	(%r14,%rax), %edx
000000010000bf72	48 8b 05 67 ac 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000bf79	49 8b 4c 06 20 	movq	0x20(%r14,%rax), %rcx
000000010000bf7e	31 c0 	xorl	%eax, %eax
000000010000bf80	48 83 c4 18 	addq	$0x18, %rsp
000000010000bf84	5b 	popq	%rbx
000000010000bf85	41 5e 	popq	%r14
000000010000bf87	41 5f 	popq	%r15
000000010000bf89	5d 	popq	%rbp
000000010000bf8a	41 ff e0 	jmpq	*%r8
000000010000bf8d	48 83 c4 18 	addq	$0x18, %rsp
000000010000bf91	5b 	popq	%rbx
000000010000bf92	41 5e 	popq	%r14
000000010000bf94	41 5f 	popq	%r15
000000010000bf96	5d 	popq	%rbp
000000010000bf97	c3 	retq
000000010000bf98	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent otherMouseDown:]:
000000010000bfa0	55 	pushq	%rbp
000000010000bfa1	48 89 e5 	movq	%rsp, %rbp
000000010000bfa4	41 57 	pushq	%r15
000000010000bfa6	41 56 	pushq	%r14
000000010000bfa8	53 	pushq	%rbx
000000010000bfa9	48 83 ec 18 	subq	$0x18, %rsp
000000010000bfad	48 89 d3 	movq	%rdx, %rbx
000000010000bfb0	49 89 fe 	movq	%rdi, %r14
000000010000bfb3	48 8b 35 3e aa 01 00 	movq	0x1aa3e(%rip), %rsi ## Objc selector ref: locationInWindow
000000010000bfba	4c 8b 3d 7f a0 01 00 	movq	0x1a07f(%rip), %r15 ## Objc message: -[%rdi locationInWindow]
000000010000bfc1	48 89 df 	movq	%rbx, %rdi
000000010000bfc4	41 ff d7 	callq	*%r15
000000010000bfc7	f2 0f 11 45 e0 	movsd	%xmm0, -0x20(%rbp)
000000010000bfcc	f2 0f 11 4d d8 	movsd	%xmm1, -0x28(%rbp)
000000010000bfd1	48 8b 35 28 aa 01 00 	movq	0x1aa28(%rip), %rsi ## Objc selector ref: type
000000010000bfd8	48 89 df 	movq	%rbx, %rdi
000000010000bfdb	41 ff d7 	callq	*%r15
000000010000bfde	48 83 f8 1b 	cmpq	$0x1b, %rax
000000010000bfe2	77 34 	ja	0x10000c018
000000010000bfe4	bf 01 00 00 00 	movl	$0x1, %edi
000000010000bfe9	b9 46 00 00 00 	movl	$0x46, %ecx
000000010000bfee	48 0f a3 c1 	btq	%rax, %rcx
000000010000bff2	72 26 	jb	0x10000c01a
000000010000bff4	b9 98 00 00 00 	movl	$0x98, %ecx
000000010000bff9	48 0f a3 c1 	btq	%rax, %rcx
000000010000bffd	72 12 	jb	0x10000c011
000000010000bfff	b9 00 00 00 0e 	movl	$0xe000000, %ecx
000000010000c004	48 0f a3 c1 	btq	%rax, %rcx
000000010000c008	73 0e 	jae	0x10000c018
000000010000c00a	bf 03 00 00 00 	movl	$0x3, %edi
000000010000c00f	eb 09 	jmp	0x10000c01a
000000010000c011	bf 02 00 00 00 	movl	$0x2, %edi
000000010000c016	eb 02 	jmp	0x10000c01a
000000010000c018	31 ff 	xorl	%edi, %edi
000000010000c01a	48 8b 05 b7 ab 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000c021	4d 8b 44 06 20 	movq	0x20(%r14,%rax), %r8
000000010000c026	4d 85 c0 	testq	%r8, %r8
000000010000c029	74 32 	je	0x10000c05d
000000010000c02b	f2 0f 2c 75 e0 	cvttsd2si	-0x20(%rbp), %esi
000000010000c030	48 8b 05 c9 ab 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rax
000000010000c037	f2 0f 2c 55 d8 	cvttsd2si	-0x28(%rbp), %edx
000000010000c03c	f7 d2 	notl	%edx
000000010000c03e	41 03 14 06 	addl	(%r14,%rax), %edx
000000010000c042	48 8b 05 97 ab 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000c049	49 8b 4c 06 20 	movq	0x20(%r14,%rax), %rcx
000000010000c04e	31 c0 	xorl	%eax, %eax
000000010000c050	48 83 c4 18 	addq	$0x18, %rsp
000000010000c054	5b 	popq	%rbx
000000010000c055	41 5e 	popq	%r14
000000010000c057	41 5f 	popq	%r15
000000010000c059	5d 	popq	%rbp
000000010000c05a	41 ff e0 	jmpq	*%r8
000000010000c05d	48 83 c4 18 	addq	$0x18, %rsp
000000010000c061	5b 	popq	%rbx
000000010000c062	41 5e 	popq	%r14
000000010000c064	41 5f 	popq	%r15
000000010000c066	5d 	popq	%rbp
000000010000c067	c3 	retq
000000010000c068	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent mouseUp:]:
000000010000c070	55 	pushq	%rbp
000000010000c071	48 89 e5 	movq	%rsp, %rbp
000000010000c074	41 57 	pushq	%r15
000000010000c076	41 56 	pushq	%r14
000000010000c078	53 	pushq	%rbx
000000010000c079	48 83 ec 18 	subq	$0x18, %rsp
000000010000c07d	48 89 d3 	movq	%rdx, %rbx
000000010000c080	49 89 fe 	movq	%rdi, %r14
000000010000c083	48 8b 35 6e a9 01 00 	movq	0x1a96e(%rip), %rsi ## Objc selector ref: locationInWindow
000000010000c08a	4c 8b 3d af 9f 01 00 	movq	0x19faf(%rip), %r15 ## Objc message: -[%rdi locationInWindow]
000000010000c091	48 89 df 	movq	%rbx, %rdi
000000010000c094	41 ff d7 	callq	*%r15
000000010000c097	f2 0f 11 45 e0 	movsd	%xmm0, -0x20(%rbp)
000000010000c09c	f2 0f 11 4d d8 	movsd	%xmm1, -0x28(%rbp)
000000010000c0a1	48 8b 35 58 a9 01 00 	movq	0x1a958(%rip), %rsi ## Objc selector ref: type
000000010000c0a8	48 89 df 	movq	%rbx, %rdi
000000010000c0ab	41 ff d7 	callq	*%r15
000000010000c0ae	48 83 f8 1b 	cmpq	$0x1b, %rax
000000010000c0b2	77 34 	ja	0x10000c0e8
000000010000c0b4	bf 01 00 00 00 	movl	$0x1, %edi
000000010000c0b9	b9 46 00 00 00 	movl	$0x46, %ecx
000000010000c0be	48 0f a3 c1 	btq	%rax, %rcx
000000010000c0c2	72 26 	jb	0x10000c0ea
000000010000c0c4	b9 98 00 00 00 	movl	$0x98, %ecx
000000010000c0c9	48 0f a3 c1 	btq	%rax, %rcx
000000010000c0cd	72 12 	jb	0x10000c0e1
000000010000c0cf	b9 00 00 00 0e 	movl	$0xe000000, %ecx
000000010000c0d4	48 0f a3 c1 	btq	%rax, %rcx
000000010000c0d8	73 0e 	jae	0x10000c0e8
000000010000c0da	bf 03 00 00 00 	movl	$0x3, %edi
000000010000c0df	eb 09 	jmp	0x10000c0ea
000000010000c0e1	bf 02 00 00 00 	movl	$0x2, %edi
000000010000c0e6	eb 02 	jmp	0x10000c0ea
000000010000c0e8	31 ff 	xorl	%edi, %edi
000000010000c0ea	48 8b 05 e7 aa 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000c0f1	4d 8b 44 06 28 	movq	0x28(%r14,%rax), %r8
000000010000c0f6	4d 85 c0 	testq	%r8, %r8
000000010000c0f9	74 32 	je	0x10000c12d
000000010000c0fb	f2 0f 2c 75 e0 	cvttsd2si	-0x20(%rbp), %esi
000000010000c100	48 8b 05 f9 aa 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rax
000000010000c107	f2 0f 2c 55 d8 	cvttsd2si	-0x28(%rbp), %edx
000000010000c10c	f7 d2 	notl	%edx
000000010000c10e	41 03 14 06 	addl	(%r14,%rax), %edx
000000010000c112	48 8b 05 c7 aa 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000c119	49 8b 4c 06 28 	movq	0x28(%r14,%rax), %rcx
000000010000c11e	31 c0 	xorl	%eax, %eax
000000010000c120	48 83 c4 18 	addq	$0x18, %rsp
000000010000c124	5b 	popq	%rbx
000000010000c125	41 5e 	popq	%r14
000000010000c127	41 5f 	popq	%r15
000000010000c129	5d 	popq	%rbp
000000010000c12a	41 ff e0 	jmpq	*%r8
000000010000c12d	48 83 c4 18 	addq	$0x18, %rsp
000000010000c131	5b 	popq	%rbx
000000010000c132	41 5e 	popq	%r14
000000010000c134	41 5f 	popq	%r15
000000010000c136	5d 	popq	%rbp
000000010000c137	c3 	retq
000000010000c138	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent rightMouseUp:]:
000000010000c140	55 	pushq	%rbp
000000010000c141	48 89 e5 	movq	%rsp, %rbp
000000010000c144	41 57 	pushq	%r15
000000010000c146	41 56 	pushq	%r14
000000010000c148	53 	pushq	%rbx
000000010000c149	48 83 ec 18 	subq	$0x18, %rsp
000000010000c14d	48 89 d3 	movq	%rdx, %rbx
000000010000c150	49 89 fe 	movq	%rdi, %r14
000000010000c153	48 8b 35 9e a8 01 00 	movq	0x1a89e(%rip), %rsi ## Objc selector ref: locationInWindow
000000010000c15a	4c 8b 3d df 9e 01 00 	movq	0x19edf(%rip), %r15 ## Objc message: -[%rdi locationInWindow]
000000010000c161	48 89 df 	movq	%rbx, %rdi
000000010000c164	41 ff d7 	callq	*%r15
000000010000c167	f2 0f 11 45 e0 	movsd	%xmm0, -0x20(%rbp)
000000010000c16c	f2 0f 11 4d d8 	movsd	%xmm1, -0x28(%rbp)
000000010000c171	48 8b 35 88 a8 01 00 	movq	0x1a888(%rip), %rsi ## Objc selector ref: type
000000010000c178	48 89 df 	movq	%rbx, %rdi
000000010000c17b	41 ff d7 	callq	*%r15
000000010000c17e	48 83 f8 1b 	cmpq	$0x1b, %rax
000000010000c182	77 34 	ja	0x10000c1b8
000000010000c184	bf 01 00 00 00 	movl	$0x1, %edi
000000010000c189	b9 46 00 00 00 	movl	$0x46, %ecx
000000010000c18e	48 0f a3 c1 	btq	%rax, %rcx
000000010000c192	72 26 	jb	0x10000c1ba
000000010000c194	b9 98 00 00 00 	movl	$0x98, %ecx
000000010000c199	48 0f a3 c1 	btq	%rax, %rcx
000000010000c19d	72 12 	jb	0x10000c1b1
000000010000c19f	b9 00 00 00 0e 	movl	$0xe000000, %ecx
000000010000c1a4	48 0f a3 c1 	btq	%rax, %rcx
000000010000c1a8	73 0e 	jae	0x10000c1b8
000000010000c1aa	bf 03 00 00 00 	movl	$0x3, %edi
000000010000c1af	eb 09 	jmp	0x10000c1ba
000000010000c1b1	bf 02 00 00 00 	movl	$0x2, %edi
000000010000c1b6	eb 02 	jmp	0x10000c1ba
000000010000c1b8	31 ff 	xorl	%edi, %edi
000000010000c1ba	48 8b 05 17 aa 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000c1c1	4d 8b 44 06 28 	movq	0x28(%r14,%rax), %r8
000000010000c1c6	4d 85 c0 	testq	%r8, %r8
000000010000c1c9	74 32 	je	0x10000c1fd
000000010000c1cb	f2 0f 2c 75 e0 	cvttsd2si	-0x20(%rbp), %esi
000000010000c1d0	48 8b 05 29 aa 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rax
000000010000c1d7	f2 0f 2c 55 d8 	cvttsd2si	-0x28(%rbp), %edx
000000010000c1dc	f7 d2 	notl	%edx
000000010000c1de	41 03 14 06 	addl	(%r14,%rax), %edx
000000010000c1e2	48 8b 05 f7 a9 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000c1e9	49 8b 4c 06 28 	movq	0x28(%r14,%rax), %rcx
000000010000c1ee	31 c0 	xorl	%eax, %eax
000000010000c1f0	48 83 c4 18 	addq	$0x18, %rsp
000000010000c1f4	5b 	popq	%rbx
000000010000c1f5	41 5e 	popq	%r14
000000010000c1f7	41 5f 	popq	%r15
000000010000c1f9	5d 	popq	%rbp
000000010000c1fa	41 ff e0 	jmpq	*%r8
000000010000c1fd	48 83 c4 18 	addq	$0x18, %rsp
000000010000c201	5b 	popq	%rbx
000000010000c202	41 5e 	popq	%r14
000000010000c204	41 5f 	popq	%r15
000000010000c206	5d 	popq	%rbp
000000010000c207	c3 	retq
000000010000c208	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent otherMouseUp:]:
000000010000c210	55 	pushq	%rbp
000000010000c211	48 89 e5 	movq	%rsp, %rbp
000000010000c214	41 57 	pushq	%r15
000000010000c216	41 56 	pushq	%r14
000000010000c218	53 	pushq	%rbx
000000010000c219	48 83 ec 18 	subq	$0x18, %rsp
000000010000c21d	48 89 d3 	movq	%rdx, %rbx
000000010000c220	49 89 fe 	movq	%rdi, %r14
000000010000c223	48 8b 35 ce a7 01 00 	movq	0x1a7ce(%rip), %rsi ## Objc selector ref: locationInWindow
000000010000c22a	4c 8b 3d 0f 9e 01 00 	movq	0x19e0f(%rip), %r15 ## Objc message: -[%rdi locationInWindow]
000000010000c231	48 89 df 	movq	%rbx, %rdi
000000010000c234	41 ff d7 	callq	*%r15
000000010000c237	f2 0f 11 45 e0 	movsd	%xmm0, -0x20(%rbp)
000000010000c23c	f2 0f 11 4d d8 	movsd	%xmm1, -0x28(%rbp)
000000010000c241	48 8b 35 b8 a7 01 00 	movq	0x1a7b8(%rip), %rsi ## Objc selector ref: type
000000010000c248	48 89 df 	movq	%rbx, %rdi
000000010000c24b	41 ff d7 	callq	*%r15
000000010000c24e	48 83 f8 1b 	cmpq	$0x1b, %rax
000000010000c252	77 34 	ja	0x10000c288
000000010000c254	bf 01 00 00 00 	movl	$0x1, %edi
000000010000c259	b9 46 00 00 00 	movl	$0x46, %ecx
000000010000c25e	48 0f a3 c1 	btq	%rax, %rcx
000000010000c262	72 26 	jb	0x10000c28a
000000010000c264	b9 98 00 00 00 	movl	$0x98, %ecx
000000010000c269	48 0f a3 c1 	btq	%rax, %rcx
000000010000c26d	72 12 	jb	0x10000c281
000000010000c26f	b9 00 00 00 0e 	movl	$0xe000000, %ecx
000000010000c274	48 0f a3 c1 	btq	%rax, %rcx
000000010000c278	73 0e 	jae	0x10000c288
000000010000c27a	bf 03 00 00 00 	movl	$0x3, %edi
000000010000c27f	eb 09 	jmp	0x10000c28a
000000010000c281	bf 02 00 00 00 	movl	$0x2, %edi
000000010000c286	eb 02 	jmp	0x10000c28a
000000010000c288	31 ff 	xorl	%edi, %edi
000000010000c28a	48 8b 05 47 a9 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000c291	4d 8b 44 06 28 	movq	0x28(%r14,%rax), %r8
000000010000c296	4d 85 c0 	testq	%r8, %r8
000000010000c299	74 32 	je	0x10000c2cd
000000010000c29b	f2 0f 2c 75 e0 	cvttsd2si	-0x20(%rbp), %esi
000000010000c2a0	48 8b 05 59 a9 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rax
000000010000c2a7	f2 0f 2c 55 d8 	cvttsd2si	-0x28(%rbp), %edx
000000010000c2ac	f7 d2 	notl	%edx
000000010000c2ae	41 03 14 06 	addl	(%r14,%rax), %edx
000000010000c2b2	48 8b 05 27 a9 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000c2b9	49 8b 4c 06 28 	movq	0x28(%r14,%rax), %rcx
000000010000c2be	31 c0 	xorl	%eax, %eax
000000010000c2c0	48 83 c4 18 	addq	$0x18, %rsp
000000010000c2c4	5b 	popq	%rbx
000000010000c2c5	41 5e 	popq	%r14
000000010000c2c7	41 5f 	popq	%r15
000000010000c2c9	5d 	popq	%rbp
000000010000c2ca	41 ff e0 	jmpq	*%r8
000000010000c2cd	48 83 c4 18 	addq	$0x18, %rsp
000000010000c2d1	5b 	popq	%rbx
000000010000c2d2	41 5e 	popq	%r14
000000010000c2d4	41 5f 	popq	%r15
000000010000c2d6	5d 	popq	%rbp
000000010000c2d7	c3 	retq
000000010000c2d8	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent mouseMoved:]:
000000010000c2e0	55 	pushq	%rbp
000000010000c2e1	48 89 e5 	movq	%rsp, %rbp
000000010000c2e4	53 	pushq	%rbx
000000010000c2e5	50 	pushq	%rax
000000010000c2e6	48 89 fb 	movq	%rdi, %rbx
000000010000c2e9	48 8b 35 08 a7 01 00 	movq	0x1a708(%rip), %rsi ## Objc selector ref: locationInWindow
000000010000c2f0	48 89 d7 	movq	%rdx, %rdi
000000010000c2f3	ff 15 47 9d 01 00 	callq	*0x19d47(%rip) ## Objc message: -[%rdi locationInWindow]
000000010000c2f9	48 8b 05 d8 a8 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000c300	48 8b 4c 03 30 	movq	0x30(%rbx,%rax), %rcx
000000010000c305	48 85 c9 	testq	%rcx, %rcx
000000010000c308	74 2a 	je	0x10000c334
000000010000c30a	f2 0f 2c f8 	cvttsd2si	%xmm0, %edi
000000010000c30e	48 8b 05 eb a8 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rax
000000010000c315	f2 0f 2c f1 	cvttsd2si	%xmm1, %esi
000000010000c319	f7 d6 	notl	%esi
000000010000c31b	03 34 03 	addl	(%rbx,%rax), %esi
000000010000c31e	48 8b 05 bb a8 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000c325	48 8b 54 03 30 	movq	0x30(%rbx,%rax), %rdx
000000010000c32a	31 c0 	xorl	%eax, %eax
000000010000c32c	48 83 c4 08 	addq	$0x8, %rsp
000000010000c330	5b 	popq	%rbx
000000010000c331	5d 	popq	%rbp
000000010000c332	ff e1 	jmpq	*%rcx
000000010000c334	48 83 c4 08 	addq	$0x8, %rsp
000000010000c338	5b 	popq	%rbx
000000010000c339	5d 	popq	%rbp
000000010000c33a	c3 	retq
000000010000c33b	0f 1f 44 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent mouseDragged:]:
000000010000c340	55 	pushq	%rbp
000000010000c341	48 89 e5 	movq	%rsp, %rbp
000000010000c344	53 	pushq	%rbx
000000010000c345	50 	pushq	%rax
000000010000c346	48 89 fb 	movq	%rdi, %rbx
000000010000c349	48 8b 35 a8 a6 01 00 	movq	0x1a6a8(%rip), %rsi ## Objc selector ref: locationInWindow
000000010000c350	48 89 d7 	movq	%rdx, %rdi
000000010000c353	ff 15 e7 9c 01 00 	callq	*0x19ce7(%rip) ## Objc message: -[%rdi locationInWindow]
000000010000c359	48 8b 05 78 a8 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000c360	48 8b 4c 03 30 	movq	0x30(%rbx,%rax), %rcx
000000010000c365	48 85 c9 	testq	%rcx, %rcx
000000010000c368	74 2a 	je	0x10000c394
000000010000c36a	f2 0f 2c f8 	cvttsd2si	%xmm0, %edi
000000010000c36e	48 8b 05 8b a8 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rax
000000010000c375	f2 0f 2c f1 	cvttsd2si	%xmm1, %esi
000000010000c379	f7 d6 	notl	%esi
000000010000c37b	03 34 03 	addl	(%rbx,%rax), %esi
000000010000c37e	48 8b 05 5b a8 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000c385	48 8b 54 03 30 	movq	0x30(%rbx,%rax), %rdx
000000010000c38a	31 c0 	xorl	%eax, %eax
000000010000c38c	48 83 c4 08 	addq	$0x8, %rsp
000000010000c390	5b 	popq	%rbx
000000010000c391	5d 	popq	%rbp
000000010000c392	ff e1 	jmpq	*%rcx
000000010000c394	48 83 c4 08 	addq	$0x8, %rsp
000000010000c398	5b 	popq	%rbx
000000010000c399	5d 	popq	%rbp
000000010000c39a	c3 	retq
000000010000c39b	0f 1f 44 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent rightMouseDragged:]:
000000010000c3a0	55 	pushq	%rbp
000000010000c3a1	48 89 e5 	movq	%rsp, %rbp
000000010000c3a4	53 	pushq	%rbx
000000010000c3a5	50 	pushq	%rax
000000010000c3a6	48 89 fb 	movq	%rdi, %rbx
000000010000c3a9	48 8b 35 48 a6 01 00 	movq	0x1a648(%rip), %rsi ## Objc selector ref: locationInWindow
000000010000c3b0	48 89 d7 	movq	%rdx, %rdi
000000010000c3b3	ff 15 87 9c 01 00 	callq	*0x19c87(%rip) ## Objc message: -[%rdi locationInWindow]
000000010000c3b9	48 8b 05 18 a8 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000c3c0	48 8b 4c 03 30 	movq	0x30(%rbx,%rax), %rcx
000000010000c3c5	48 85 c9 	testq	%rcx, %rcx
000000010000c3c8	74 2a 	je	0x10000c3f4
000000010000c3ca	f2 0f 2c f8 	cvttsd2si	%xmm0, %edi
000000010000c3ce	48 8b 05 2b a8 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rax
000000010000c3d5	f2 0f 2c f1 	cvttsd2si	%xmm1, %esi
000000010000c3d9	f7 d6 	notl	%esi
000000010000c3db	03 34 03 	addl	(%rbx,%rax), %esi
000000010000c3de	48 8b 05 fb a7 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000c3e5	48 8b 54 03 30 	movq	0x30(%rbx,%rax), %rdx
000000010000c3ea	31 c0 	xorl	%eax, %eax
000000010000c3ec	48 83 c4 08 	addq	$0x8, %rsp
000000010000c3f0	5b 	popq	%rbx
000000010000c3f1	5d 	popq	%rbp
000000010000c3f2	ff e1 	jmpq	*%rcx
000000010000c3f4	48 83 c4 08 	addq	$0x8, %rsp
000000010000c3f8	5b 	popq	%rbx
000000010000c3f9	5d 	popq	%rbp
000000010000c3fa	c3 	retq
000000010000c3fb	0f 1f 44 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent otherMouseDragged:]:
000000010000c400	55 	pushq	%rbp
000000010000c401	48 89 e5 	movq	%rsp, %rbp
000000010000c404	53 	pushq	%rbx
000000010000c405	50 	pushq	%rax
000000010000c406	48 89 fb 	movq	%rdi, %rbx
000000010000c409	48 8b 35 e8 a5 01 00 	movq	0x1a5e8(%rip), %rsi ## Objc selector ref: locationInWindow
000000010000c410	48 89 d7 	movq	%rdx, %rdi
000000010000c413	ff 15 27 9c 01 00 	callq	*0x19c27(%rip) ## Objc message: -[%rdi locationInWindow]
000000010000c419	48 8b 05 b8 a7 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000c420	48 8b 4c 03 30 	movq	0x30(%rbx,%rax), %rcx
000000010000c425	48 85 c9 	testq	%rcx, %rcx
000000010000c428	74 2a 	je	0x10000c454
000000010000c42a	f2 0f 2c f8 	cvttsd2si	%xmm0, %edi
000000010000c42e	48 8b 05 cb a7 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rax
000000010000c435	f2 0f 2c f1 	cvttsd2si	%xmm1, %esi
000000010000c439	f7 d6 	notl	%esi
000000010000c43b	03 34 03 	addl	(%rbx,%rax), %esi
000000010000c43e	48 8b 05 9b a7 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000c445	48 8b 54 03 30 	movq	0x30(%rbx,%rax), %rdx
000000010000c44a	31 c0 	xorl	%eax, %eax
000000010000c44c	48 83 c4 08 	addq	$0x8, %rsp
000000010000c450	5b 	popq	%rbx
000000010000c451	5d 	popq	%rbp
000000010000c452	ff e1 	jmpq	*%rcx
000000010000c454	48 83 c4 08 	addq	$0x8, %rsp
000000010000c458	5b 	popq	%rbx
000000010000c459	5d 	popq	%rbp
000000010000c45a	c3 	retq
000000010000c45b	0f 1f 44 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent scrollWheel:]:
000000010000c460	55 	pushq	%rbp
000000010000c461	48 89 e5 	movq	%rsp, %rbp
000000010000c464	41 57 	pushq	%r15
000000010000c466	41 56 	pushq	%r14
000000010000c468	41 55 	pushq	%r13
000000010000c46a	41 54 	pushq	%r12
000000010000c46c	53 	pushq	%rbx
000000010000c46d	48 83 ec 18 	subq	$0x18, %rsp
000000010000c471	49 89 d5 	movq	%rdx, %r13
000000010000c474	49 89 fe 	movq	%rdi, %r14
000000010000c477	4c 8b 3d 5a a7 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %r15
000000010000c47e	4b 83 7c 3e 20 00 	cmpq	$0x0, 0x20(%r14,%r15)
000000010000c484	0f 84 cf 00 00 00 	je	0x10000c559
000000010000c48a	48 8b 35 67 a5 01 00 	movq	0x1a567(%rip), %rsi ## Objc selector ref: locationInWindow
000000010000c491	4c 8b 25 a8 9b 01 00 	movq	0x19ba8(%rip), %r12 ## Objc message: -[%rdi locationInWindow]
000000010000c498	4c 89 ef 	movq	%r13, %rdi
000000010000c49b	41 ff d4 	callq	*%r12
000000010000c49e	f2 0f 11 45 d0 	movsd	%xmm0, -0x30(%rbp)
000000010000c4a3	f2 0f 11 4d c8 	movsd	%xmm1, -0x38(%rbp)
000000010000c4a8	48 8b 35 59 a5 01 00 	movq	0x1a559(%rip), %rsi ## Objc selector ref: deltaY
000000010000c4af	4c 89 ef 	movq	%r13, %rdi
000000010000c4b2	41 ff d4 	callq	*%r12
000000010000c4b5	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
000000010000c4b9	f3 0f 5a c0 	cvtss2sd	%xmm0, %xmm0
000000010000c4bd	31 c0 	xorl	%eax, %eax
000000010000c4bf	66 0f 2e 05 e9 2b 00 00 	ucomisd	0x2be9(%rip), %xmm0
000000010000c4c7	0f 97 c0 	seta	%al
000000010000c4ca	c1 e0 02 	shll	$0x2, %eax
000000010000c4cd	f2 0f 10 0d 5b 2c 00 00 	movsd	0x2c5b(%rip), %xmm1
000000010000c4d5	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
000000010000c4d9	bb 05 00 00 00 	movl	$0x5, %ebx
000000010000c4de	0f 46 d8 	cmovbel	%eax, %ebx
000000010000c4e1	48 8b 35 28 a5 01 00 	movq	0x1a528(%rip), %rsi ## Objc selector ref: deltaX
000000010000c4e8	4c 89 ef 	movq	%r13, %rdi
000000010000c4eb	41 ff d4 	callq	*%r12
000000010000c4ee	f2 0f 5a c0 	cvtsd2ss	%xmm0, %xmm0
000000010000c4f2	f3 0f 5a c0 	cvtss2sd	%xmm0, %xmm0
000000010000c4f6	66 0f 2e 05 b2 2b 00 00 	ucomisd	0x2bb2(%rip), %xmm0
000000010000c4fe	b8 06 00 00 00 	movl	$0x6, %eax
000000010000c503	0f 46 c3 	cmovbel	%ebx, %eax
000000010000c506	f2 0f 10 0d 22 2c 00 00 	movsd	0x2c22(%rip), %xmm1
000000010000c50e	66 0f 2e c8 	ucomisd	%xmm0, %xmm1
000000010000c512	bf 07 00 00 00 	movl	$0x7, %edi
000000010000c517	0f 46 f8 	cmovbel	%eax, %edi
000000010000c51a	85 ff 	testl	%edi, %edi
000000010000c51c	74 3b 	je	0x10000c559
000000010000c51e	4f 8b 44 3e 20 	movq	0x20(%r14,%r15), %r8
000000010000c523	f2 0f 2c 75 d0 	cvttsd2si	-0x30(%rbp), %esi
000000010000c528	48 8b 05 d1 a6 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.size_y(%rip), %rax
000000010000c52f	f2 0f 2c 55 c8 	cvttsd2si	-0x38(%rbp), %edx
000000010000c534	f7 d2 	notl	%edx
000000010000c536	41 03 14 06 	addl	(%r14,%rax), %edx
000000010000c53a	48 8b 05 9f a6 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000c541	49 8b 4c 06 20 	movq	0x20(%r14,%rax), %rcx
000000010000c546	31 c0 	xorl	%eax, %eax
000000010000c548	48 83 c4 18 	addq	$0x18, %rsp
000000010000c54c	5b 	popq	%rbx
000000010000c54d	41 5c 	popq	%r12
000000010000c54f	41 5d 	popq	%r13
000000010000c551	41 5e 	popq	%r14
000000010000c553	41 5f 	popq	%r15
000000010000c555	5d 	popq	%rbp
000000010000c556	41 ff e0 	jmpq	*%r8
000000010000c559	48 83 c4 18 	addq	$0x18, %rsp
000000010000c55d	5b 	popq	%rbx
000000010000c55e	41 5c 	popq	%r12
000000010000c560	41 5d 	popq	%r13
000000010000c562	41 5e 	popq	%r14
000000010000c564	41 5f 	popq	%r15
000000010000c566	5d 	popq	%rbp
000000010000c567	c3 	retq
000000010000c568	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent exposeNotification:]:
000000010000c570	55 	pushq	%rbp
000000010000c571	48 89 e5 	movq	%rsp, %rbp
000000010000c574	48 8b 05 5d a6 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000c57b	48 8b 4c 07 60 	movq	0x60(%rdi,%rax), %rcx
000000010000c580	48 85 c9 	testq	%rcx, %rcx
000000010000c583	74 11 	je	0x10000c596
000000010000c585	48 8b 05 54 a6 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000c58c	48 8b 7c 07 60 	movq	0x60(%rdi,%rax), %rdi
000000010000c591	31 c0 	xorl	%eax, %eax
000000010000c593	5d 	popq	%rbp
000000010000c594	ff e1 	jmpq	*%rcx
000000010000c596	5d 	popq	%rbp
000000010000c597	c3 	retq
000000010000c598	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
-[NSWindowEvent closeNotification:]:
000000010000c5a0	55 	pushq	%rbp
000000010000c5a1	48 89 e5 	movq	%rsp, %rbp
000000010000c5a4	48 8b 05 2d a6 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_funct(%rip), %rax
000000010000c5ab	48 8b 8c 07 88 00 00 00 	movq	0x88(%rdi,%rax), %rcx
000000010000c5b3	48 85 c9 	testq	%rcx, %rcx
000000010000c5b6	74 14 	je	0x10000c5cc
000000010000c5b8	48 8b 05 21 a6 01 00 	movq	_OBJC_IVAR_$_NSWindowEvent.event_param(%rip), %rax
000000010000c5bf	48 8b bc 07 88 00 00 00 	movq	0x88(%rdi,%rax), %rdi
000000010000c5c7	31 c0 	xorl	%eax, %eax
000000010000c5c9	5d 	popq	%rbp
000000010000c5ca	ff e1 	jmpq	*%rcx
000000010000c5cc	5d 	popq	%rbp
000000010000c5cd	c3 	retq
000000010000c5ce	66 90 	nop
-[NSWindowEvent deminiaturizeNotification:]:
000000010000c5d0	55 	pushq	%rbp
000000010000c5d1	48 89 e5 	movq	%rsp, %rbp
000000010000c5d4	48 8b 35 3d a4 01 00 	movq	0x1a43d(%rip), %rsi ## Objc selector ref: exposeNotification:
000000010000c5db	5d 	popq	%rbp
000000010000c5dc	ff 25 5e 9a 01 00 	jmpq	*0x19a5e(%rip) ## Objc message: -[%rdi exposeNotification:]
000000010000c5e2	66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
-[MlxWin initWithRect:andTitle:pfaAttrs:]:
000000010000c5f0	55 	pushq	%rbp
000000010000c5f1	48 89 e5 	movq	%rsp, %rbp
000000010000c5f4	41 57 	pushq	%r15
000000010000c5f6	41 56 	pushq	%r14
000000010000c5f8	41 55 	pushq	%r13
000000010000c5fa	41 54 	pushq	%r12
000000010000c5fc	53 	pushq	%rbx
000000010000c5fd	48 83 ec 38 	subq	$0x38, %rsp
000000010000c601	48 89 cb 	movq	%rcx, %rbx
000000010000c604	49 89 d7 	movq	%rdx, %r15
000000010000c607	49 89 fd 	movq	%rdi, %r13
000000010000c60a	48 8b 3d 6f a5 01 00 	movq	0x1a56f(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSOpenGLPixelFormat
000000010000c611	4c 8b 25 08 a4 01 00 	movq	0x1a408(%rip), %r12 ## Objc selector ref: alloc
000000010000c618	4c 8b 35 21 9a 01 00 	movq	0x19a21(%rip), %r14 ## Objc message: +[NSOpenGLPixelFormat alloc]
000000010000c61f	4c 89 e6 	movq	%r12, %rsi
000000010000c622	41 ff d6 	callq	*%r14
000000010000c625	48 8b 35 fc a3 01 00 	movq	0x1a3fc(%rip), %rsi ## Objc selector ref: initWithAttributes:
000000010000c62c	48 89 c7 	movq	%rax, %rdi
000000010000c62f	48 89 da 	movq	%rbx, %rdx
000000010000c632	41 ff d6 	callq	*%r14
000000010000c635	4c 89 6d c0 	movq	%r13, -0x40(%rbp)
000000010000c639	48 8b 0d 90 a5 01 00 	movq	0x1a590(%rip), %rcx ## Objc class ref: MlxWin
000000010000c640	48 89 4d c8 	movq	%rcx, -0x38(%rbp)
000000010000c644	48 8b 35 e5 a3 01 00 	movq	0x1a3e5(%rip), %rsi ## Objc selector ref: initWithFrame:pixelFormat:
000000010000c64b	48 8b 4d 28 	movq	0x28(%rbp), %rcx
000000010000c64f	48 89 4c 24 18 	movq	%rcx, 0x18(%rsp)
000000010000c654	48 8b 4d 20 	movq	0x20(%rbp), %rcx
000000010000c658	48 89 4c 24 10 	movq	%rcx, 0x10(%rsp)
000000010000c65d	48 8b 55 10 	movq	0x10(%rbp), %rdx
000000010000c661	48 8b 4d 18 	movq	0x18(%rbp), %rcx
000000010000c665	48 89 4c 24 08 	movq	%rcx, 0x8(%rsp)
000000010000c66a	48 89 14 24 	movq	%rdx, (%rsp)
000000010000c66e	48 8d 7d c0 	leaq	-0x40(%rbp), %rdi
000000010000c672	48 89 45 d0 	movq	%rax, -0x30(%rbp)
000000010000c676	48 89 c2 	movq	%rax, %rdx
000000010000c679	e8 10 1e 00 00 	callq	0x10000e48e ## Objc message: -[[%rdi super] initWithFrame:pixelFormat:]
000000010000c67e	48 89 c3 	movq	%rax, %rbx
000000010000c681	48 85 db 	testq	%rbx, %rbx
000000010000c684	0f 84 d0 01 00 00 	je	0x10000c85a
000000010000c68a	4c 8d 6d 10 	leaq	0x10(%rbp), %r13
000000010000c68e	48 8b 3d f3 a4 01 00 	movq	0x1a4f3(%rip), %rdi ## Objc class ref: NSWindowEvent
000000010000c695	4c 89 e6 	movq	%r12, %rsi
000000010000c698	41 ff d6 	callq	*%r14
000000010000c69b	48 8b 35 2e a3 01 00 	movq	0x1a32e(%rip), %rsi ## Objc selector ref: initWithContentRect:styleMask:backing:defer:
000000010000c6a2	49 8b 4d 18 	movq	0x18(%r13), %rcx
000000010000c6a6	48 89 4c 24 18 	movq	%rcx, 0x18(%rsp)
000000010000c6ab	49 8b 4d 10 	movq	0x10(%r13), %rcx
000000010000c6af	48 89 4c 24 10 	movq	%rcx, 0x10(%rsp)
000000010000c6b4	49 8b 4d 00 	movq	(%r13), %rcx
000000010000c6b8	49 8b 55 08 	movq	0x8(%r13), %rdx
000000010000c6bc	48 89 54 24 08 	movq	%rdx, 0x8(%rsp)
000000010000c6c1	48 89 0c 24 	movq	%rcx, (%rsp)
000000010000c6c5	ba 07 00 00 00 	movl	$0x7, %edx
000000010000c6ca	b9 02 00 00 00 	movl	$0x2, %ecx
000000010000c6cf	45 31 c0 	xorl	%r8d, %r8d
000000010000c6d2	48 89 c7 	movq	%rax, %rdi
000000010000c6d5	41 ff d6 	callq	*%r14
000000010000c6d8	4c 8b 2d 29 a5 01 00 	movq	_OBJC_IVAR_$_MlxWin.win(%rip), %r13
000000010000c6df	4a 89 04 2b 	movq	%rax, (%rbx,%r13)
000000010000c6e3	48 8b 35 4e a3 01 00 	movq	0x1a34e(%rip), %rsi ## Objc selector ref: setContentView:
000000010000c6ea	48 89 c7 	movq	%rax, %rdi
000000010000c6ed	48 89 da 	movq	%rbx, %rdx
000000010000c6f0	41 ff d6 	callq	*%r14
000000010000c6f3	4a 8b 3c 2b 	movq	(%rbx,%r13), %rdi
000000010000c6f7	48 8b 35 42 a3 01 00 	movq	0x1a342(%rip), %rsi ## Objc selector ref: setTitle:
000000010000c6fe	4c 89 fa 	movq	%r15, %rdx
000000010000c701	41 ff d6 	callq	*%r14
000000010000c704	4a 8b 3c 2b 	movq	(%rbx,%r13), %rdi
000000010000c708	48 8b 35 39 a3 01 00 	movq	0x1a339(%rip), %rsi ## Objc selector ref: setKeyRepeat:
000000010000c70f	ba 01 00 00 00 	movl	$0x1, %edx
000000010000c714	41 ff d6 	callq	*%r14
000000010000c717	4a 8b 3c 2b 	movq	(%rbx,%r13), %rdi
000000010000c71b	48 8b 35 2e a3 01 00 	movq	0x1a32e(%rip), %rsi ## Objc selector ref: makeKeyAndOrderFront:
000000010000c722	48 89 da 	movq	%rbx, %rdx
000000010000c725	41 ff d6 	callq	*%r14
000000010000c728	4c 8b 3d 29 a3 01 00 	movq	0x1a329(%rip), %r15 ## Objc selector ref: openGLContext
000000010000c72f	48 89 df 	movq	%rbx, %rdi
000000010000c732	4c 89 fe 	movq	%r15, %rsi
000000010000c735	41 ff d6 	callq	*%r14
000000010000c738	48 8b 35 21 a3 01 00 	movq	0x1a321(%rip), %rsi ## Objc selector ref: makeCurrentContext
000000010000c73f	48 89 c7 	movq	%rax, %rdi
000000010000c742	41 ff d6 	callq	*%r14
000000010000c745	48 89 df 	movq	%rbx, %rdi
000000010000c748	4c 89 fe 	movq	%r15, %rsi
000000010000c74b	41 ff d6 	callq	*%r14
000000010000c74e	48 8b 35 13 a3 01 00 	movq	0x1a313(%rip), %rsi ## Objc selector ref: setView:
000000010000c755	48 89 c7 	movq	%rax, %rdi
000000010000c758	48 89 da 	movq	%rbx, %rdx
000000010000c75b	41 ff d6 	callq	*%r14
000000010000c75e	48 8b 35 0b a3 01 00 	movq	0x1a30b(%rip), %rsi ## Objc selector ref: prepareOpenGL
000000010000c765	48 89 df 	movq	%rbx, %rdi
000000010000c768	41 ff d6 	callq	*%r14
000000010000c76b	48 8b 35 06 a3 01 00 	movq	0x1a306(%rip), %rsi ## Objc selector ref: setNextKeyView:
000000010000c772	48 89 df 	movq	%rbx, %rdi
000000010000c775	48 89 da 	movq	%rbx, %rdx
000000010000c778	41 ff d6 	callq	*%r14
000000010000c77b	48 8b 3d 0e a4 01 00 	movq	0x1a40e(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
000000010000c782	4c 8b 3d f7 a2 01 00 	movq	0x1a2f7(%rip), %r15 ## Objc selector ref: defaultCenter
000000010000c789	4c 89 fe 	movq	%r15, %rsi
000000010000c78c	41 ff d6 	callq	*%r14
000000010000c78f	4a 8b 14 2b 	movq	(%rbx,%r13), %rdx
000000010000c793	48 8b 0d 7e a2 01 00 	movq	0x1a27e(%rip), %rcx ## Objc selector ref: exposeNotification:
000000010000c79a	4c 8b 25 e7 a2 01 00 	movq	0x1a2e7(%rip), %r12 ## Objc selector ref: addObserver:selector:name:object:
000000010000c7a1	4c 8d 05 f0 9a 01 00 	leaq	0x19af0(%rip), %r8 ## Objc cfstring ref: @"NSWindowDidBecomeKeyNotification"
000000010000c7a8	48 89 c7 	movq	%rax, %rdi
000000010000c7ab	4c 89 e6 	movq	%r12, %rsi
000000010000c7ae	49 89 d1 	movq	%rdx, %r9
000000010000c7b1	41 ff d6 	callq	*%r14
000000010000c7b4	48 8b 3d d5 a3 01 00 	movq	0x1a3d5(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
000000010000c7bb	4c 89 fe 	movq	%r15, %rsi
000000010000c7be	41 ff d6 	callq	*%r14
000000010000c7c1	4a 8b 14 2b 	movq	(%rbx,%r13), %rdx
000000010000c7c5	48 8b 0d c4 a2 01 00 	movq	0x1a2c4(%rip), %rcx ## Objc selector ref: deminiaturizeNotification:
000000010000c7cc	4c 8d 05 e5 9a 01 00 	leaq	0x19ae5(%rip), %r8 ## Objc cfstring ref: @"NSWindowDidDeminiaturizeNotification"
000000010000c7d3	48 89 c7 	movq	%rax, %rdi
000000010000c7d6	4c 89 e6 	movq	%r12, %rsi
000000010000c7d9	49 89 d1 	movq	%rdx, %r9
000000010000c7dc	41 ff d6 	callq	*%r14
000000010000c7df	48 8b 3d aa a3 01 00 	movq	0x1a3aa(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
000000010000c7e6	4c 89 fe 	movq	%r15, %rsi
000000010000c7e9	41 ff d6 	callq	*%r14
000000010000c7ec	4a 8b 14 2b 	movq	(%rbx,%r13), %rdx
000000010000c7f0	48 8b 0d a1 a2 01 00 	movq	0x1a2a1(%rip), %rcx ## Objc selector ref: closeNotification:
000000010000c7f7	4c 8d 05 da 9a 01 00 	leaq	0x19ada(%rip), %r8 ## Objc cfstring ref: @"NSWindowWillCloseNotification"
000000010000c7fe	48 89 c7 	movq	%rax, %rdi
000000010000c801	4c 89 e6 	movq	%r12, %rsi
000000010000c804	49 89 d1 	movq	%rdx, %r9
000000010000c807	41 ff d6 	callq	*%r14
000000010000c80a	48 8d 55 10 	leaq	0x10(%rbp), %rdx
000000010000c80e	f2 0f 2c 42 10 	cvttsd2si	0x10(%rdx), %eax
000000010000c813	48 8b 0d f6 a3 01 00 	movq	_OBJC_IVAR_$_MlxWin.size_x(%rip), %rcx
000000010000c81a	89 04 0b 	movl	%eax, (%rbx,%rcx)
000000010000c81d	f2 0f 2c 42 18 	cvttsd2si	0x18(%rdx), %eax
000000010000c822	48 8b 0d ef a3 01 00 	movq	_OBJC_IVAR_$_MlxWin.size_y(%rip), %rcx
000000010000c829	89 04 0b 	movl	%eax, (%rbx,%rcx)
000000010000c82c	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000c82f	0f 57 c9 	xorps	%xmm1, %xmm1
000000010000c832	0f 57 d2 	xorps	%xmm2, %xmm2
000000010000c835	0f 57 db 	xorps	%xmm3, %xmm3
000000010000c838	e8 8b 1b 00 00 	callq	0x10000e3c8 ## symbol stub for: _glClearColor
000000010000c83d	bf 00 40 00 00 	movl	$0x4000, %edi
000000010000c842	e8 7b 1b 00 00 	callq	0x10000e3c2 ## symbol stub for: _glClear
000000010000c847	e8 ca 1b 00 00 	callq	0x10000e416 ## symbol stub for: _glFlush
000000010000c84c	48 8b 35 4d a2 01 00 	movq	0x1a24d(%rip), %rsi ## Objc selector ref: release
000000010000c853	48 8b 7d d0 	movq	-0x30(%rbp), %rdi
000000010000c857	41 ff d6 	callq	*%r14
000000010000c85a	48 89 d8 	movq	%rbx, %rax
000000010000c85d	48 83 c4 38 	addq	$0x38, %rsp
000000010000c861	5b 	popq	%rbx
000000010000c862	41 5c 	popq	%r12
000000010000c864	41 5d 	popq	%r13
000000010000c866	41 5e 	popq	%r14
000000010000c868	41 5f 	popq	%r15
000000010000c86a	5d 	popq	%rbp
000000010000c86b	c3 	retq
000000010000c86c	0f 1f 40 00 	nopl	(%rax)
-[MlxWin pixel_management]:
000000010000c870	55 	pushq	%rbp
000000010000c871	48 89 e5 	movq	%rsp, %rbp
000000010000c874	41 57 	pushq	%r15
000000010000c876	41 56 	pushq	%r14
000000010000c878	41 54 	pushq	%r12
000000010000c87a	53 	pushq	%rbx
000000010000c87b	48 89 fb 	movq	%rdi, %rbx
000000010000c87e	48 8b 05 9b a3 01 00 	movq	_OBJC_IVAR_$_MlxWin.glsl(%rip), %rax
000000010000c885	4c 8d 34 03 	leaq	(%rbx,%rax), %r14
000000010000c889	48 c7 44 03 58 00 00 00 00 	movq	$0x0, 0x58(%rbx,%rax)
000000010000c892	48 c7 44 03 50 00 00 00 00 	movq	$0x0, 0x50(%rbx,%rax)
000000010000c89b	48 c7 44 03 48 00 00 00 00 	movq	$0x0, 0x48(%rbx,%rax)
000000010000c8a4	48 c7 44 03 40 00 00 00 00 	movq	$0x0, 0x40(%rbx,%rax)
000000010000c8ad	48 c7 44 03 38 00 00 00 00 	movq	$0x0, 0x38(%rbx,%rax)
000000010000c8b6	48 c7 44 03 30 00 00 00 00 	movq	$0x0, 0x30(%rbx,%rax)
000000010000c8bf	48 c7 44 03 28 00 00 00 00 	movq	$0x0, 0x28(%rbx,%rax)
000000010000c8c8	48 c7 44 03 20 00 00 00 00 	movq	$0x0, 0x20(%rbx,%rax)
000000010000c8d1	48 c7 44 03 18 00 00 00 00 	movq	$0x0, 0x18(%rbx,%rax)
000000010000c8da	48 c7 44 03 10 00 00 00 00 	movq	$0x0, 0x10(%rbx,%rax)
000000010000c8e3	48 c7 44 03 08 00 00 00 00 	movq	$0x0, 0x8(%rbx,%rax)
000000010000c8ec	48 c7 04 03 00 00 00 00 	movq	$0x0, (%rbx,%rax)
000000010000c8f4	bf 71 0b 00 00 	movl	$0xb71, %edi
000000010000c8f9	e8 fa 1a 00 00 	callq	0x10000e3f8 ## symbol stub for: _glDisable
000000010000c8fe	4c 8b 3d 23 a3 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixel_vbuffer(%rip), %r15
000000010000c905	4a 8d 34 3b 	leaq	(%rbx,%r15), %rsi
000000010000c909	bf 01 00 00 00 	movl	$0x1, %edi
000000010000c90e	e8 09 1b 00 00 	callq	0x10000e41c ## symbol stub for: _glGenBuffers
000000010000c913	42 8b 34 3b 	movl	(%rbx,%r15), %esi
000000010000c917	bf 92 88 00 00 	movl	$0x8892, %edi
000000010000c91c	e8 83 1a 00 00 	callq	0x10000e3a4 ## symbol stub for: _glBindBuffer
000000010000c921	48 8d 15 28 28 00 00 	leaq	_pixel_vertexes(%rip), %rdx
000000010000c928	bf 92 88 00 00 	movl	$0x8892, %edi
000000010000c92d	be 20 00 00 00 	movl	$0x20, %esi
000000010000c932	b9 e8 88 00 00 	movl	$0x88e8, %ecx
000000010000c937	e8 80 1a 00 00 	callq	0x10000e3bc ## symbol stub for: _glBufferData
000000010000c93c	4c 8b 3d ed a2 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixel_texture(%rip), %r15
000000010000c943	4a 8d 34 3b 	leaq	(%rbx,%r15), %rsi
000000010000c947	bf 01 00 00 00 	movl	$0x1, %edi
000000010000c94c	e8 d1 1a 00 00 	callq	0x10000e422 ## symbol stub for: _glGenTextures
000000010000c951	42 8b 34 3b 	movl	(%rbx,%r15), %esi
000000010000c955	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000c95a	e8 4b 1a 00 00 	callq	0x10000e3aa ## symbol stub for: _glBindTexture
000000010000c95f	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000c964	be 01 28 00 00 	movl	$0x2801, %esi
000000010000c969	ba 00 26 00 00 	movl	$0x2600, %edx
000000010000c96e	e8 eb 1a 00 00 	callq	0x10000e45e ## symbol stub for: _glTexParameteri
000000010000c973	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000c978	be 00 28 00 00 	movl	$0x2800, %esi
000000010000c97d	ba 00 26 00 00 	movl	$0x2600, %edx
000000010000c982	e8 d7 1a 00 00 	callq	0x10000e45e ## symbol stub for: _glTexParameteri
000000010000c987	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000c98c	be 02 28 00 00 	movl	$0x2802, %esi
000000010000c991	ba 2f 81 00 00 	movl	$0x812f, %edx
000000010000c996	e8 c3 1a 00 00 	callq	0x10000e45e ## symbol stub for: _glTexParameteri
000000010000c99b	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000c9a0	be 03 28 00 00 	movl	$0x2803, %esi
000000010000c9a5	ba 2f 81 00 00 	movl	$0x812f, %edx
000000010000c9aa	e8 af 1a 00 00 	callq	0x10000e45e ## symbol stub for: _glTexParameteri
000000010000c9af	4c 8b 3d 5a a2 01 00 	movq	_OBJC_IVAR_$_MlxWin.size_x(%rip), %r15
000000010000c9b6	4a 63 04 3b 	movslq	(%rbx,%r15), %rax
000000010000c9ba	4c 8b 25 57 a2 01 00 	movq	_OBJC_IVAR_$_MlxWin.size_y(%rip), %r12
000000010000c9c1	4a 63 3c 23 	movslq	(%rbx,%r12), %rdi
000000010000c9c5	48 0f af f8 	imulq	%rax, %rdi
000000010000c9c9	48 c1 e7 02 	shlq	$0x2, %rdi
000000010000c9cd	e8 b6 1a 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000c9d2	4c 8b 15 5f a2 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixtexbuff(%rip), %r10
000000010000c9d9	4a 89 04 13 	movq	%rax, (%rbx,%r10)
000000010000c9dd	42 8b 14 23 	movl	(%rbx,%r12), %edx
000000010000c9e1	42 0f af 14 3b 	imull	(%rbx,%r15), %edx
000000010000c9e6	48 8b 05 53 a2 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixel_nb(%rip), %rax
000000010000c9ed	eb 12 	jmp	0x10000ca01
000000010000c9ef	90 	nop
000000010000c9f0	48 63 c9 	movslq	%ecx, %rcx
000000010000c9f3	4a 8b 14 13 	movq	(%rbx,%r10), %rdx
000000010000c9f7	c7 04 8a 00 00 00 ff 	movl	$0xff000000, (%rdx,%rcx,4)
000000010000c9fe	8b 14 03 	movl	(%rbx,%rax), %edx
000000010000ca01	8d 4a ff 	leal	-0x1(%rdx), %ecx
000000010000ca04	89 0c 03 	movl	%ecx, (%rbx,%rax)
000000010000ca07	85 d2 	testl	%edx, %edx
000000010000ca09	75 e5 	jne	0x10000c9f0
000000010000ca0b	c7 04 03 00 00 00 00 	movl	$0x0, (%rbx,%rax)
000000010000ca12	42 8b 0c 3b 	movl	(%rbx,%r15), %ecx
000000010000ca16	46 8b 04 23 	movl	(%rbx,%r12), %r8d
000000010000ca1a	48 83 ec 08 	subq	$0x8, %rsp
000000010000ca1e	45 31 ff 	xorl	%r15d, %r15d
000000010000ca21	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000ca26	31 f6 	xorl	%esi, %esi
000000010000ca28	ba 58 80 00 00 	movl	$0x8058, %edx
000000010000ca2d	45 31 c9 	xorl	%r9d, %r9d
000000010000ca30	42 ff 34 13 	pushq	(%rbx,%r10)
000000010000ca34	68 01 14 00 00 	pushq	$0x1401
000000010000ca39	68 e1 80 00 00 	pushq	$0x80e1
000000010000ca3e	e8 15 1a 00 00 	callq	0x10000e458 ## symbol stub for: _glTexImage2D
000000010000ca43	48 83 c4 20 	addq	$0x20, %rsp
000000010000ca47	4c 89 f7 	movq	%r14, %rdi
000000010000ca4a	e8 e1 ed ff ff 	callq	_mlx_shaders
000000010000ca4f	85 c0 	testl	%eax, %eax
000000010000ca51	0f 85 33 01 00 00 	jne	0x10000cb8a
000000010000ca57	41 8b 7e 08 	movl	0x8(%r14), %edi
000000010000ca5b	e8 1c 1a 00 00 	callq	0x10000e47c ## symbol stub for: _glUseProgram
000000010000ca60	41 8b 7e 08 	movl	0x8(%r14), %edi
000000010000ca64	48 8d 1d 97 25 00 00 	leaq	0x2597(%rip), %rbx ## literal pool for: "texture"
000000010000ca6b	48 89 de 	movq	%rbx, %rsi
000000010000ca6e	e8 d3 19 00 00 	callq	0x10000e446 ## symbol stub for: _glGetUniformLocation
000000010000ca73	41 89 46 10 	movl	%eax, 0x10(%r14)
000000010000ca77	41 8b 7e 08 	movl	0x8(%r14), %edi
000000010000ca7b	4c 8d 3d 88 25 00 00 	leaq	0x2588(%rip), %r15 ## literal pool for: "position"
000000010000ca82	4c 89 fe 	movq	%r15, %rsi
000000010000ca85	e8 9e 19 00 00 	callq	0x10000e428 ## symbol stub for: _glGetAttribLocation
000000010000ca8a	41 89 46 0c 	movl	%eax, 0xc(%r14)
000000010000ca8e	41 8b 7e 20 	movl	0x20(%r14), %edi
000000010000ca92	e8 e5 19 00 00 	callq	0x10000e47c ## symbol stub for: _glUseProgram
000000010000ca97	41 8b 7e 20 	movl	0x20(%r14), %edi
000000010000ca9b	48 89 de 	movq	%rbx, %rsi
000000010000ca9e	e8 a3 19 00 00 	callq	0x10000e446 ## symbol stub for: _glGetUniformLocation
000000010000caa3	41 89 46 2c 	movl	%eax, 0x2c(%r14)
000000010000caa7	41 8b 7e 20 	movl	0x20(%r14), %edi
000000010000caab	48 8d 35 61 25 00 00 	leaq	0x2561(%rip), %rsi ## literal pool for: "imagepos"
000000010000cab2	e8 8f 19 00 00 	callq	0x10000e446 ## symbol stub for: _glGetUniformLocation
000000010000cab7	41 89 46 30 	movl	%eax, 0x30(%r14)
000000010000cabb	41 8b 7e 20 	movl	0x20(%r14), %edi
000000010000cabf	48 8d 35 56 25 00 00 	leaq	0x2556(%rip), %rsi ## literal pool for: "imagesize"
000000010000cac6	e8 7b 19 00 00 	callq	0x10000e446 ## symbol stub for: _glGetUniformLocation
000000010000cacb	41 89 46 34 	movl	%eax, 0x34(%r14)
000000010000cacf	41 8b 7e 20 	movl	0x20(%r14), %edi
000000010000cad3	4c 8d 25 4c 25 00 00 	leaq	0x254c(%rip), %r12 ## literal pool for: "winhalfsize"
000000010000cada	4c 89 e6 	movq	%r12, %rsi
000000010000cadd	e8 64 19 00 00 	callq	0x10000e446 ## symbol stub for: _glGetUniformLocation
000000010000cae2	41 89 46 28 	movl	%eax, 0x28(%r14)
000000010000cae6	41 8b 7e 20 	movl	0x20(%r14), %edi
000000010000caea	4c 89 fe 	movq	%r15, %rsi
000000010000caed	e8 36 19 00 00 	callq	0x10000e428 ## symbol stub for: _glGetAttribLocation
000000010000caf2	41 89 46 24 	movl	%eax, 0x24(%r14)
000000010000caf6	41 8b 7e 40 	movl	0x40(%r14), %edi
000000010000cafa	e8 7d 19 00 00 	callq	0x10000e47c ## symbol stub for: _glUseProgram
000000010000caff	41 8b 7e 40 	movl	0x40(%r14), %edi
000000010000cb03	48 89 de 	movq	%rbx, %rsi
000000010000cb06	e8 3b 19 00 00 	callq	0x10000e446 ## symbol stub for: _glGetUniformLocation
000000010000cb0b	41 89 46 4c 	movl	%eax, 0x4c(%r14)
000000010000cb0f	41 8b 7e 40 	movl	0x40(%r14), %edi
000000010000cb13	48 8d 35 18 25 00 00 	leaq	0x2518(%rip), %rsi ## literal pool for: "color"
000000010000cb1a	e8 27 19 00 00 	callq	0x10000e446 ## symbol stub for: _glGetUniformLocation
000000010000cb1f	41 89 46 50 	movl	%eax, 0x50(%r14)
000000010000cb23	41 8b 7e 40 	movl	0x40(%r14), %edi
000000010000cb27	48 8d 35 0a 25 00 00 	leaq	0x250a(%rip), %rsi ## literal pool for: "fontposinwin"
000000010000cb2e	e8 13 19 00 00 	callq	0x10000e446 ## symbol stub for: _glGetUniformLocation
000000010000cb33	41 89 46 54 	movl	%eax, 0x54(%r14)
000000010000cb37	41 8b 7e 40 	movl	0x40(%r14), %edi
000000010000cb3b	48 8d 35 03 25 00 00 	leaq	0x2503(%rip), %rsi ## literal pool for: "fontposinatlas"
000000010000cb42	e8 ff 18 00 00 	callq	0x10000e446 ## symbol stub for: _glGetUniformLocation
000000010000cb47	41 89 46 58 	movl	%eax, 0x58(%r14)
000000010000cb4b	41 8b 7e 40 	movl	0x40(%r14), %edi
000000010000cb4f	48 8d 35 fe 24 00 00 	leaq	0x24fe(%rip), %rsi ## literal pool for: "fontatlassize"
000000010000cb56	e8 eb 18 00 00 	callq	0x10000e446 ## symbol stub for: _glGetUniformLocation
000000010000cb5b	41 89 46 5c 	movl	%eax, 0x5c(%r14)
000000010000cb5f	41 8b 7e 40 	movl	0x40(%r14), %edi
000000010000cb63	4c 89 e6 	movq	%r12, %rsi
000000010000cb66	e8 db 18 00 00 	callq	0x10000e446 ## symbol stub for: _glGetUniformLocation
000000010000cb6b	41 89 46 48 	movl	%eax, 0x48(%r14)
000000010000cb6f	41 8b 7e 40 	movl	0x40(%r14), %edi
000000010000cb73	4c 89 fe 	movq	%r15, %rsi
000000010000cb76	e8 ad 18 00 00 	callq	0x10000e428 ## symbol stub for: _glGetAttribLocation
000000010000cb7b	41 89 46 44 	movl	%eax, 0x44(%r14)
000000010000cb7f	e8 92 18 00 00 	callq	0x10000e416 ## symbol stub for: _glFlush
000000010000cb84	41 bf 01 00 00 00 	movl	$0x1, %r15d
000000010000cb8a	44 89 f8 	movl	%r15d, %eax
000000010000cb8d	5b 	popq	%rbx
000000010000cb8e	41 5c 	popq	%r12
000000010000cb90	41 5e 	popq	%r14
000000010000cb92	41 5f 	popq	%r15
000000010000cb94	5d 	popq	%rbp
000000010000cb95	c3 	retq
000000010000cb96	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
-[MlxWin ctxNeedsUpdate]:
000000010000cba0	55 	pushq	%rbp
000000010000cba1	48 89 e5 	movq	%rsp, %rbp
000000010000cba4	48 8b 05 9d a0 01 00 	movq	_OBJC_IVAR_$_MlxWin.ctx(%rip), %rax
000000010000cbab	48 8b 3c 07 	movq	(%rdi,%rax), %rdi
000000010000cbaf	48 8b 35 f2 9e 01 00 	movq	0x19ef2(%rip), %rsi ## Objc selector ref: update
000000010000cbb6	5d 	popq	%rbp
000000010000cbb7	ff 25 83 94 01 00 	jmpq	*0x19483(%rip) ## Objc message: +[NSNotificationCenter update]
000000010000cbbd	0f 1f 00 	nopl	(%rax)
-[MlxWin selectGLContext]:
000000010000cbc0	55 	pushq	%rbp
000000010000cbc1	48 89 e5 	movq	%rsp, %rbp
000000010000cbc4	41 57 	pushq	%r15
000000010000cbc6	41 56 	pushq	%r14
000000010000cbc8	41 55 	pushq	%r13
000000010000cbca	41 54 	pushq	%r12
000000010000cbcc	53 	pushq	%rbx
000000010000cbcd	50 	pushq	%rax
000000010000cbce	49 89 ff 	movq	%rdi, %r15
000000010000cbd1	48 8b 3d c0 9f 01 00 	movq	0x19fc0(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSOpenGLContext
000000010000cbd8	48 8b 35 d1 9e 01 00 	movq	0x19ed1(%rip), %rsi ## Objc selector ref: currentContext
000000010000cbdf	4c 8b 2d 5a 94 01 00 	movq	0x1945a(%rip), %r13 ## Objc message: +[NSOpenGLContext currentContext]
000000010000cbe6	41 ff d5 	callq	*%r13
000000010000cbe9	48 89 c3 	movq	%rax, %rbx
000000010000cbec	4c 8b 35 65 9e 01 00 	movq	0x19e65(%rip), %r14 ## Objc selector ref: openGLContext
000000010000cbf3	4c 89 ff 	movq	%r15, %rdi
000000010000cbf6	4c 89 f6 	movq	%r14, %rsi
000000010000cbf9	4d 89 ec 	movq	%r13, %r12
000000010000cbfc	41 ff d5 	callq	*%r13
000000010000cbff	48 39 c3 	cmpq	%rax, %rbx
000000010000cc02	74 26 	je	0x10000cc2a
000000010000cc04	4c 89 ff 	movq	%r15, %rdi
000000010000cc07	4c 89 f6 	movq	%r14, %rsi
000000010000cc0a	41 ff d4 	callq	*%r12
000000010000cc0d	48 8b 35 4c 9e 01 00 	movq	0x19e4c(%rip), %rsi ## Objc selector ref: makeCurrentContext
000000010000cc14	48 89 c7 	movq	%rax, %rdi
000000010000cc17	4c 89 e0 	movq	%r12, %rax
000000010000cc1a	48 83 c4 08 	addq	$0x8, %rsp
000000010000cc1e	5b 	popq	%rbx
000000010000cc1f	41 5c 	popq	%r12
000000010000cc21	41 5d 	popq	%r13
000000010000cc23	41 5e 	popq	%r14
000000010000cc25	41 5f 	popq	%r15
000000010000cc27	5d 	popq	%rbp
000000010000cc28	ff e0 	jmpq	*%rax
000000010000cc2a	48 83 c4 08 	addq	$0x8, %rsp
000000010000cc2e	5b 	popq	%rbx
000000010000cc2f	41 5c 	popq	%r12
000000010000cc31	41 5d 	popq	%r13
000000010000cc33	41 5e 	popq	%r14
000000010000cc35	41 5f 	popq	%r15
000000010000cc37	5d 	popq	%rbp
000000010000cc38	c3 	retq
000000010000cc39	0f 1f 80 00 00 00 00 	nopl	(%rax)
-[MlxWin flushGLContext]:
000000010000cc40	55 	pushq	%rbp
000000010000cc41	48 89 e5 	movq	%rsp, %rbp
000000010000cc44	53 	pushq	%rbx
000000010000cc45	50 	pushq	%rax
000000010000cc46	48 8b 35 0b 9e 01 00 	movq	0x19e0b(%rip), %rsi ## Objc selector ref: openGLContext
000000010000cc4d	48 8b 1d ec 93 01 00 	movq	0x193ec(%rip), %rbx ## Objc message: -[%rdi openGLContext]
000000010000cc54	ff d3 	callq	*%rbx
000000010000cc56	48 8b 35 5b 9e 01 00 	movq	0x19e5b(%rip), %rsi ## Objc selector ref: flushBuffer
000000010000cc5d	48 89 c7 	movq	%rax, %rdi
000000010000cc60	48 89 d8 	movq	%rbx, %rax
000000010000cc63	48 83 c4 08 	addq	$0x8, %rsp
000000010000cc67	5b 	popq	%rbx
000000010000cc68	5d 	popq	%rbp
000000010000cc69	ff e0 	jmpq	*%rax
000000010000cc6b	0f 1f 44 00 00 	nopl	(%rax,%rax)
-[MlxWin ctx]:
000000010000cc70	55 	pushq	%rbp
000000010000cc71	48 89 e5 	movq	%rsp, %rbp
000000010000cc74	48 8b 05 cd 9f 01 00 	movq	_OBJC_IVAR_$_MlxWin.ctx(%rip), %rax
000000010000cc7b	48 8b 04 07 	movq	(%rdi,%rax), %rax
000000010000cc7f	5d 	popq	%rbp
000000010000cc80	c3 	retq
000000010000cc81	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
-[MlxWin pixelPutColor:X:Y:]:
000000010000cc90	55 	pushq	%rbp
000000010000cc91	48 89 e5 	movq	%rsp, %rbp
000000010000cc94	41 57 	pushq	%r15
000000010000cc96	41 56 	pushq	%r14
000000010000cc98	41 54 	pushq	%r12
000000010000cc9a	53 	pushq	%rbx
000000010000cc9b	48 83 ec 10 	subq	$0x10, %rsp
000000010000cc9f	45 89 c6 	movl	%r8d, %r14d
000000010000cca2	41 89 cf 	movl	%ecx, %r15d
000000010000cca5	48 89 fb 	movq	%rdi, %rbx
000000010000cca8	89 55 dc 	movl	%edx, -0x24(%rbp)
000000010000ccab	4c 8b 25 8e 9f 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixel_nb(%rip), %r12
000000010000ccb2	42 ff 04 23 	incl	(%rbx,%r12)
000000010000ccb6	48 8b 05 6b 9f 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixel_vbuffer(%rip), %rax
000000010000ccbd	8b 34 03 	movl	(%rbx,%rax), %esi
000000010000ccc0	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000ccc5	e8 e0 16 00 00 	callq	0x10000e3aa ## symbol stub for: _glBindTexture
000000010000ccca	48 83 ec 08 	subq	$0x8, %rsp
000000010000ccce	48 8d 45 dc 	leaq	-0x24(%rbp), %rax
000000010000ccd2	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000ccd7	31 f6 	xorl	%esi, %esi
000000010000ccd9	41 b8 01 00 00 00 	movl	$0x1, %r8d
000000010000ccdf	41 b9 01 00 00 00 	movl	$0x1, %r9d
000000010000cce5	44 89 fa 	movl	%r15d, %edx
000000010000cce8	44 89 f1 	movl	%r14d, %ecx
000000010000cceb	50 	pushq	%rax
000000010000ccec	68 01 14 00 00 	pushq	$0x1401
000000010000ccf1	68 e1 80 00 00 	pushq	$0x80e1
000000010000ccf6	e8 69 17 00 00 	callq	0x10000e464 ## symbol stub for: _glTexSubImage2D
000000010000ccfb	48 83 c4 20 	addq	$0x20, %rsp
000000010000ccff	42 81 3c 23 40 0d 03 00 	cmpl	$0x30d40, (%rbx,%r12)
000000010000cd07	7c 10 	jl	0x10000cd19
000000010000cd09	48 8b 35 b0 9d 01 00 	movq	0x19db0(%rip), %rsi ## Objc selector ref: mlx_gl_draw
000000010000cd10	48 89 df 	movq	%rbx, %rdi
000000010000cd13	ff 15 27 93 01 00 	callq	*0x19327(%rip) ## Objc message: -[%rdi mlx_gl_draw]
000000010000cd19	48 83 c4 10 	addq	$0x10, %rsp
000000010000cd1d	5b 	popq	%rbx
000000010000cd1e	41 5c 	popq	%r12
000000010000cd20	41 5e 	popq	%r14
000000010000cd22	41 5f 	popq	%r15
000000010000cd24	5d 	popq	%rbp
000000010000cd25	c3 	retq
000000010000cd26	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
-[MlxWin destroyPixelManagement]:
000000010000cd30	55 	pushq	%rbp
000000010000cd31	48 89 e5 	movq	%rsp, %rbp
000000010000cd34	41 56 	pushq	%r14
000000010000cd36	53 	pushq	%rbx
000000010000cd37	48 89 fb 	movq	%rdi, %rbx
000000010000cd3a	48 8b 05 f7 9e 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixtexbuff(%rip), %rax
000000010000cd41	48 8b 3c 03 	movq	(%rbx,%rax), %rdi
000000010000cd45	e8 3c 16 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000cd4a	48 8b 35 17 9e 01 00 	movq	0x19e17(%rip), %rsi ## Objc selector ref: selectGLContext
000000010000cd51	48 89 df 	movq	%rbx, %rdi
000000010000cd54	ff 15 e6 92 01 00 	callq	*0x192e6(%rip) ## Objc message: -[%rdi selectGLContext]
000000010000cd5a	48 8b 35 c7 9e 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixel_vbuffer(%rip), %rsi
000000010000cd61	48 01 de 	addq	%rbx, %rsi
000000010000cd64	bf 01 00 00 00 	movl	$0x1, %edi
000000010000cd69	e8 72 16 00 00 	callq	0x10000e3e0 ## symbol stub for: _glDeleteBuffers
000000010000cd6e	48 8b 35 bb 9e 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixel_texture(%rip), %rsi
000000010000cd75	48 01 de 	addq	%rbx, %rsi
000000010000cd78	bf 01 00 00 00 	movl	$0x1, %edi
000000010000cd7d	e8 70 16 00 00 	callq	0x10000e3f2 ## symbol stub for: _glDeleteTextures
000000010000cd82	4c 8b 35 97 9e 01 00 	movq	_OBJC_IVAR_$_MlxWin.glsl(%rip), %r14
000000010000cd89	42 8b 7c 33 08 	movl	0x8(%rbx,%r14), %edi
000000010000cd8e	e8 53 16 00 00 	callq	0x10000e3e6 ## symbol stub for: _glDeleteProgram
000000010000cd93	42 8b 7c 33 20 	movl	0x20(%rbx,%r14), %edi
000000010000cd98	e8 49 16 00 00 	callq	0x10000e3e6 ## symbol stub for: _glDeleteProgram
000000010000cd9d	42 8b 3c 33 	movl	(%rbx,%r14), %edi
000000010000cda1	e8 46 16 00 00 	callq	0x10000e3ec ## symbol stub for: _glDeleteShader
000000010000cda6	42 8b 7c 33 04 	movl	0x4(%rbx,%r14), %edi
000000010000cdab	e8 3c 16 00 00 	callq	0x10000e3ec ## symbol stub for: _glDeleteShader
000000010000cdb0	42 8b 7c 33 18 	movl	0x18(%rbx,%r14), %edi
000000010000cdb5	e8 32 16 00 00 	callq	0x10000e3ec ## symbol stub for: _glDeleteShader
000000010000cdba	42 8b 7c 33 1c 	movl	0x1c(%rbx,%r14), %edi
000000010000cdbf	5b 	popq	%rbx
000000010000cdc0	41 5e 	popq	%r14
000000010000cdc2	5d 	popq	%rbp
000000010000cdc3	e9 24 16 00 00 	jmp	0x10000e3ec ## symbol stub for: _glDeleteShader
000000010000cdc8	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
-[MlxWin destroyMe]:
000000010000cdd0	55 	pushq	%rbp
000000010000cdd1	48 89 e5 	movq	%rsp, %rbp
000000010000cdd4	41 57 	pushq	%r15
000000010000cdd6	41 56 	pushq	%r14
000000010000cdd8	41 55 	pushq	%r13
000000010000cdda	41 54 	pushq	%r12
000000010000cddc	53 	pushq	%rbx
000000010000cddd	50 	pushq	%rax
000000010000cdde	48 89 fb 	movq	%rdi, %rbx
000000010000cde1	48 8b 3d a8 9d 01 00 	movq	0x19da8(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
000000010000cde8	4c 8b 35 91 9c 01 00 	movq	0x19c91(%rip), %r14 ## Objc selector ref: defaultCenter
000000010000cdef	4c 8b 2d 4a 92 01 00 	movq	0x1924a(%rip), %r13 ## Objc message: +[NSNotificationCenter defaultCenter]
000000010000cdf6	4c 89 f6 	movq	%r14, %rsi
000000010000cdf9	41 ff d5 	callq	*%r13
000000010000cdfc	4c 8b 25 05 9e 01 00 	movq	_OBJC_IVAR_$_MlxWin.win(%rip), %r12
000000010000ce03	4a 8b 14 23 	movq	(%rbx,%r12), %rdx
000000010000ce07	4c 8b 3d ba 9c 01 00 	movq	0x19cba(%rip), %r15 ## Objc selector ref: removeObserver:
000000010000ce0e	48 89 c7 	movq	%rax, %rdi
000000010000ce11	4c 89 fe 	movq	%r15, %rsi
000000010000ce14	41 ff d5 	callq	*%r13
000000010000ce17	48 8b 3d 72 9d 01 00 	movq	0x19d72(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
000000010000ce1e	4c 89 f6 	movq	%r14, %rsi
000000010000ce21	41 ff d5 	callq	*%r13
000000010000ce24	48 89 c7 	movq	%rax, %rdi
000000010000ce27	4c 89 fe 	movq	%r15, %rsi
000000010000ce2a	48 89 da 	movq	%rbx, %rdx
000000010000ce2d	41 ff d5 	callq	*%r13
000000010000ce30	4a 8b 3c 23 	movq	(%rbx,%r12), %rdi
000000010000ce34	48 8b 35 95 9c 01 00 	movq	0x19c95(%rip), %rsi ## Objc selector ref: close
000000010000ce3b	41 ff d5 	callq	*%r13
000000010000ce3e	48 8b 35 5b 9c 01 00 	movq	0x19c5b(%rip), %rsi ## Objc selector ref: release
000000010000ce45	48 89 df 	movq	%rbx, %rdi
000000010000ce48	4c 89 e8 	movq	%r13, %rax
000000010000ce4b	48 83 c4 08 	addq	$0x8, %rsp
000000010000ce4f	5b 	popq	%rbx
000000010000ce50	41 5c 	popq	%r12
000000010000ce52	41 5d 	popq	%r13
000000010000ce54	41 5e 	popq	%r14
000000010000ce56	41 5f 	popq	%r15
000000010000ce58	5d 	popq	%rbp
000000010000ce59	ff e0 	jmpq	*%rax
000000010000ce5b	0f 1f 44 00 00 	nopl	(%rax,%rax)
-[MlxWin setEvent:andFunc:andParam:]:
000000010000ce60	55 	pushq	%rbp
000000010000ce61	48 89 e5 	movq	%rsp, %rbp
000000010000ce64	48 8b 05 9d 9d 01 00 	movq	_OBJC_IVAR_$_MlxWin.win(%rip), %rax
000000010000ce6b	48 8b 3c 07 	movq	(%rdi,%rax), %rdi
000000010000ce6f	48 8b 35 62 9c 01 00 	movq	0x19c62(%rip), %rsi ## Objc selector ref: setEvent:andFunc:andParam:
000000010000ce76	5d 	popq	%rbp
000000010000ce77	ff 25 c3 91 01 00 	jmpq	*0x191c3(%rip) ## Objc message: +[NSNotificationCenter setEvent:andFunc:andParam:]
000000010000ce7d	0f 1f 00 	nopl	(%rax)
-[MlxWin setKeyRepeat:]:
000000010000ce80	55 	pushq	%rbp
000000010000ce81	48 89 e5 	movq	%rsp, %rbp
000000010000ce84	48 8b 05 7d 9d 01 00 	movq	_OBJC_IVAR_$_MlxWin.win(%rip), %rax
000000010000ce8b	48 8b 3c 07 	movq	(%rdi,%rax), %rdi
000000010000ce8f	48 8b 35 b2 9b 01 00 	movq	0x19bb2(%rip), %rsi ## Objc selector ref: setKeyRepeat:
000000010000ce96	5d 	popq	%rbp
000000010000ce97	ff 25 a3 91 01 00 	jmpq	*0x191a3(%rip) ## Objc message: -[%rdi setKeyRepeat:]
000000010000ce9d	0f 1f 00 	nopl	(%rax)
-[MlxWin clearWin]:
000000010000cea0	55 	pushq	%rbp
000000010000cea1	48 89 e5 	movq	%rsp, %rbp
000000010000cea4	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000cea7	0f 57 c9 	xorps	%xmm1, %xmm1
000000010000ceaa	0f 57 d2 	xorps	%xmm2, %xmm2
000000010000cead	0f 57 db 	xorps	%xmm3, %xmm3
000000010000ceb0	e8 13 15 00 00 	callq	0x10000e3c8 ## symbol stub for: _glClearColor
000000010000ceb5	bf 00 40 00 00 	movl	$0x4000, %edi
000000010000ceba	5d 	popq	%rbp
000000010000cebb	e9 02 15 00 00 	jmp	0x10000e3c2 ## symbol stub for: _glClear
-[MlxWin mlx_gl_draw_img:andCtx:andX:andY:]:
000000010000cec0	55 	pushq	%rbp
000000010000cec1	48 89 e5 	movq	%rsp, %rbp
000000010000cec4	41 57 	pushq	%r15
000000010000cec6	41 56 	pushq	%r14
000000010000cec8	41 55 	pushq	%r13
000000010000ceca	41 54 	pushq	%r12
000000010000cecc	53 	pushq	%rbx
000000010000cecd	48 83 ec 18 	subq	$0x18, %rsp
000000010000ced1	44 89 4d d4 	movl	%r9d, -0x2c(%rbp)
000000010000ced5	45 89 c5 	movl	%r8d, %r13d
000000010000ced8	49 89 cf 	movq	%rcx, %r15
000000010000cedb	48 89 55 c8 	movq	%rdx, -0x38(%rbp)
000000010000cedf	48 89 fb 	movq	%rdi, %rbx
000000010000cee2	48 8b 05 57 9d 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixel_nb(%rip), %rax
000000010000cee9	83 3c 03 00 	cmpl	$0x0, (%rbx,%rax)
000000010000ceed	7e 10 	jle	0x10000ceff
000000010000ceef	48 8b 35 ca 9b 01 00 	movq	0x19bca(%rip), %rsi ## Objc selector ref: mlx_gl_draw
000000010000cef6	48 89 df 	movq	%rbx, %rdi
000000010000cef9	ff 15 41 91 01 00 	callq	*0x19141(%rip) ## Objc message: -[%rdi mlx_gl_draw]
000000010000ceff	4c 8b 35 1a 9d 01 00 	movq	_OBJC_IVAR_$_MlxWin.glsl(%rip), %r14
000000010000cf06	42 8b 7c 33 20 	movl	0x20(%rbx,%r14), %edi
000000010000cf0b	e8 6c 15 00 00 	callq	0x10000e47c ## symbol stub for: _glUseProgram
000000010000cf10	bf c0 84 00 00 	movl	$0x84c0, %edi
000000010000cf15	e8 7e 14 00 00 	callq	0x10000e398 ## symbol stub for: _glActiveTexture
000000010000cf1a	41 8b 37 	movl	(%r15), %esi
000000010000cf1d	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000cf22	e8 83 14 00 00 	callq	0x10000e3aa ## symbol stub for: _glBindTexture
000000010000cf27	42 8b 7c 33 2c 	movl	0x2c(%rbx,%r14), %edi
000000010000cf2c	31 f6 	xorl	%esi, %esi
000000010000cf2e	e8 37 15 00 00 	callq	0x10000e46a ## symbol stub for: _glUniform1i
000000010000cf33	42 8b 7c 33 28 	movl	0x28(%rbx,%r14), %edi
000000010000cf38	48 8b 05 d1 9c 01 00 	movq	_OBJC_IVAR_$_MlxWin.size_x(%rip), %rax
000000010000cf3f	8b 04 03 	movl	(%rbx,%rax), %eax
000000010000cf42	89 c1 	movl	%eax, %ecx
000000010000cf44	c1 e9 1f 	shrl	$0x1f, %ecx
000000010000cf47	01 c1 	addl	%eax, %ecx
000000010000cf49	d1 f9 	sarl	%ecx
000000010000cf4b	f3 0f 2a c1 	cvtsi2ssl	%ecx, %xmm0
000000010000cf4f	4c 8b 25 c2 9c 01 00 	movq	_OBJC_IVAR_$_MlxWin.size_y(%rip), %r12
000000010000cf56	42 8b 04 23 	movl	(%rbx,%r12), %eax
000000010000cf5a	89 c1 	movl	%eax, %ecx
000000010000cf5c	c1 e9 1f 	shrl	$0x1f, %ecx
000000010000cf5f	01 c1 	addl	%eax, %ecx
000000010000cf61	d1 f9 	sarl	%ecx
000000010000cf63	f3 0f 2a c9 	cvtsi2ssl	%ecx, %xmm1
000000010000cf67	e8 04 15 00 00 	callq	0x10000e470 ## symbol stub for: _glUniform2f
000000010000cf6c	42 8b 7c 33 30 	movl	0x30(%rbx,%r14), %edi
000000010000cf71	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000cf74	f3 41 0f 2a c5 	cvtsi2ssl	%r13d, %xmm0
000000010000cf79	42 8b 04 23 	movl	(%rbx,%r12), %eax
000000010000cf7d	2b 45 d4 	subl	-0x2c(%rbp), %eax
000000010000cf80	0f 57 c9 	xorps	%xmm1, %xmm1
000000010000cf83	f3 0f 2a c8 	cvtsi2ssl	%eax, %xmm1
000000010000cf87	e8 e4 14 00 00 	callq	0x10000e470 ## symbol stub for: _glUniform2f
000000010000cf8c	42 8b 7c 33 34 	movl	0x34(%rbx,%r14), %edi
000000010000cf91	48 8b 45 c8 	movq	-0x38(%rbp), %rax
000000010000cf95	48 8b 00 	movq	(%rax), %rax
000000010000cf98	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000cf9b	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
000000010000cf9f	48 c1 e8 20 	shrq	$0x20, %rax
000000010000cfa3	f7 d8 	negl	%eax
000000010000cfa5	0f 57 c9 	xorps	%xmm1, %xmm1
000000010000cfa8	f3 0f 2a c8 	cvtsi2ssl	%eax, %xmm1
000000010000cfac	e8 bf 14 00 00 	callq	0x10000e470 ## symbol stub for: _glUniform2f
000000010000cfb1	41 8b 77 04 	movl	0x4(%r15), %esi
000000010000cfb5	bf 92 88 00 00 	movl	$0x8892, %edi
000000010000cfba	e8 e5 13 00 00 	callq	0x10000e3a4 ## symbol stub for: _glBindBuffer
000000010000cfbf	bf 00 00 00 00 	movl	$0x0, %edi
000000010000cfc4	be 02 00 00 00 	movl	$0x2, %esi
000000010000cfc9	ba 06 14 00 00 	movl	$0x1406, %edx
000000010000cfce	31 c9 	xorl	%ecx, %ecx
000000010000cfd0	41 b8 08 00 00 00 	movl	$0x8, %r8d
000000010000cfd6	45 31 c9 	xorl	%r9d, %r9d
000000010000cfd9	e8 a4 14 00 00 	callq	0x10000e482 ## symbol stub for: _glVertexAttribPointer
000000010000cfde	31 ff 	xorl	%edi, %edi
000000010000cfe0	e8 2b 14 00 00 	callq	0x10000e410 ## symbol stub for: _glEnableVertexAttribArray
000000010000cfe5	bf e2 0b 00 00 	movl	$0xbe2, %edi
000000010000cfea	e8 1b 14 00 00 	callq	0x10000e40a ## symbol stub for: _glEnable
000000010000cfef	bf 03 03 00 00 	movl	$0x303, %edi
000000010000cff4	be 02 03 00 00 	movl	$0x302, %esi
000000010000cff9	e8 b8 13 00 00 	callq	0x10000e3b6 ## symbol stub for: _glBlendFunc
000000010000cffe	bf 06 80 00 00 	movl	$0x8006, %edi
000000010000d003	e8 a8 13 00 00 	callq	0x10000e3b0 ## symbol stub for: _glBlendEquation
000000010000d008	bf 06 00 00 00 	movl	$0x6, %edi
000000010000d00d	31 f6 	xorl	%esi, %esi
000000010000d00f	ba 04 00 00 00 	movl	$0x4, %edx
000000010000d014	e8 eb 13 00 00 	callq	0x10000e404 ## symbol stub for: _glDrawArrays
000000010000d019	31 ff 	xorl	%edi, %edi
000000010000d01b	48 83 c4 18 	addq	$0x18, %rsp
000000010000d01f	5b 	popq	%rbx
000000010000d020	41 5c 	popq	%r12
000000010000d022	41 5d 	popq	%r13
000000010000d024	41 5e 	popq	%r14
000000010000d026	41 5f 	popq	%r15
000000010000d028	5d 	popq	%rbp
000000010000d029	e9 d0 13 00 00 	jmp	0x10000e3fe ## symbol stub for: _glDisableVertexAttribArray
000000010000d02e	66 90 	nop
-[MlxWin mlx_gl_draw_font:andCtx:andX:andY:andColor:glyphX:glyphY:]:
000000010000d030	55 	pushq	%rbp
000000010000d031	48 89 e5 	movq	%rsp, %rbp
000000010000d034	41 57 	pushq	%r15
000000010000d036	41 56 	pushq	%r14
000000010000d038	41 55 	pushq	%r13
000000010000d03a	41 54 	pushq	%r12
000000010000d03c	53 	pushq	%rbx
000000010000d03d	48 83 ec 28 	subq	$0x28, %rsp
000000010000d041	45 89 cc 	movl	%r9d, %r12d
000000010000d044	44 89 45 bc 	movl	%r8d, -0x44(%rbp)
000000010000d048	49 89 cf 	movq	%rcx, %r15
000000010000d04b	48 89 55 b0 	movq	%rdx, -0x50(%rbp)
000000010000d04f	48 89 fb 	movq	%rdi, %rbx
000000010000d052	8b 4d 10 	movl	0x10(%rbp), %ecx
000000010000d055	48 8b 05 c4 8f 01 00 	movq	0x18fc4(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
000000010000d05c	48 8b 00 	movq	(%rax), %rax
000000010000d05f	48 89 45 d0 	movq	%rax, -0x30(%rbp)
000000010000d063	48 8b 05 d6 9b 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixel_nb(%rip), %rax
000000010000d06a	83 3c 03 00 	cmpl	$0x0, (%rbx,%rax)
000000010000d06e	7e 16 	jle	0x10000d086
000000010000d070	48 8b 35 49 9a 01 00 	movq	0x19a49(%rip), %rsi ## Objc selector ref: mlx_gl_draw
000000010000d077	48 89 df 	movq	%rbx, %rdi
000000010000d07a	41 89 ce 	movl	%ecx, %r14d
000000010000d07d	ff 15 bd 8f 01 00 	callq	*0x18fbd(%rip) ## Objc message: -[%rdi mlx_gl_draw]
000000010000d083	44 89 f1 	movl	%r14d, %ecx
000000010000d086	89 c8 	movl	%ecx, %eax
000000010000d088	c1 e8 10 	shrl	$0x10, %eax
000000010000d08b	0f b6 c0 	movzbl	%al, %eax
000000010000d08e	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
000000010000d092	f3 0f 10 0d 9e 20 00 00 	movss	0x209e(%rip), %xmm1
000000010000d09a	f3 0f 5e c1 	divss	%xmm1, %xmm0
000000010000d09e	f3 0f 11 45 c0 	movss	%xmm0, -0x40(%rbp)
000000010000d0a3	0f b6 c5 	movzbl	%ch, %eax
000000010000d0a6	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000d0a9	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
000000010000d0ad	f3 0f 5e c1 	divss	%xmm1, %xmm0
000000010000d0b1	f3 0f 11 45 c4 	movss	%xmm0, -0x3c(%rbp)
000000010000d0b6	0f b6 c1 	movzbl	%cl, %eax
000000010000d0b9	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000d0bc	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
000000010000d0c0	f3 0f 5e c1 	divss	%xmm1, %xmm0
000000010000d0c4	f3 0f 11 45 c8 	movss	%xmm0, -0x38(%rbp)
000000010000d0c9	c7 45 cc 00 00 80 3f 	movl	$0x3f800000, -0x34(%rbp)
000000010000d0d0	4c 8b 35 49 9b 01 00 	movq	_OBJC_IVAR_$_MlxWin.glsl(%rip), %r14
000000010000d0d7	42 8b 7c 33 40 	movl	0x40(%rbx,%r14), %edi
000000010000d0dc	e8 9b 13 00 00 	callq	0x10000e47c ## symbol stub for: _glUseProgram
000000010000d0e1	bf c0 84 00 00 	movl	$0x84c0, %edi
000000010000d0e6	e8 ad 12 00 00 	callq	0x10000e398 ## symbol stub for: _glActiveTexture
000000010000d0eb	41 8b 37 	movl	(%r15), %esi
000000010000d0ee	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000d0f3	e8 b2 12 00 00 	callq	0x10000e3aa ## symbol stub for: _glBindTexture
000000010000d0f8	42 8b 7c 33 4c 	movl	0x4c(%rbx,%r14), %edi
000000010000d0fd	31 f6 	xorl	%esi, %esi
000000010000d0ff	e8 66 13 00 00 	callq	0x10000e46a ## symbol stub for: _glUniform1i
000000010000d104	42 8b 7c 33 50 	movl	0x50(%rbx,%r14), %edi
000000010000d109	48 8d 55 c0 	leaq	-0x40(%rbp), %rdx
000000010000d10d	be 01 00 00 00 	movl	$0x1, %esi
000000010000d112	e8 5f 13 00 00 	callq	0x10000e476 ## symbol stub for: _glUniform4fv
000000010000d117	42 8b 7c 33 48 	movl	0x48(%rbx,%r14), %edi
000000010000d11c	48 8b 05 ed 9a 01 00 	movq	_OBJC_IVAR_$_MlxWin.size_x(%rip), %rax
000000010000d123	8b 04 03 	movl	(%rbx,%rax), %eax
000000010000d126	89 c1 	movl	%eax, %ecx
000000010000d128	c1 e9 1f 	shrl	$0x1f, %ecx
000000010000d12b	01 c1 	addl	%eax, %ecx
000000010000d12d	d1 f9 	sarl	%ecx
000000010000d12f	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000d132	f3 0f 2a c1 	cvtsi2ssl	%ecx, %xmm0
000000010000d136	4c 8b 2d db 9a 01 00 	movq	_OBJC_IVAR_$_MlxWin.size_y(%rip), %r13
000000010000d13d	42 8b 04 2b 	movl	(%rbx,%r13), %eax
000000010000d141	89 c1 	movl	%eax, %ecx
000000010000d143	c1 e9 1f 	shrl	$0x1f, %ecx
000000010000d146	01 c1 	addl	%eax, %ecx
000000010000d148	d1 f9 	sarl	%ecx
000000010000d14a	0f 57 c9 	xorps	%xmm1, %xmm1
000000010000d14d	f3 0f 2a c9 	cvtsi2ssl	%ecx, %xmm1
000000010000d151	e8 1a 13 00 00 	callq	0x10000e470 ## symbol stub for: _glUniform2f
000000010000d156	42 8b 7c 33 54 	movl	0x54(%rbx,%r14), %edi
000000010000d15b	8b 45 bc 	movl	-0x44(%rbp), %eax
000000010000d15e	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000d161	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
000000010000d165	41 f7 d4 	notl	%r12d
000000010000d168	46 03 24 2b 	addl	(%rbx,%r13), %r12d
000000010000d16c	0f 57 c9 	xorps	%xmm1, %xmm1
000000010000d16f	f3 41 0f 2a cc 	cvtsi2ssl	%r12d, %xmm1
000000010000d174	e8 f7 12 00 00 	callq	0x10000e470 ## symbol stub for: _glUniform2f
000000010000d179	42 8b 7c 33 58 	movl	0x58(%rbx,%r14), %edi
000000010000d17e	8b 45 18 	movl	0x18(%rbp), %eax
000000010000d181	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000d184	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
000000010000d188	8b 45 20 	movl	0x20(%rbp), %eax
000000010000d18b	0f 57 c9 	xorps	%xmm1, %xmm1
000000010000d18e	f3 0f 2a c8 	cvtsi2ssl	%eax, %xmm1
000000010000d192	e8 d9 12 00 00 	callq	0x10000e470 ## symbol stub for: _glUniform2f
000000010000d197	42 8b 7c 33 5c 	movl	0x5c(%rbx,%r14), %edi
000000010000d19c	48 8b 45 b0 	movq	-0x50(%rbp), %rax
000000010000d1a0	48 8b 00 	movq	(%rax), %rax
000000010000d1a3	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000d1a6	f3 0f 2a c0 	cvtsi2ssl	%eax, %xmm0
000000010000d1aa	48 c1 e8 20 	shrq	$0x20, %rax
000000010000d1ae	0f 57 c9 	xorps	%xmm1, %xmm1
000000010000d1b1	f3 0f 2a c8 	cvtsi2ssl	%eax, %xmm1
000000010000d1b5	e8 b6 12 00 00 	callq	0x10000e470 ## symbol stub for: _glUniform2f
000000010000d1ba	41 8b 77 04 	movl	0x4(%r15), %esi
000000010000d1be	bf 92 88 00 00 	movl	$0x8892, %edi
000000010000d1c3	e8 dc 11 00 00 	callq	0x10000e3a4 ## symbol stub for: _glBindBuffer
000000010000d1c8	bf 00 00 00 00 	movl	$0x0, %edi
000000010000d1cd	be 02 00 00 00 	movl	$0x2, %esi
000000010000d1d2	ba 06 14 00 00 	movl	$0x1406, %edx
000000010000d1d7	31 c9 	xorl	%ecx, %ecx
000000010000d1d9	41 b8 08 00 00 00 	movl	$0x8, %r8d
000000010000d1df	45 31 c9 	xorl	%r9d, %r9d
000000010000d1e2	e8 9b 12 00 00 	callq	0x10000e482 ## symbol stub for: _glVertexAttribPointer
000000010000d1e7	31 ff 	xorl	%edi, %edi
000000010000d1e9	e8 22 12 00 00 	callq	0x10000e410 ## symbol stub for: _glEnableVertexAttribArray
000000010000d1ee	bf e2 0b 00 00 	movl	$0xbe2, %edi
000000010000d1f3	e8 12 12 00 00 	callq	0x10000e40a ## symbol stub for: _glEnable
000000010000d1f8	bf 03 03 00 00 	movl	$0x303, %edi
000000010000d1fd	be 02 03 00 00 	movl	$0x302, %esi
000000010000d202	e8 af 11 00 00 	callq	0x10000e3b6 ## symbol stub for: _glBlendFunc
000000010000d207	bf 06 80 00 00 	movl	$0x8006, %edi
000000010000d20c	e8 9f 11 00 00 	callq	0x10000e3b0 ## symbol stub for: _glBlendEquation
000000010000d211	bf 06 00 00 00 	movl	$0x6, %edi
000000010000d216	31 f6 	xorl	%esi, %esi
000000010000d218	ba 04 00 00 00 	movl	$0x4, %edx
000000010000d21d	e8 e2 11 00 00 	callq	0x10000e404 ## symbol stub for: _glDrawArrays
000000010000d222	31 ff 	xorl	%edi, %edi
000000010000d224	e8 d5 11 00 00 	callq	0x10000e3fe ## symbol stub for: _glDisableVertexAttribArray
000000010000d229	48 8b 05 f0 8d 01 00 	movq	0x18df0(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
000000010000d230	48 8b 00 	movq	(%rax), %rax
000000010000d233	48 3b 45 d0 	cmpq	-0x30(%rbp), %rax
000000010000d237	75 0f 	jne	0x10000d248
000000010000d239	48 83 c4 28 	addq	$0x28, %rsp
000000010000d23d	5b 	popq	%rbx
000000010000d23e	41 5c 	popq	%r12
000000010000d240	41 5d 	popq	%r13
000000010000d242	41 5e 	popq	%r14
000000010000d244	41 5f 	popq	%r15
000000010000d246	5d 	popq	%rbp
000000010000d247	c3 	retq
000000010000d248	e8 15 11 00 00 	callq	0x10000e362 ## symbol stub for: ___stack_chk_fail
000000010000d24d	0f 1f 00 	nopl	(%rax)
-[MlxWin mlx_gl_draw]:
000000010000d250	55 	pushq	%rbp
000000010000d251	48 89 e5 	movq	%rsp, %rbp
000000010000d254	41 57 	pushq	%r15
000000010000d256	41 56 	pushq	%r14
000000010000d258	41 54 	pushq	%r12
000000010000d25a	53 	pushq	%rbx
000000010000d25b	48 89 fb 	movq	%rdi, %rbx
000000010000d25e	4c 8b 35 db 99 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixel_nb(%rip), %r14
000000010000d265	42 83 3c 33 00 	cmpl	$0x0, (%rbx,%r14)
000000010000d26a	0f 8e 35 01 00 00 	jle	0x10000d3a5
000000010000d270	4c 8b 3d a9 99 01 00 	movq	_OBJC_IVAR_$_MlxWin.glsl(%rip), %r15
000000010000d277	42 8b 7c 3b 08 	movl	0x8(%rbx,%r15), %edi
000000010000d27c	e8 fb 11 00 00 	callq	0x10000e47c ## symbol stub for: _glUseProgram
000000010000d281	bf c0 84 00 00 	movl	$0x84c0, %edi
000000010000d286	e8 0d 11 00 00 	callq	0x10000e398 ## symbol stub for: _glActiveTexture
000000010000d28b	4c 8b 25 96 99 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixel_vbuffer(%rip), %r12
000000010000d292	42 8b 34 23 	movl	(%rbx,%r12), %esi
000000010000d296	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000d29b	e8 0a 11 00 00 	callq	0x10000e3aa ## symbol stub for: _glBindTexture
000000010000d2a0	42 8b 7c 3b 10 	movl	0x10(%rbx,%r15), %edi
000000010000d2a5	31 f6 	xorl	%esi, %esi
000000010000d2a7	e8 be 11 00 00 	callq	0x10000e46a ## symbol stub for: _glUniform1i
000000010000d2ac	42 8b 34 23 	movl	(%rbx,%r12), %esi
000000010000d2b0	bf 92 88 00 00 	movl	$0x8892, %edi
000000010000d2b5	e8 ea 10 00 00 	callq	0x10000e3a4 ## symbol stub for: _glBindBuffer
000000010000d2ba	bf 00 00 00 00 	movl	$0x0, %edi
000000010000d2bf	be 02 00 00 00 	movl	$0x2, %esi
000000010000d2c4	ba 06 14 00 00 	movl	$0x1406, %edx
000000010000d2c9	31 c9 	xorl	%ecx, %ecx
000000010000d2cb	41 b8 08 00 00 00 	movl	$0x8, %r8d
000000010000d2d1	45 31 c9 	xorl	%r9d, %r9d
000000010000d2d4	e8 a9 11 00 00 	callq	0x10000e482 ## symbol stub for: _glVertexAttribPointer
000000010000d2d9	31 ff 	xorl	%edi, %edi
000000010000d2db	e8 30 11 00 00 	callq	0x10000e410 ## symbol stub for: _glEnableVertexAttribArray
000000010000d2e0	bf e2 0b 00 00 	movl	$0xbe2, %edi
000000010000d2e5	e8 20 11 00 00 	callq	0x10000e40a ## symbol stub for: _glEnable
000000010000d2ea	bf 03 03 00 00 	movl	$0x303, %edi
000000010000d2ef	be 02 03 00 00 	movl	$0x302, %esi
000000010000d2f4	e8 bd 10 00 00 	callq	0x10000e3b6 ## symbol stub for: _glBlendFunc
000000010000d2f9	bf 06 80 00 00 	movl	$0x8006, %edi
000000010000d2fe	e8 ad 10 00 00 	callq	0x10000e3b0 ## symbol stub for: _glBlendEquation
000000010000d303	bf 06 00 00 00 	movl	$0x6, %edi
000000010000d308	31 f6 	xorl	%esi, %esi
000000010000d30a	ba 04 00 00 00 	movl	$0x4, %edx
000000010000d30f	e8 f0 10 00 00 	callq	0x10000e404 ## symbol stub for: _glDrawArrays
000000010000d314	31 ff 	xorl	%edi, %edi
000000010000d316	e8 e3 10 00 00 	callq	0x10000e3fe ## symbol stub for: _glDisableVertexAttribArray
000000010000d31b	48 8b 0d ee 98 01 00 	movq	_OBJC_IVAR_$_MlxWin.size_x(%rip), %rcx
000000010000d322	48 8b 15 ef 98 01 00 	movq	_OBJC_IVAR_$_MlxWin.size_y(%rip), %rdx
000000010000d329	8b 04 13 	movl	(%rbx,%rdx), %eax
000000010000d32c	0f af 04 0b 	imull	(%rbx,%rcx), %eax
000000010000d330	8d 70 ff 	leal	-0x1(%rax), %esi
000000010000d333	42 89 34 33 	movl	%esi, (%rbx,%r14)
000000010000d337	85 c0 	testl	%eax, %eax
000000010000d339	48 8b 05 f8 98 01 00 	movq	_OBJC_IVAR_$_MlxWin.pixtexbuff(%rip), %rax
000000010000d340	74 2b 	je	0x10000d36d
000000010000d342	66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
000000010000d350	48 63 f6 	movslq	%esi, %rsi
000000010000d353	48 8b 3c 03 	movq	(%rbx,%rax), %rdi
000000010000d357	c7 04 b7 00 00 00 ff 	movl	$0xff000000, (%rdi,%rsi,4)
000000010000d35e	42 8b 3c 33 	movl	(%rbx,%r14), %edi
000000010000d362	8d 77 ff 	leal	-0x1(%rdi), %esi
000000010000d365	42 89 34 33 	movl	%esi, (%rbx,%r14)
000000010000d369	85 ff 	testl	%edi, %edi
000000010000d36b	75 e3 	jne	0x10000d350
000000010000d36d	8b 0c 0b 	movl	(%rbx,%rcx), %ecx
000000010000d370	44 8b 04 13 	movl	(%rbx,%rdx), %r8d
000000010000d374	48 83 ec 08 	subq	$0x8, %rsp
000000010000d378	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000d37d	31 f6 	xorl	%esi, %esi
000000010000d37f	ba 58 80 00 00 	movl	$0x8058, %edx
000000010000d384	45 31 c9 	xorl	%r9d, %r9d
000000010000d387	ff 34 03 	pushq	(%rbx,%rax)
000000010000d38a	68 01 14 00 00 	pushq	$0x1401
000000010000d38f	68 e1 80 00 00 	pushq	$0x80e1
000000010000d394	e8 bf 10 00 00 	callq	0x10000e458 ## symbol stub for: _glTexImage2D
000000010000d399	48 83 c4 20 	addq	$0x20, %rsp
000000010000d39d	42 c7 04 33 00 00 00 00 	movl	$0x0, (%rbx,%r14)
000000010000d3a5	5b 	popq	%rbx
000000010000d3a6	41 5c 	popq	%r12
000000010000d3a8	41 5e 	popq	%r14
000000010000d3aa	41 5f 	popq	%r15
000000010000d3ac	5d 	popq	%rbp
000000010000d3ad	c3 	retq
000000010000d3ae	66 90 	nop
_mlx_new_window:
000000010000d3b0	55 	pushq	%rbp
000000010000d3b1	48 89 e5 	movq	%rsp, %rbp
000000010000d3b4	41 57 	pushq	%r15
000000010000d3b6	41 56 	pushq	%r14
000000010000d3b8	41 55 	pushq	%r13
000000010000d3ba	41 54 	pushq	%r12
000000010000d3bc	53 	pushq	%rbx
000000010000d3bd	48 83 ec 48 	subq	$0x48, %rsp
000000010000d3c1	49 89 ce 	movq	%rcx, %r14
000000010000d3c4	41 89 d7 	movl	%edx, %r15d
000000010000d3c7	41 89 f4 	movl	%esi, %r12d
000000010000d3ca	49 89 fd 	movq	%rdi, %r13
000000010000d3cd	bf 20 00 00 00 	movl	$0x20, %edi
000000010000d3d2	e8 b1 10 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000d3d7	48 89 c3 	movq	%rax, %rbx
000000010000d3da	48 85 db 	testq	%rbx, %rbx
000000010000d3dd	0f 84 e7 00 00 00 	je	0x10000d4ca
000000010000d3e3	48 c7 43 08 00 00 00 00 	movq	$0x0, 0x8(%rbx)
000000010000d3eb	49 8b 45 08 	movq	0x8(%r13), %rax
000000010000d3ef	48 89 43 18 	movq	%rax, 0x18(%rbx)
000000010000d3f3	c7 43 10 00 00 00 00 	movl	$0x0, 0x10(%rbx)
000000010000d3fa	c7 43 14 01 00 00 00 	movl	$0x1, 0x14(%rbx)
000000010000d401	49 89 5d 08 	movq	%rbx, 0x8(%r13)
000000010000d405	f2 41 0f 2a c4 	cvtsi2sdl	%r12d, %xmm0
000000010000d40a	f2 41 0f 2a cf 	cvtsi2sdl	%r15d, %xmm1
000000010000d40f	0f 28 15 2a 1d 00 00 	movaps	0x1d2a(%rip), %xmm2
000000010000d416	0f 29 55 b0 	movaps	%xmm2, -0x50(%rbp)
000000010000d41a	f2 0f 11 45 c0 	movsd	%xmm0, -0x40(%rbp)
000000010000d41f	f2 0f 11 4d c8 	movsd	%xmm1, -0x38(%rbp)
000000010000d424	48 8b 3d 75 97 01 00 	movq	0x19775(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
000000010000d42b	48 8b 35 ae 96 01 00 	movq	0x196ae(%rip), %rsi ## Objc selector ref: stringWithCString:encoding:
000000010000d432	4c 8b 3d 07 8c 01 00 	movq	0x18c07(%rip), %r15 ## Objc message: +[NSString stringWithCString:encoding:]
000000010000d439	b9 01 00 00 00 	movl	$0x1, %ecx
000000010000d43e	4c 89 f2 	movq	%r14, %rdx
000000010000d441	41 ff d7 	callq	*%r15
000000010000d444	49 89 c6 	movq	%rax, %r14
000000010000d447	48 8b 3d 5a 97 01 00 	movq	0x1975a(%rip), %rdi ## Objc class ref: MlxWin
000000010000d44e	48 8b 35 cb 95 01 00 	movq	0x195cb(%rip), %rsi ## Objc selector ref: alloc
000000010000d455	41 ff d7 	callq	*%r15
000000010000d458	48 8b 35 89 96 01 00 	movq	0x19689(%rip), %rsi ## Objc selector ref: initWithRect:andTitle:pfaAttrs:
000000010000d45f	48 8b 4d c8 	movq	-0x38(%rbp), %rcx
000000010000d463	48 89 4c 24 18 	movq	%rcx, 0x18(%rsp)
000000010000d468	48 8b 4d c0 	movq	-0x40(%rbp), %rcx
000000010000d46c	48 89 4c 24 10 	movq	%rcx, 0x10(%rsp)
000000010000d471	48 8b 4d b0 	movq	-0x50(%rbp), %rcx
000000010000d475	48 8b 55 b8 	movq	-0x48(%rbp), %rdx
000000010000d479	48 89 54 24 08 	movq	%rdx, 0x8(%rsp)
000000010000d47e	48 89 0c 24 	movq	%rcx, (%rsp)
000000010000d482	48 8d 0d 77 98 01 00 	leaq	_pfa_attrs(%rip), %rcx
000000010000d489	48 89 c7 	movq	%rax, %rdi
000000010000d48c	4c 89 f2 	movq	%r14, %rdx
000000010000d48f	41 ff d7 	callq	*%r15
000000010000d492	48 89 03 	movq	%rax, (%rbx)
000000010000d495	48 85 c0 	testq	%rax, %rax
000000010000d498	74 32 	je	0x10000d4cc
000000010000d49a	48 8b 35 4f 96 01 00 	movq	0x1964f(%rip), %rsi ## Objc selector ref: pixel_management
000000010000d4a1	48 89 c7 	movq	%rax, %rdi
000000010000d4a4	ff 15 96 8b 01 00 	callq	*0x18b96(%rip) ## Objc message: +[MlxWin pixel_management]
000000010000d4aa	85 c0 	testl	%eax, %eax
000000010000d4ac	75 1e 	jne	0x10000d4cc
000000010000d4ae	48 8b 3b 	movq	(%rbx), %rdi
000000010000d4b1	48 8b 35 40 96 01 00 	movq	0x19640(%rip), %rsi ## Objc selector ref: destroyPixelManagement
000000010000d4b8	41 ff d7 	callq	*%r15
000000010000d4bb	48 8b 3b 	movq	(%rbx), %rdi
000000010000d4be	48 8b 35 3b 96 01 00 	movq	0x1963b(%rip), %rsi ## Objc selector ref: destroyMe
000000010000d4c5	41 ff d7 	callq	*%r15
000000010000d4c8	eb 02 	jmp	0x10000d4cc
000000010000d4ca	31 db 	xorl	%ebx, %ebx
000000010000d4cc	48 89 d8 	movq	%rbx, %rax
000000010000d4cf	48 83 c4 48 	addq	$0x48, %rsp
000000010000d4d3	5b 	popq	%rbx
000000010000d4d4	41 5c 	popq	%r12
000000010000d4d6	41 5d 	popq	%r13
000000010000d4d8	41 5e 	popq	%r14
000000010000d4da	41 5f 	popq	%r15
000000010000d4dc	5d 	popq	%rbp
000000010000d4dd	c3 	retq
000000010000d4de	66 90 	nop
_mlx_clear_window:
000000010000d4e0	55 	pushq	%rbp
000000010000d4e1	48 89 e5 	movq	%rsp, %rbp
000000010000d4e4	41 56 	pushq	%r14
000000010000d4e6	53 	pushq	%rbx
000000010000d4e7	48 89 f3 	movq	%rsi, %rbx
000000010000d4ea	48 8b 3b 	movq	(%rbx), %rdi
000000010000d4ed	48 8b 35 74 96 01 00 	movq	0x19674(%rip), %rsi ## Objc selector ref: selectGLContext
000000010000d4f4	4c 8b 35 45 8b 01 00 	movq	0x18b45(%rip), %r14 ## Objc message: -[%rdi selectGLContext]
000000010000d4fb	41 ff d6 	callq	*%r14
000000010000d4fe	48 8b 3b 	movq	(%rbx), %rdi
000000010000d501	48 8b 35 00 96 01 00 	movq	0x19600(%rip), %rsi ## Objc selector ref: clearWin
000000010000d508	41 ff d6 	callq	*%r14
000000010000d50b	ff 43 10 	incl	0x10(%rbx)
000000010000d50e	5b 	popq	%rbx
000000010000d50f	41 5e 	popq	%r14
000000010000d511	5d 	popq	%rbp
000000010000d512	c3 	retq
000000010000d513	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_mlx_expose_hook:
000000010000d520	55 	pushq	%rbp
000000010000d521	48 89 e5 	movq	%rsp, %rbp
000000010000d524	48 89 d0 	movq	%rdx, %rax
000000010000d527	48 89 f1 	movq	%rsi, %rcx
000000010000d52a	48 8b 3f 	movq	(%rdi), %rdi
000000010000d52d	48 8b 35 a4 95 01 00 	movq	0x195a4(%rip), %rsi ## Objc selector ref: setEvent:andFunc:andParam:
000000010000d534	ba 0c 00 00 00 	movl	$0xc, %edx
000000010000d539	49 89 c0 	movq	%rax, %r8
000000010000d53c	5d 	popq	%rbp
000000010000d53d	ff 25 fd 8a 01 00 	jmpq	*0x18afd(%rip) ## Objc message: -[%rdi setEvent:andFunc:andParam:]
000000010000d543	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_mlx_key_hook:
000000010000d550	55 	pushq	%rbp
000000010000d551	48 89 e5 	movq	%rsp, %rbp
000000010000d554	48 89 d0 	movq	%rdx, %rax
000000010000d557	48 89 f1 	movq	%rsi, %rcx
000000010000d55a	48 8b 3f 	movq	(%rdi), %rdi
000000010000d55d	48 8b 35 74 95 01 00 	movq	0x19574(%rip), %rsi ## Objc selector ref: setEvent:andFunc:andParam:
000000010000d564	ba 03 00 00 00 	movl	$0x3, %edx
000000010000d569	49 89 c0 	movq	%rax, %r8
000000010000d56c	5d 	popq	%rbp
000000010000d56d	ff 25 cd 8a 01 00 	jmpq	*0x18acd(%rip) ## Objc message: -[%rdi setEvent:andFunc:andParam:]
000000010000d573	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_mlx_mouse_hook:
000000010000d580	55 	pushq	%rbp
000000010000d581	48 89 e5 	movq	%rsp, %rbp
000000010000d584	48 89 d0 	movq	%rdx, %rax
000000010000d587	48 89 f1 	movq	%rsi, %rcx
000000010000d58a	48 8b 3f 	movq	(%rdi), %rdi
000000010000d58d	48 8b 35 44 95 01 00 	movq	0x19544(%rip), %rsi ## Objc selector ref: setEvent:andFunc:andParam:
000000010000d594	ba 04 00 00 00 	movl	$0x4, %edx
000000010000d599	49 89 c0 	movq	%rax, %r8
000000010000d59c	5d 	popq	%rbp
000000010000d59d	ff 25 9d 8a 01 00 	jmpq	*0x18a9d(%rip) ## Objc message: -[%rdi setEvent:andFunc:andParam:]
000000010000d5a3	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_mlx_hook:
000000010000d5b0	55 	pushq	%rbp
000000010000d5b1	48 89 e5 	movq	%rsp, %rbp
000000010000d5b4	89 f0 	movl	%esi, %eax
000000010000d5b6	48 8b 3f 	movq	(%rdi), %rdi
000000010000d5b9	48 8b 35 18 95 01 00 	movq	0x19518(%rip), %rsi ## Objc selector ref: setEvent:andFunc:andParam:
000000010000d5c0	89 c2 	movl	%eax, %edx
000000010000d5c2	5d 	popq	%rbp
000000010000d5c3	ff 25 77 8a 01 00 	jmpq	*0x18a77(%rip) ## Objc message: -[%rdi setEvent:andFunc:andParam:]
000000010000d5c9	0f 1f 80 00 00 00 00 	nopl	(%rax)
_mlx_do_key_autorepeatoff:
000000010000d5d0	55 	pushq	%rbp
000000010000d5d1	48 89 e5 	movq	%rsp, %rbp
000000010000d5d4	41 57 	pushq	%r15
000000010000d5d6	41 56 	pushq	%r14
000000010000d5d8	53 	pushq	%rbx
000000010000d5d9	50 	pushq	%rax
000000010000d5da	48 8b 5f 08 	movq	0x8(%rdi), %rbx
000000010000d5de	48 85 db 	testq	%rbx, %rbx
000000010000d5e1	74 31 	je	0x10000d614
000000010000d5e3	4c 8b 35 5e 94 01 00 	movq	0x1945e(%rip), %r14 ## Objc selector ref: setKeyRepeat:
000000010000d5ea	4c 8b 3d 4f 8a 01 00 	movq	0x18a4f(%rip), %r15 ## Objc message: -[%rdi setKeyRepeat:]
000000010000d5f1	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
000000010000d600	48 8b 3b 	movq	(%rbx), %rdi
000000010000d603	31 d2 	xorl	%edx, %edx
000000010000d605	4c 89 f6 	movq	%r14, %rsi
000000010000d608	41 ff d7 	callq	*%r15
000000010000d60b	48 8b 5b 18 	movq	0x18(%rbx), %rbx
000000010000d60f	48 85 db 	testq	%rbx, %rbx
000000010000d612	75 ec 	jne	0x10000d600
000000010000d614	31 c0 	xorl	%eax, %eax
000000010000d616	48 83 c4 08 	addq	$0x8, %rsp
000000010000d61a	5b 	popq	%rbx
000000010000d61b	41 5e 	popq	%r14
000000010000d61d	41 5f 	popq	%r15
000000010000d61f	5d 	popq	%rbp
000000010000d620	c3 	retq
000000010000d621	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_mlx_do_key_autorepeaton:
000000010000d630	55 	pushq	%rbp
000000010000d631	48 89 e5 	movq	%rsp, %rbp
000000010000d634	41 57 	pushq	%r15
000000010000d636	41 56 	pushq	%r14
000000010000d638	53 	pushq	%rbx
000000010000d639	50 	pushq	%rax
000000010000d63a	48 8b 5f 08 	movq	0x8(%rdi), %rbx
000000010000d63e	48 85 db 	testq	%rbx, %rbx
000000010000d641	74 34 	je	0x10000d677
000000010000d643	4c 8b 35 fe 93 01 00 	movq	0x193fe(%rip), %r14 ## Objc selector ref: setKeyRepeat:
000000010000d64a	4c 8b 3d ef 89 01 00 	movq	0x189ef(%rip), %r15 ## Objc message: -[%rdi setKeyRepeat:]
000000010000d651	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
000000010000d660	48 8b 3b 	movq	(%rbx), %rdi
000000010000d663	ba 01 00 00 00 	movl	$0x1, %edx
000000010000d668	4c 89 f6 	movq	%r14, %rsi
000000010000d66b	41 ff d7 	callq	*%r15
000000010000d66e	48 8b 5b 18 	movq	0x18(%rbx), %rbx
000000010000d672	48 85 db 	testq	%rbx, %rbx
000000010000d675	75 e9 	jne	0x10000d660
000000010000d677	31 c0 	xorl	%eax, %eax
000000010000d679	48 83 c4 08 	addq	$0x8, %rsp
000000010000d67d	5b 	popq	%rbx
000000010000d67e	41 5e 	popq	%r14
000000010000d680	41 5f 	popq	%r15
000000010000d682	5d 	popq	%rbp
000000010000d683	c3 	retq
000000010000d684	66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_mlx_destroy_window:
000000010000d690	55 	pushq	%rbp
000000010000d691	48 89 e5 	movq	%rsp, %rbp
000000010000d694	41 57 	pushq	%r15
000000010000d696	41 56 	pushq	%r14
000000010000d698	41 54 	pushq	%r12
000000010000d69a	53 	pushq	%rbx
000000010000d69b	48 83 ec 20 	subq	$0x20, %rsp
000000010000d69f	49 89 f7 	movq	%rsi, %r15
000000010000d6a2	49 89 fe 	movq	%rdi, %r14
000000010000d6a5	49 8b 46 08 	movq	0x8(%r14), %rax
000000010000d6a9	48 89 45 d8 	movq	%rax, -0x28(%rbp)
000000010000d6ad	48 85 c0 	testq	%rax, %rax
000000010000d6b0	74 2c 	je	0x10000d6de
000000010000d6b2	48 8d 4d c0 	leaq	-0x40(%rbp), %rcx
000000010000d6b6	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
000000010000d6c0	4c 39 f8 	cmpq	%r15, %rax
000000010000d6c3	75 08 	jne	0x10000d6cd
000000010000d6c5	49 8b 47 18 	movq	0x18(%r15), %rax
000000010000d6c9	48 89 41 18 	movq	%rax, 0x18(%rcx)
000000010000d6cd	48 85 c0 	testq	%rax, %rax
000000010000d6d0	74 0c 	je	0x10000d6de
000000010000d6d2	48 89 c1 	movq	%rax, %rcx
000000010000d6d5	48 8b 40 18 	movq	0x18(%rax), %rax
000000010000d6d9	48 85 c0 	testq	%rax, %rax
000000010000d6dc	75 e2 	jne	0x10000d6c0
000000010000d6de	48 8b 45 d8 	movq	-0x28(%rbp), %rax
000000010000d6e2	49 89 46 08 	movq	%rax, 0x8(%r14)
000000010000d6e6	41 83 7f 14 00 	cmpl	$0x0, 0x14(%r15)
000000010000d6eb	74 62 	je	0x10000d74f
000000010000d6ed	49 8b 3f 	movq	(%r15), %rdi
000000010000d6f0	48 8b 35 71 94 01 00 	movq	0x19471(%rip), %rsi ## Objc selector ref: selectGLContext
000000010000d6f7	ff 15 43 89 01 00 	callq	*0x18943(%rip) ## Objc message: -[%rdi selectGLContext]
000000010000d6fd	49 8b 5f 08 	movq	0x8(%r15), %rbx
000000010000d701	48 85 db 	testq	%rbx, %rbx
000000010000d704	74 39 	je	0x10000d73f
000000010000d706	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
000000010000d710	48 8d 73 04 	leaq	0x4(%rbx), %rsi
000000010000d714	bf 01 00 00 00 	movl	$0x1, %edi
000000010000d719	e8 c2 0c 00 00 	callq	0x10000e3e0 ## symbol stub for: _glDeleteBuffers
000000010000d71e	bf 01 00 00 00 	movl	$0x1, %edi
000000010000d723	48 89 de 	movq	%rbx, %rsi
000000010000d726	e8 c7 0c 00 00 	callq	0x10000e3f2 ## symbol stub for: _glDeleteTextures
000000010000d72b	4c 8b 63 10 	movq	0x10(%rbx), %r12
000000010000d72f	48 89 df 	movq	%rbx, %rdi
000000010000d732	e8 4f 0c 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000d737	4d 85 e4 	testq	%r12, %r12
000000010000d73a	4c 89 e3 	movq	%r12, %rbx
000000010000d73d	75 d1 	jne	0x10000d710
000000010000d73f	49 8b 3f 	movq	(%r15), %rdi
000000010000d742	48 8b 35 af 93 01 00 	movq	0x193af(%rip), %rsi ## Objc selector ref: destroyPixelManagement
000000010000d749	ff 15 f1 88 01 00 	callq	*0x188f1(%rip) ## Objc message: -[%rdi destroyPixelManagement]
000000010000d74f	49 8b 3f 	movq	(%r15), %rdi
000000010000d752	48 8b 35 a7 93 01 00 	movq	0x193a7(%rip), %rsi ## Objc selector ref: destroyMe
000000010000d759	ff 15 e1 88 01 00 	callq	*0x188e1(%rip) ## Objc message: -[%rdi destroyMe]
000000010000d75f	4c 89 ff 	movq	%r15, %rdi
000000010000d762	e8 1f 0c 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000d767	4c 89 f7 	movq	%r14, %rdi
000000010000d76a	e8 a1 04 00 00 	callq	_mlx_do_sync
000000010000d76f	31 c0 	xorl	%eax, %eax
000000010000d771	48 83 c4 20 	addq	$0x20, %rsp
000000010000d775	5b 	popq	%rbx
000000010000d776	41 5c 	popq	%r12
000000010000d778	41 5e 	popq	%r14
000000010000d77a	41 5f 	popq	%r15
000000010000d77c	5d 	popq	%rbp
000000010000d77d	c3 	retq
000000010000d77e	90 	nop
000000010000d77f	90 	nop
_do_loop_hook2:
000000010000d780	55 	pushq	%rbp
000000010000d781	48 89 e5 	movq	%rsp, %rbp
000000010000d784	48 8b 7e 20 	movq	0x20(%rsi), %rdi
000000010000d788	5d 	popq	%rbp
000000010000d789	ff 66 18 	jmpq	*0x18(%rsi)
000000010000d78c	0f 1f 40 00 	nopl	(%rax)
_do_loop_flush:
000000010000d790	55 	pushq	%rbp
000000010000d791	48 89 e5 	movq	%rsp, %rbp
000000010000d794	41 57 	pushq	%r15
000000010000d796	41 56 	pushq	%r14
000000010000d798	41 54 	pushq	%r12
000000010000d79a	53 	pushq	%rbx
000000010000d79b	48 8b 5a 08 	movq	0x8(%rdx), %rbx
000000010000d79f	48 85 db 	testq	%rbx, %rbx
000000010000d7a2	74 51 	je	0x10000d7f5
000000010000d7a4	4c 8b 35 bd 93 01 00 	movq	0x193bd(%rip), %r14 ## Objc selector ref: selectGLContext
000000010000d7ab	4c 8b 3d 0e 93 01 00 	movq	0x1930e(%rip), %r15 ## Objc selector ref: mlx_gl_draw
000000010000d7b2	4c 8b 25 87 88 01 00 	movq	0x18887(%rip), %r12 ## Objc message: -[%rdi mlx_gl_draw]
000000010000d7b9	0f 1f 80 00 00 00 00 	nopl	(%rax)
000000010000d7c0	48 8b 43 10 	movq	0x10(%rbx), %rax
000000010000d7c4	85 c0 	testl	%eax, %eax
000000010000d7c6	7e 24 	jle	0x10000d7ec
000000010000d7c8	48 c1 e8 20 	shrq	$0x20, %rax
000000010000d7cc	74 1e 	je	0x10000d7ec
000000010000d7ce	48 8b 3b 	movq	(%rbx), %rdi
000000010000d7d1	4c 89 f6 	movq	%r14, %rsi
000000010000d7d4	41 ff d4 	callq	*%r12
000000010000d7d7	48 8b 3b 	movq	(%rbx), %rdi
000000010000d7da	4c 89 fe 	movq	%r15, %rsi
000000010000d7dd	41 ff d4 	callq	*%r12
000000010000d7e0	e8 31 0c 00 00 	callq	0x10000e416 ## symbol stub for: _glFlush
000000010000d7e5	c7 43 10 00 00 00 00 	movl	$0x0, 0x10(%rbx)
000000010000d7ec	48 8b 5b 18 	movq	0x18(%rbx), %rbx
000000010000d7f0	48 85 db 	testq	%rbx, %rbx
000000010000d7f3	75 cb 	jne	0x10000d7c0
000000010000d7f5	5b 	popq	%rbx
000000010000d7f6	41 5c 	popq	%r12
000000010000d7f8	41 5e 	popq	%r14
000000010000d7fa	41 5f 	popq	%r15
000000010000d7fc	5d 	popq	%rbp
000000010000d7fd	c3 	retq
000000010000d7fe	66 90 	nop
_mlx_init:
000000010000d800	55 	pushq	%rbp
000000010000d801	48 89 e5 	movq	%rsp, %rbp
000000010000d804	41 57 	pushq	%r15
000000010000d806	41 56 	pushq	%r14
000000010000d808	41 54 	pushq	%r12
000000010000d80a	53 	pushq	%rbx
000000010000d80b	48 81 ec d0 00 00 00 	subq	$0xd0, %rsp
000000010000d812	48 8b 05 07 88 01 00 	movq	0x18807(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
000000010000d819	48 8b 00 	movq	(%rax), %rax
000000010000d81c	48 89 45 d8 	movq	%rax, -0x28(%rbp)
000000010000d820	bf 40 00 00 00 	movl	$0x40, %edi
000000010000d825	e8 5e 0c 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000d82a	49 89 c4 	movq	%rax, %r12
000000010000d82d	4d 85 e4 	testq	%r12, %r12
000000010000d830	0f 84 c7 00 00 00 	je	0x10000d8fd
000000010000d836	41 c7 44 24 38 00 00 00 00 	movl	$0x0, 0x38(%r12)
000000010000d83f	49 c7 44 24 20 00 00 00 00 	movq	$0x0, 0x20(%r12)
000000010000d848	49 c7 44 24 18 00 00 00 00 	movq	$0x0, 0x18(%r12)
000000010000d851	49 c7 44 24 10 00 00 00 00 	movq	$0x0, 0x10(%r12)
000000010000d85a	49 c7 44 24 08 00 00 00 00 	movq	$0x0, 0x8(%r12)
000000010000d863	48 8b 3d 46 93 01 00 	movq	0x19346(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSApplication
000000010000d86a	48 8b 35 9f 92 01 00 	movq	0x1929f(%rip), %rsi ## Objc selector ref: sharedApplication
000000010000d871	4c 8b 3d c8 87 01 00 	movq	0x187c8(%rip), %r15 ## Objc message: +[NSApplication sharedApplication]
000000010000d878	41 ff d7 	callq	*%r15
000000010000d87b	49 89 04 24 	movq	%rax, (%r12)
000000010000d87f	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000d882	0f 29 85 40 ff ff ff 	movaps	%xmm0, -0xc0(%rbp)
000000010000d889	0f 29 85 30 ff ff ff 	movaps	%xmm0, -0xd0(%rbp)
000000010000d890	0f 29 85 20 ff ff ff 	movaps	%xmm0, -0xe0(%rbp)
000000010000d897	0f 29 85 10 ff ff ff 	movaps	%xmm0, -0xf0(%rbp)
000000010000d89e	48 8b 3d 13 93 01 00 	movq	0x19313(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSRunningApplication
000000010000d8a5	48 8b 35 6c 92 01 00 	movq	0x1926c(%rip), %rsi ## Objc selector ref: runningApplicationsWithBundleIdentifier:
000000010000d8ac	48 8d 15 45 8a 01 00 	leaq	0x18a45(%rip), %rdx ## Objc cfstring ref: @"com.apple.finder"
000000010000d8b3	41 ff d7 	callq	*%r15
000000010000d8b6	48 8b 35 63 92 01 00 	movq	0x19263(%rip), %rsi ## Objc selector ref: countByEnumeratingWithState:objects:count:
000000010000d8bd	48 8d 95 10 ff ff ff 	leaq	-0xf0(%rbp), %rdx
000000010000d8c4	48 8d 8d 58 ff ff ff 	leaq	-0xa8(%rbp), %rcx
000000010000d8cb	41 b8 10 00 00 00 	movl	$0x10, %r8d
000000010000d8d1	48 89 c7 	movq	%rax, %rdi
000000010000d8d4	41 ff d7 	callq	*%r15
000000010000d8d7	48 85 c0 	testq	%rax, %rax
000000010000d8da	74 29 	je	0x10000d905
000000010000d8dc	48 8b 85 18 ff ff ff 	movq	-0xe8(%rbp), %rax
000000010000d8e3	48 8b 38 	movq	(%rax), %rdi
000000010000d8e6	4c 8b 35 3b 92 01 00 	movq	0x1923b(%rip), %r14 ## Objc selector ref: activateWithOptions:
000000010000d8ed	ba 02 00 00 00 	movl	$0x2, %edx
000000010000d8f2	4c 89 f6 	movq	%r14, %rsi
000000010000d8f5	ff 15 45 87 01 00 	callq	*0x18745(%rip) ## Objc message: +[NSRunningApplication activateWithOptions:]
000000010000d8fb	eb 0f 	jmp	0x10000d90c
000000010000d8fd	45 31 e4 	xorl	%r12d, %r12d
000000010000d900	e9 fd 00 00 00 	jmp	0x10000da02
000000010000d905	4c 8b 35 1c 92 01 00 	movq	0x1921c(%rip), %r14 ## Objc selector ref: activateWithOptions:
000000010000d90c	bf a0 86 01 00 	movl	$0x186a0, %edi
000000010000d911	e8 cc 0b 00 00 	callq	0x10000e4e2 ## symbol stub for: _usleep
000000010000d916	48 b8 00 00 00 00 02 00 00 00 	movabsq	$0x200000000, %rax
000000010000d920	48 89 85 50 ff ff ff 	movq	%rax, -0xb0(%rbp)
000000010000d927	48 8d bd 50 ff ff ff 	leaq	-0xb0(%rbp), %rdi
000000010000d92e	be 01 00 00 00 	movl	$0x1, %esi
000000010000d933	e8 1e 0a 00 00 	callq	0x10000e356 ## symbol stub for: _TransformProcessType
000000010000d938	bf a0 86 01 00 	movl	$0x186a0, %edi
000000010000d93d	e8 a0 0b 00 00 	callq	0x10000e4e2 ## symbol stub for: _usleep
000000010000d942	48 8b 3d 6f 92 01 00 	movq	0x1926f(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSRunningApplication
000000010000d949	48 8b 35 e0 91 01 00 	movq	0x191e0(%rip), %rsi ## Objc selector ref: currentApplication
000000010000d950	41 ff d7 	callq	*%r15
000000010000d953	ba 02 00 00 00 	movl	$0x2, %edx
000000010000d958	48 89 c7 	movq	%rax, %rdi
000000010000d95b	4c 89 f6 	movq	%r14, %rsi
000000010000d95e	41 ff d7 	callq	*%r15
000000010000d961	31 db 	xorl	%ebx, %ebx
000000010000d963	be 74 04 00 00 	movl	$0x474, %esi
000000010000d968	ba 14 00 00 00 	movl	$0x14, %edx
000000010000d96d	31 c0 	xorl	%eax, %eax
000000010000d96f	4c 89 e7 	movq	%r12, %rdi
000000010000d972	e8 e9 04 00 00 	callq	_mlx_new_image
000000010000d977	49 89 44 24 30 	movq	%rax, 0x30(%r12)
000000010000d97c	48 8d 0d fd 17 00 00 	leaq	_font_atlas(%rip), %rcx
000000010000d983	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
000000010000d990	0f b6 54 0b 0e 	movzbl	0xe(%rbx,%rcx), %edx
000000010000d995	48 8b 40 08 	movq	0x8(%rax), %rax
000000010000d999	88 14 18 	movb	%dl, (%rax,%rbx)
000000010000d99c	0f b6 44 0b 0c 	movzbl	0xc(%rbx,%rcx), %eax
000000010000d9a1	0f b6 54 0b 0d 	movzbl	0xd(%rbx,%rcx), %edx
000000010000d9a6	49 8b 74 24 30 	movq	0x30(%r12), %rsi
000000010000d9ab	48 8b 76 08 	movq	0x8(%rsi), %rsi
000000010000d9af	88 54 1e 01 	movb	%dl, 0x1(%rsi,%rbx)
000000010000d9b3	49 8b 54 24 30 	movq	0x30(%r12), %rdx
000000010000d9b8	48 8b 52 08 	movq	0x8(%rdx), %rdx
000000010000d9bc	88 44 1a 02 	movb	%al, 0x2(%rdx,%rbx)
000000010000d9c0	0f b6 44 0b 0f 	movzbl	0xf(%rbx,%rcx), %eax
000000010000d9c5	f6 d0 	notb	%al
000000010000d9c7	49 8b 54 24 30 	movq	0x30(%r12), %rdx
000000010000d9cc	48 8b 52 08 	movq	0x8(%rdx), %rdx
000000010000d9d0	88 44 1a 03 	movb	%al, 0x3(%rdx,%rbx)
000000010000d9d4	48 83 c3 04 	addq	$0x4, %rbx
000000010000d9d8	49 8b 44 24 30 	movq	0x30(%r12), %rax
000000010000d9dd	48 81 fb 40 64 01 00 	cmpq	$0x16440, %rbx
000000010000d9e4	7c aa 	jl	0x10000d990
000000010000d9e6	c7 40 18 00 00 20 41 	movl	$0x41200000, 0x18(%rax)
000000010000d9ed	c7 40 20 00 00 20 41 	movl	$0x41200000, 0x20(%rax)
000000010000d9f4	c7 40 24 00 00 a8 c1 	movl	$0xc1a80000, 0x24(%rax)
000000010000d9fb	c7 40 2c 00 00 a8 c1 	movl	$0xc1a80000, 0x2c(%rax)
000000010000da02	48 8b 05 17 86 01 00 	movq	0x18617(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
000000010000da09	48 8b 00 	movq	(%rax), %rax
000000010000da0c	48 3b 45 d8 	cmpq	-0x28(%rbp), %rax
000000010000da10	75 13 	jne	0x10000da25
000000010000da12	4c 89 e0 	movq	%r12, %rax
000000010000da15	48 81 c4 d0 00 00 00 	addq	$0xd0, %rsp
000000010000da1c	5b 	popq	%rbx
000000010000da1d	41 5c 	popq	%r12
000000010000da1f	41 5e 	popq	%r14
000000010000da21	41 5f 	popq	%r15
000000010000da23	5d 	popq	%rbp
000000010000da24	c3 	retq
000000010000da25	e8 38 09 00 00 	callq	0x10000e362 ## symbol stub for: ___stack_chk_fail
000000010000da2a	66 0f 1f 44 00 00 	nopw	(%rax,%rax)
_mlx_loop:
000000010000da30	55 	pushq	%rbp
000000010000da31	48 89 e5 	movq	%rsp, %rbp
000000010000da34	53 	pushq	%rbx
000000010000da35	48 83 ec 28 	subq	$0x28, %rsp
000000010000da39	48 c7 45 d0 00 00 00 00 	movq	$0x0, -0x30(%rbp)
000000010000da41	48 89 7d d8 	movq	%rdi, -0x28(%rbp)
000000010000da45	48 c7 45 f0 00 00 00 00 	movq	$0x0, -0x10(%rbp)
000000010000da4d	48 c7 45 e8 00 00 00 00 	movq	$0x0, -0x18(%rbp)
000000010000da55	48 c7 45 e0 00 00 00 00 	movq	$0x0, -0x20(%rbp)
000000010000da5d	c7 47 38 01 00 00 00 	movl	$0x1, 0x38(%rdi)
000000010000da64	4c 8d 05 25 fd ff ff 	leaq	_do_loop_flush(%rip), %r8
000000010000da6b	4c 8d 4d d0 	leaq	-0x30(%rbp), %r9
000000010000da6f	31 ff 	xorl	%edi, %edi
000000010000da71	be 02 00 00 00 	movl	$0x2, %esi
000000010000da76	ba 01 00 00 00 	movl	$0x1, %edx
000000010000da7b	31 c9 	xorl	%ecx, %ecx
000000010000da7d	e8 c2 08 00 00 	callq	0x10000e344 ## symbol stub for: _CFRunLoopObserverCreate
000000010000da82	48 89 c3 	movq	%rax, %rbx
000000010000da85	e8 b4 08 00 00 	callq	0x10000e33e ## symbol stub for: _CFRunLoopGetMain
000000010000da8a	48 8b 0d a7 85 01 00 	movq	0x185a7(%rip), %rcx ## literal pool symbol address: _kCFRunLoopCommonModes
000000010000da91	48 8b 11 	movq	(%rcx), %rdx
000000010000da94	48 89 c7 	movq	%rax, %rdi
000000010000da97	48 89 de 	movq	%rbx, %rsi
000000010000da9a	e8 93 08 00 00 	callq	0x10000e332 ## symbol stub for: _CFRunLoopAddObserver
000000010000da9f	48 8b 05 6a 85 01 00 	movq	0x1856a(%rip), %rax ## literal pool symbol address: _NSApp
000000010000daa6	48 8b 38 	movq	(%rax), %rdi
000000010000daa9	48 8b 35 88 90 01 00 	movq	0x19088(%rip), %rsi ## Objc selector ref: run
000000010000dab0	ff 15 8a 85 01 00 	callq	*0x1858a(%rip) ## Objc message: +[NSRunningApplication run]
000000010000dab6	48 83 c4 28 	addq	$0x28, %rsp
000000010000daba	5b 	popq	%rbx
000000010000dabb	5d 	popq	%rbp
000000010000dabc	c3 	retq
000000010000dabd	0f 1f 00 	nopl	(%rax)
_mlx_pixel_put:
000000010000dac0	55 	pushq	%rbp
000000010000dac1	48 89 e5 	movq	%rsp, %rbp
000000010000dac4	41 57 	pushq	%r15
000000010000dac6	41 56 	pushq	%r14
000000010000dac8	41 55 	pushq	%r13
000000010000daca	41 54 	pushq	%r12
000000010000dacc	53 	pushq	%rbx
000000010000dacd	50 	pushq	%rax
000000010000dace	45 89 c7 	movl	%r8d, %r15d
000000010000dad1	41 89 ce 	movl	%ecx, %r14d
000000010000dad4	41 89 d4 	movl	%edx, %r12d
000000010000dad7	48 89 f3 	movq	%rsi, %rbx
000000010000dada	83 7b 14 00 	cmpl	$0x0, 0x14(%rbx)
000000010000dade	74 2d 	je	0x10000db0d
000000010000dae0	48 8b 3b 	movq	(%rbx), %rdi
000000010000dae3	48 8b 35 7e 90 01 00 	movq	0x1907e(%rip), %rsi ## Objc selector ref: selectGLContext
000000010000daea	4c 8b 2d 4f 85 01 00 	movq	0x1854f(%rip), %r13 ## Objc message: -[%rdi selectGLContext]
000000010000daf1	41 ff d5 	callq	*%r13
000000010000daf4	48 8b 3b 	movq	(%rbx), %rdi
000000010000daf7	48 8b 35 42 90 01 00 	movq	0x19042(%rip), %rsi ## Objc selector ref: pixelPutColor:X:Y:
000000010000dafe	44 89 fa 	movl	%r15d, %edx
000000010000db01	44 89 e1 	movl	%r12d, %ecx
000000010000db04	45 89 f0 	movl	%r14d, %r8d
000000010000db07	41 ff d5 	callq	*%r13
000000010000db0a	ff 43 10 	incl	0x10(%rbx)
000000010000db0d	48 83 c4 08 	addq	$0x8, %rsp
000000010000db11	5b 	popq	%rbx
000000010000db12	41 5c 	popq	%r12
000000010000db14	41 5d 	popq	%r13
000000010000db16	41 5e 	popq	%r14
000000010000db18	41 5f 	popq	%r15
000000010000db1a	5d 	popq	%rbp
000000010000db1b	c3 	retq
000000010000db1c	0f 1f 40 00 	nopl	(%rax)
_mlx_int_loop_once:
000000010000db20	55 	pushq	%rbp
000000010000db21	48 89 e5 	movq	%rsp, %rbp
000000010000db24	41 57 	pushq	%r15
000000010000db26	41 56 	pushq	%r14
000000010000db28	41 55 	pushq	%r13
000000010000db2a	41 54 	pushq	%r12
000000010000db2c	53 	pushq	%rbx
000000010000db2d	48 83 ec 18 	subq	$0x18, %rsp
000000010000db31	48 8b 3d 88 90 01 00 	movq	0x19088(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDate
000000010000db38	48 8b 35 09 90 01 00 	movq	0x19009(%rip), %rsi ## Objc selector ref: dateWithTimeIntervalSinceNow:
000000010000db3f	4c 8b 35 fa 84 01 00 	movq	0x184fa(%rip), %r14 ## Objc message: +[NSDate dateWithTimeIntervalSinceNow:]
000000010000db46	f2 0f 10 05 22 16 00 00 	movsd	0x1622(%rip), %xmm0
000000010000db4e	41 ff d6 	callq	*%r14
000000010000db51	4c 8b 3d b8 84 01 00 	movq	0x184b8(%rip), %r15 ## literal pool symbol address: _NSApp
000000010000db58	49 8b 3f 	movq	(%r15), %rdi
000000010000db5b	48 8b 0d b6 84 01 00 	movq	0x184b6(%rip), %rcx ## literal pool symbol address: _NSDefaultRunLoopMode
000000010000db62	4c 8b 01 	movq	(%rcx), %r8
000000010000db65	48 8b 35 e4 8f 01 00 	movq	0x18fe4(%rip), %rsi ## Objc selector ref: nextEventMatchingMask:untilDate:inMode:dequeue:
000000010000db6c	48 c7 c2 ff ff ff ff 	movq	$-0x1, %rdx
000000010000db73	41 b9 01 00 00 00 	movl	$0x1, %r9d
000000010000db79	48 89 45 d0 	movq	%rax, -0x30(%rbp)
000000010000db7d	48 89 c1 	movq	%rax, %rcx
000000010000db80	4c 89 45 c8 	movq	%r8, -0x38(%rbp)
000000010000db84	41 ff d6 	callq	*%r14
000000010000db87	48 85 c0 	testq	%rax, %rax
000000010000db8a	74 5c 	je	0x10000dbe8
000000010000db8c	4c 8b 25 c5 8f 01 00 	movq	0x18fc5(%rip), %r12 ## Objc selector ref: sendEvent:
000000010000db93	4c 8b 2d c6 8f 01 00 	movq	0x18fc6(%rip), %r13 ## Objc selector ref: updateWindows
000000010000db9a	48 8b 1d af 8f 01 00 	movq	0x18faf(%rip), %rbx ## Objc selector ref: nextEventMatchingMask:untilDate:inMode:dequeue:
000000010000dba1	66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
000000010000dbb0	49 8b 3f 	movq	(%r15), %rdi
000000010000dbb3	4c 89 e6 	movq	%r12, %rsi
000000010000dbb6	48 89 c2 	movq	%rax, %rdx
000000010000dbb9	41 ff d6 	callq	*%r14
000000010000dbbc	49 8b 3f 	movq	(%r15), %rdi
000000010000dbbf	4c 89 ee 	movq	%r13, %rsi
000000010000dbc2	41 ff d6 	callq	*%r14
000000010000dbc5	49 8b 3f 	movq	(%r15), %rdi
000000010000dbc8	48 c7 c2 ff ff ff ff 	movq	$-0x1, %rdx
000000010000dbcf	41 b9 01 00 00 00 	movl	$0x1, %r9d
000000010000dbd5	48 89 de 	movq	%rbx, %rsi
000000010000dbd8	48 8b 4d d0 	movq	-0x30(%rbp), %rcx
000000010000dbdc	4c 8b 45 c8 	movq	-0x38(%rbp), %r8
000000010000dbe0	41 ff d6 	callq	*%r14
000000010000dbe3	48 85 c0 	testq	%rax, %rax
000000010000dbe6	75 c8 	jne	0x10000dbb0
000000010000dbe8	48 8b 35 b1 8e 01 00 	movq	0x18eb1(%rip), %rsi ## Objc selector ref: release
000000010000dbef	48 8b 7d d0 	movq	-0x30(%rbp), %rdi
000000010000dbf3	48 83 c4 18 	addq	$0x18, %rsp
000000010000dbf7	5b 	popq	%rbx
000000010000dbf8	41 5c 	popq	%r12
000000010000dbfa	41 5d 	popq	%r13
000000010000dbfc	41 5e 	popq	%r14
000000010000dbfe	41 5f 	popq	%r15
000000010000dc00	5d 	popq	%rbp
000000010000dc01	ff 25 39 84 01 00 	jmpq	*0x18439(%rip) ## Objc message: -[%rdi release]
000000010000dc07	66 0f 1f 84 00 00 00 00 00 	nopw	(%rax,%rax)
_mlx_do_sync:
000000010000dc10	55 	pushq	%rbp
000000010000dc11	48 89 e5 	movq	%rsp, %rbp
000000010000dc14	41 57 	pushq	%r15
000000010000dc16	41 56 	pushq	%r14
000000010000dc18	41 55 	pushq	%r13
000000010000dc1a	41 54 	pushq	%r12
000000010000dc1c	53 	pushq	%rbx
000000010000dc1d	48 83 ec 48 	subq	$0x48, %rsp
000000010000dc21	48 89 7d 98 	movq	%rdi, -0x68(%rbp)
000000010000dc25	48 8b 77 08 	movq	0x8(%rdi), %rsi
000000010000dc29	48 85 f6 	testq	%rsi, %rsi
000000010000dc2c	0f 84 50 01 00 00 	je	0x10000dd82
000000010000dc32	48 8b 05 2f 8f 01 00 	movq	0x18f2f(%rip), %rax ## Objc selector ref: selectGLContext
000000010000dc39	48 89 45 a0 	movq	%rax, -0x60(%rbp)
000000010000dc3d	4c 8b 2d 7c 8e 01 00 	movq	0x18e7c(%rip), %r13 ## Objc selector ref: mlx_gl_draw
000000010000dc44	48 8b 05 fd 8e 01 00 	movq	0x18efd(%rip), %rax ## Objc selector ref: dateWithTimeIntervalSinceNow:
000000010000dc4b	48 89 45 b0 	movq	%rax, -0x50(%rbp)
000000010000dc4f	48 8b 05 c2 83 01 00 	movq	0x183c2(%rip), %rax ## literal pool symbol address: _NSDefaultRunLoopMode
000000010000dc56	48 8b 00 	movq	(%rax), %rax
000000010000dc59	4c 8b 35 f0 8e 01 00 	movq	0x18ef0(%rip), %r14 ## Objc selector ref: nextEventMatchingMask:untilDate:inMode:dequeue:
000000010000dc60	48 8b 15 39 8e 01 00 	movq	0x18e39(%rip), %rdx ## Objc selector ref: release
000000010000dc67	48 89 55 b8 	movq	%rdx, -0x48(%rbp)
000000010000dc6b	4c 8b 3d ce 83 01 00 	movq	0x183ce(%rip), %r15 ## Objc message: -[%rdi release]
000000010000dc72	48 8b 1d 97 83 01 00 	movq	0x18397(%rip), %rbx ## literal pool symbol address: _NSApp
000000010000dc79	4c 89 6d a8 	movq	%r13, -0x58(%rbp)
000000010000dc7d	4c 89 75 c0 	movq	%r14, -0x40(%rbp)
000000010000dc81	48 89 45 c8 	movq	%rax, -0x38(%rbp)
000000010000dc85	66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
000000010000dc90	83 7e 14 00 	cmpl	$0x0, 0x14(%rsi)
000000010000dc94	0f 84 db 00 00 00 	je	0x10000dd75
000000010000dc9a	48 8b 3e 	movq	(%rsi), %rdi
000000010000dc9d	48 89 75 d0 	movq	%rsi, -0x30(%rbp)
000000010000dca1	48 8b 75 a0 	movq	-0x60(%rbp), %rsi
000000010000dca5	49 89 c4 	movq	%rax, %r12
000000010000dca8	41 ff d7 	callq	*%r15
000000010000dcab	48 8b 45 d0 	movq	-0x30(%rbp), %rax
000000010000dcaf	48 8b 38 	movq	(%rax), %rdi
000000010000dcb2	4c 89 ee 	movq	%r13, %rsi
000000010000dcb5	41 ff d7 	callq	*%r15
000000010000dcb8	e8 59 07 00 00 	callq	0x10000e416 ## symbol stub for: _glFlush
000000010000dcbd	48 8b 75 d0 	movq	-0x30(%rbp), %rsi
000000010000dcc1	4c 89 e0 	movq	%r12, %rax
000000010000dcc4	48 8b 7d 98 	movq	-0x68(%rbp), %rdi
000000010000dcc8	83 7f 38 00 	cmpl	$0x0, 0x38(%rdi)
000000010000dccc	0f 85 a3 00 00 00 	jne	0x10000dd75
000000010000dcd2	48 8b 3d e7 8e 01 00 	movq	0x18ee7(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDate
000000010000dcd9	48 8b 75 b0 	movq	-0x50(%rbp), %rsi
000000010000dcdd	f2 0f 10 05 8b 14 00 00 	movsd	0x148b(%rip), %xmm0
000000010000dce5	49 89 c5 	movq	%rax, %r13
000000010000dce8	4d 89 fc 	movq	%r15, %r12
000000010000dceb	41 ff d4 	callq	*%r12
000000010000dcee	48 8b 3b 	movq	(%rbx), %rdi
000000010000dcf1	48 c7 c2 ff ff ff ff 	movq	$-0x1, %rdx
000000010000dcf8	41 b9 01 00 00 00 	movl	$0x1, %r9d
000000010000dcfe	4c 89 f6 	movq	%r14, %rsi
000000010000dd01	49 89 c6 	movq	%rax, %r14
000000010000dd04	48 89 c1 	movq	%rax, %rcx
000000010000dd07	4d 89 e8 	movq	%r13, %r8
000000010000dd0a	41 ff d4 	callq	*%r12
000000010000dd0d	48 85 c0 	testq	%rax, %rax
000000010000dd10	74 46 	je	0x10000dd58
000000010000dd12	4c 8b 3d 3f 8e 01 00 	movq	0x18e3f(%rip), %r15 ## Objc selector ref: sendEvent:
000000010000dd19	4c 8b 2d 40 8e 01 00 	movq	0x18e40(%rip), %r13 ## Objc selector ref: updateWindows
000000010000dd20	48 8b 3b 	movq	(%rbx), %rdi
000000010000dd23	4c 89 fe 	movq	%r15, %rsi
000000010000dd26	48 89 c2 	movq	%rax, %rdx
000000010000dd29	41 ff d4 	callq	*%r12
000000010000dd2c	48 8b 3b 	movq	(%rbx), %rdi
000000010000dd2f	4c 89 ee 	movq	%r13, %rsi
000000010000dd32	41 ff d4 	callq	*%r12
000000010000dd35	48 8b 3b 	movq	(%rbx), %rdi
000000010000dd38	48 c7 c2 ff ff ff ff 	movq	$-0x1, %rdx
000000010000dd3f	41 b9 01 00 00 00 	movl	$0x1, %r9d
000000010000dd45	48 8b 75 c0 	movq	-0x40(%rbp), %rsi
000000010000dd49	4c 89 f1 	movq	%r14, %rcx
000000010000dd4c	4c 8b 45 c8 	movq	-0x38(%rbp), %r8
000000010000dd50	41 ff d4 	callq	*%r12
000000010000dd53	48 85 c0 	testq	%rax, %rax
000000010000dd56	75 c8 	jne	0x10000dd20
000000010000dd58	4c 89 f7 	movq	%r14, %rdi
000000010000dd5b	48 8b 75 b8 	movq	-0x48(%rbp), %rsi
000000010000dd5f	41 ff d4 	callq	*%r12
000000010000dd62	4c 8b 6d a8 	movq	-0x58(%rbp), %r13
000000010000dd66	48 8b 45 c8 	movq	-0x38(%rbp), %rax
000000010000dd6a	4c 8b 75 c0 	movq	-0x40(%rbp), %r14
000000010000dd6e	4d 89 e7 	movq	%r12, %r15
000000010000dd71	48 8b 75 d0 	movq	-0x30(%rbp), %rsi
000000010000dd75	48 8b 76 18 	movq	0x18(%rsi), %rsi
000000010000dd79	48 85 f6 	testq	%rsi, %rsi
000000010000dd7c	0f 85 0e ff ff ff 	jne	0x10000dc90
000000010000dd82	31 c0 	xorl	%eax, %eax
000000010000dd84	48 83 c4 48 	addq	$0x48, %rsp
000000010000dd88	5b 	popq	%rbx
000000010000dd89	41 5c 	popq	%r12
000000010000dd8b	41 5d 	popq	%r13
000000010000dd8d	41 5e 	popq	%r14
000000010000dd8f	41 5f 	popq	%r15
000000010000dd91	5d 	popq	%rbp
000000010000dd92	c3 	retq
000000010000dd93	66 66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_mlx_loop_hook:
000000010000dda0	55 	pushq	%rbp
000000010000dda1	48 89 e5 	movq	%rsp, %rbp
000000010000dda4	41 57 	pushq	%r15
000000010000dda6	41 56 	pushq	%r14
000000010000dda8	53 	pushq	%rbx
000000010000dda9	48 83 ec 28 	subq	$0x28, %rsp
000000010000ddad	49 89 d7 	movq	%rdx, %r15
000000010000ddb0	49 89 f6 	movq	%rsi, %r14
000000010000ddb3	48 89 fb 	movq	%rdi, %rbx
000000010000ddb6	48 c7 45 c0 00 00 00 00 	movq	$0x0, -0x40(%rbp)
000000010000ddbe	48 89 5d c8 	movq	%rbx, -0x38(%rbp)
000000010000ddc2	48 c7 45 e0 00 00 00 00 	movq	$0x0, -0x20(%rbp)
000000010000ddca	48 c7 45 d8 00 00 00 00 	movq	$0x0, -0x28(%rbp)
000000010000ddd2	48 c7 45 d0 00 00 00 00 	movq	$0x0, -0x30(%rbp)
000000010000ddda	48 83 7b 18 00 	cmpq	$0x0, 0x18(%rbx)
000000010000dddf	74 1a 	je	0x10000ddfb
000000010000dde1	48 8b 7b 28 	movq	0x28(%rbx), %rdi
000000010000dde5	e8 66 05 00 00 	callq	0x10000e350 ## symbol stub for: _CFRunLoopTimerInvalidate
000000010000ddea	48 8b 7b 28 	movq	0x28(%rbx), %rdi
000000010000ddee	48 8b 35 ab 8c 01 00 	movq	0x18cab(%rip), %rsi ## Objc selector ref: release
000000010000ddf5	ff 15 45 82 01 00 	callq	*0x18245(%rip) ## Objc message: +[NSDate release]
000000010000ddfb	4c 89 73 18 	movq	%r14, 0x18(%rbx)
000000010000ddff	4c 89 7b 20 	movq	%r15, 0x20(%rbx)
000000010000de03	4d 85 f6 	testq	%r14, %r14
000000010000de06	74 4a 	je	0x10000de52
000000010000de08	48 8b 05 21 82 01 00 	movq	0x18221(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
000000010000de0f	48 8b 38 	movq	(%rax), %rdi
000000010000de12	48 8d 0d 67 f9 ff ff 	leaq	_do_loop_hook2(%rip), %rcx
000000010000de19	f2 0f 10 0d 57 13 00 00 	movsd	0x1357(%rip), %xmm1
000000010000de21	4c 8d 45 c0 	leaq	-0x40(%rbp), %r8
000000010000de25	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000de28	31 f6 	xorl	%esi, %esi
000000010000de2a	31 d2 	xorl	%edx, %edx
000000010000de2c	e8 19 05 00 00 	callq	0x10000e34a ## symbol stub for: _CFRunLoopTimerCreate
000000010000de31	49 89 c6 	movq	%rax, %r14
000000010000de34	4c 89 73 28 	movq	%r14, 0x28(%rbx)
000000010000de38	e8 01 05 00 00 	callq	0x10000e33e ## symbol stub for: _CFRunLoopGetMain
000000010000de3d	48 8b 0d f4 81 01 00 	movq	0x181f4(%rip), %rcx ## literal pool symbol address: _kCFRunLoopCommonModes
000000010000de44	48 8b 11 	movq	(%rcx), %rdx
000000010000de47	48 89 c7 	movq	%rax, %rdi
000000010000de4a	4c 89 f6 	movq	%r14, %rsi
000000010000de4d	e8 e6 04 00 00 	callq	0x10000e338 ## symbol stub for: _CFRunLoopAddTimer
000000010000de52	31 c0 	xorl	%eax, %eax
000000010000de54	48 83 c4 28 	addq	$0x28, %rsp
000000010000de58	5b 	popq	%rbx
000000010000de59	41 5e 	popq	%r14
000000010000de5b	41 5f 	popq	%r15
000000010000de5d	5d 	popq	%rbp
000000010000de5e	c3 	retq
000000010000de5f	90 	nop
_mlx_new_image:
000000010000de60	55 	pushq	%rbp
000000010000de61	48 89 e5 	movq	%rsp, %rbp
000000010000de64	41 57 	pushq	%r15
000000010000de66	41 56 	pushq	%r14
000000010000de68	41 54 	pushq	%r12
000000010000de6a	53 	pushq	%rbx
000000010000de6b	41 89 d7 	movl	%edx, %r15d
000000010000de6e	41 89 f6 	movl	%esi, %r14d
000000010000de71	49 89 fc 	movq	%rdi, %r12
000000010000de74	bf 38 00 00 00 	movl	$0x38, %edi
000000010000de79	e8 0a 06 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000de7e	48 89 c3 	movq	%rax, %rbx
000000010000de81	48 85 db 	testq	%rbx, %rbx
000000010000de84	74 79 	je	0x10000deff
000000010000de86	49 8b 44 24 10 	movq	0x10(%r12), %rax
000000010000de8b	48 89 43 30 	movq	%rax, 0x30(%rbx)
000000010000de8f	49 89 5c 24 10 	movq	%rbx, 0x10(%r12)
000000010000de94	44 89 33 	movl	%r14d, (%rbx)
000000010000de97	44 89 7b 04 	movl	%r15d, 0x4(%rbx)
000000010000de9b	c7 43 10 00 00 00 00 	movl	$0x0, 0x10(%rbx)
000000010000dea2	c7 43 14 00 00 00 00 	movl	$0x0, 0x14(%rbx)
000000010000dea9	f3 41 0f 2a c6 	cvtsi2ssl	%r14d, %xmm0
000000010000deae	f3 0f 11 43 18 	movss	%xmm0, 0x18(%rbx)
000000010000deb3	c7 43 1c 00 00 00 00 	movl	$0x0, 0x1c(%rbx)
000000010000deba	f3 0f 11 43 20 	movss	%xmm0, 0x20(%rbx)
000000010000debf	45 0f af f7 	imull	%r15d, %r14d
000000010000dec3	41 f7 df 	negl	%r15d
000000010000dec6	0f 57 c0 	xorps	%xmm0, %xmm0
000000010000dec9	f3 41 0f 2a c7 	cvtsi2ssl	%r15d, %xmm0
000000010000dece	f3 0f 11 43 24 	movss	%xmm0, 0x24(%rbx)
000000010000ded3	c7 43 28 00 00 00 00 	movl	$0x0, 0x28(%rbx)
000000010000deda	f3 0f 11 43 2c 	movss	%xmm0, 0x2c(%rbx)
000000010000dedf	41 c1 e6 02 	shll	$0x2, %r14d
000000010000dee3	4d 63 f6 	movslq	%r14d, %r14
000000010000dee6	4c 89 f7 	movq	%r14, %rdi
000000010000dee9	e8 9a 05 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000deee	48 89 43 08 	movq	%rax, 0x8(%rbx)
000000010000def2	48 89 c7 	movq	%rax, %rdi
000000010000def5	4c 89 f6 	movq	%r14, %rsi
000000010000def8	e8 5f 04 00 00 	callq	0x10000e35c ## symbol stub for: ___bzero
000000010000defd	eb 02 	jmp	0x10000df01
000000010000deff	31 db 	xorl	%ebx, %ebx
000000010000df01	48 89 d8 	movq	%rbx, %rax
000000010000df04	5b 	popq	%rbx
000000010000df05	41 5c 	popq	%r12
000000010000df07	41 5e 	popq	%r14
000000010000df09	41 5f 	popq	%r15
000000010000df0b	5d 	popq	%rbp
000000010000df0c	c3 	retq
000000010000df0d	0f 1f 00 	nopl	(%rax)
_add_img_to_ctx:
000000010000df10	55 	pushq	%rbp
000000010000df11	48 89 e5 	movq	%rsp, %rbp
000000010000df14	41 57 	pushq	%r15
000000010000df16	41 56 	pushq	%r14
000000010000df18	41 54 	pushq	%r12
000000010000df1a	53 	pushq	%rbx
000000010000df1b	49 89 f7 	movq	%rsi, %r15
000000010000df1e	49 89 fe 	movq	%rdi, %r14
000000010000df21	4d 8b 67 08 	movq	0x8(%r15), %r12
000000010000df25	4d 85 e4 	testq	%r12, %r12
000000010000df28	74 19 	je	0x10000df43
000000010000df2a	4c 89 e3 	movq	%r12, %rbx
000000010000df2d	0f 1f 00 	nopl	(%rax)
000000010000df30	4c 39 73 08 	cmpq	%r14, 0x8(%rbx)
000000010000df34	0f 84 f5 00 00 00 	je	0x10000e02f
000000010000df3a	48 8b 5b 10 	movq	0x10(%rbx), %rbx
000000010000df3e	48 85 db 	testq	%rbx, %rbx
000000010000df41	75 ed 	jne	0x10000df30
000000010000df43	bf 18 00 00 00 	movl	$0x18, %edi
000000010000df48	e8 3b 05 00 00 	callq	0x10000e488 ## symbol stub for: _malloc
000000010000df4d	48 89 c3 	movq	%rax, %rbx
000000010000df50	4c 89 73 08 	movq	%r14, 0x8(%rbx)
000000010000df54	4c 89 63 10 	movq	%r12, 0x10(%rbx)
000000010000df58	49 89 5f 08 	movq	%rbx, 0x8(%r15)
000000010000df5c	bf 01 00 00 00 	movl	$0x1, %edi
000000010000df61	48 89 de 	movq	%rbx, %rsi
000000010000df64	e8 b9 04 00 00 	callq	0x10000e422 ## symbol stub for: _glGenTextures
000000010000df69	8b 33 	movl	(%rbx), %esi
000000010000df6b	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000df70	e8 35 04 00 00 	callq	0x10000e3aa ## symbol stub for: _glBindTexture
000000010000df75	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000df7a	be 01 28 00 00 	movl	$0x2801, %esi
000000010000df7f	ba 01 26 00 00 	movl	$0x2601, %edx
000000010000df84	e8 d5 04 00 00 	callq	0x10000e45e ## symbol stub for: _glTexParameteri
000000010000df89	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000df8e	be 00 28 00 00 	movl	$0x2800, %esi
000000010000df93	ba 01 26 00 00 	movl	$0x2601, %edx
000000010000df98	e8 c1 04 00 00 	callq	0x10000e45e ## symbol stub for: _glTexParameteri
000000010000df9d	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000dfa2	be 02 28 00 00 	movl	$0x2802, %esi
000000010000dfa7	ba 2f 81 00 00 	movl	$0x812f, %edx
000000010000dfac	e8 ad 04 00 00 	callq	0x10000e45e ## symbol stub for: _glTexParameteri
000000010000dfb1	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000dfb6	be 03 28 00 00 	movl	$0x2803, %esi
000000010000dfbb	ba 2f 81 00 00 	movl	$0x812f, %edx
000000010000dfc0	e8 99 04 00 00 	callq	0x10000e45e ## symbol stub for: _glTexParameteri
000000010000dfc5	49 8b 0e 	movq	(%r14), %rcx
000000010000dfc8	49 89 c8 	movq	%rcx, %r8
000000010000dfcb	49 c1 e8 20 	shrq	$0x20, %r8
000000010000dfcf	48 83 ec 08 	subq	$0x8, %rsp
000000010000dfd3	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000dfd8	31 f6 	xorl	%esi, %esi
000000010000dfda	ba 58 80 00 00 	movl	$0x8058, %edx
000000010000dfdf	45 31 c9 	xorl	%r9d, %r9d
000000010000dfe2	41 ff 76 08 	pushq	0x8(%r14)
000000010000dfe6	68 01 14 00 00 	pushq	$0x1401
000000010000dfeb	68 e1 80 00 00 	pushq	$0x80e1
000000010000dff0	e8 63 04 00 00 	callq	0x10000e458 ## symbol stub for: _glTexImage2D
000000010000dff5	48 83 c4 20 	addq	$0x20, %rsp
000000010000dff9	48 8d 73 04 	leaq	0x4(%rbx), %rsi
000000010000dffd	bf 01 00 00 00 	movl	$0x1, %edi
000000010000e002	e8 15 04 00 00 	callq	0x10000e41c ## symbol stub for: _glGenBuffers
000000010000e007	8b 73 04 	movl	0x4(%rbx), %esi
000000010000e00a	bf 92 88 00 00 	movl	$0x8892, %edi
000000010000e00f	e8 90 03 00 00 	callq	0x10000e3a4 ## symbol stub for: _glBindBuffer
000000010000e014	49 83 c6 10 	addq	$0x10, %r14
000000010000e018	bf 92 88 00 00 	movl	$0x8892, %edi
000000010000e01d	be 20 00 00 00 	movl	$0x20, %esi
000000010000e022	b9 e8 88 00 00 	movl	$0x88e8, %ecx
000000010000e027	4c 89 f2 	movq	%r14, %rdx
000000010000e02a	e8 8d 03 00 00 	callq	0x10000e3bc ## symbol stub for: _glBufferData
000000010000e02f	48 89 d8 	movq	%rbx, %rax
000000010000e032	5b 	popq	%rbx
000000010000e033	41 5c 	popq	%r12
000000010000e035	41 5e 	popq	%r14
000000010000e037	41 5f 	popq	%r15
000000010000e039	5d 	popq	%rbp
000000010000e03a	c3 	retq
000000010000e03b	0f 1f 44 00 00 	nopl	(%rax,%rax)
_mlx_put_image_to_window:
000000010000e040	55 	pushq	%rbp
000000010000e041	48 89 e5 	movq	%rsp, %rbp
000000010000e044	41 57 	pushq	%r15
000000010000e046	41 56 	pushq	%r14
000000010000e048	41 55 	pushq	%r13
000000010000e04a	41 54 	pushq	%r12
000000010000e04c	53 	pushq	%rbx
000000010000e04d	50 	pushq	%rax
000000010000e04e	45 89 c6 	movl	%r8d, %r14d
000000010000e051	41 89 cf 	movl	%ecx, %r15d
000000010000e054	49 89 d4 	movq	%rdx, %r12
000000010000e057	48 89 f3 	movq	%rsi, %rbx
000000010000e05a	83 7b 14 00 	cmpl	$0x0, 0x14(%rbx)
000000010000e05e	0f 84 81 00 00 00 	je	0x10000e0e5
000000010000e064	48 8b 3b 	movq	(%rbx), %rdi
000000010000e067	48 8b 35 fa 8a 01 00 	movq	0x18afa(%rip), %rsi ## Objc selector ref: selectGLContext
000000010000e06e	ff 15 cc 7f 01 00 	callq	*0x17fcc(%rip) ## Objc message: -[%rdi selectGLContext]
000000010000e074	4c 89 e7 	movq	%r12, %rdi
000000010000e077	48 89 de 	movq	%rbx, %rsi
000000010000e07a	e8 91 fe ff ff 	callq	_add_img_to_ctx
000000010000e07f	49 89 c5 	movq	%rax, %r13
000000010000e082	41 8b 75 00 	movl	(%r13), %esi
000000010000e086	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000e08b	e8 1a 03 00 00 	callq	0x10000e3aa ## symbol stub for: _glBindTexture
000000010000e090	49 8b 0c 24 	movq	(%r12), %rcx
000000010000e094	49 89 c8 	movq	%rcx, %r8
000000010000e097	49 c1 e8 20 	shrq	$0x20, %r8
000000010000e09b	48 83 ec 08 	subq	$0x8, %rsp
000000010000e09f	bf e1 0d 00 00 	movl	$0xde1, %edi
000000010000e0a4	31 f6 	xorl	%esi, %esi
000000010000e0a6	ba 58 80 00 00 	movl	$0x8058, %edx
000000010000e0ab	45 31 c9 	xorl	%r9d, %r9d
000000010000e0ae	41 ff 74 24 08 	pushq	0x8(%r12)
000000010000e0b3	68 01 14 00 00 	pushq	$0x1401
000000010000e0b8	68 e1 80 00 00 	pushq	$0x80e1
000000010000e0bd	e8 96 03 00 00 	callq	0x10000e458 ## symbol stub for: _glTexImage2D
000000010000e0c2	48 83 c4 20 	addq	$0x20, %rsp
000000010000e0c6	48 8b 3b 	movq	(%rbx), %rdi
000000010000e0c9	48 8b 35 a0 8a 01 00 	movq	0x18aa0(%rip), %rsi ## Objc selector ref: mlx_gl_draw_img:andCtx:andX:andY:
000000010000e0d0	4c 89 e2 	movq	%r12, %rdx
000000010000e0d3	4c 89 e9 	movq	%r13, %rcx
000000010000e0d6	45 89 f8 	movl	%r15d, %r8d
000000010000e0d9	45 89 f1 	movl	%r14d, %r9d
000000010000e0dc	ff 15 5e 7f 01 00 	callq	*0x17f5e(%rip) ## Objc message: -[%rdi mlx_gl_draw_img:andCtx:andX:andY:]
000000010000e0e2	ff 43 10 	incl	0x10(%rbx)
000000010000e0e5	48 83 c4 08 	addq	$0x8, %rsp
000000010000e0e9	5b 	popq	%rbx
000000010000e0ea	41 5c 	popq	%r12
000000010000e0ec	41 5d 	popq	%r13
000000010000e0ee	41 5e 	popq	%r14
000000010000e0f0	41 5f 	popq	%r15
000000010000e0f2	5d 	popq	%rbp
000000010000e0f3	c3 	retq
000000010000e0f4	66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_mlx_get_data_addr:
000000010000e100	55 	pushq	%rbp
000000010000e101	48 89 e5 	movq	%rsp, %rbp
000000010000e104	c7 06 20 00 00 00 	movl	$0x20, (%rsi)
000000010000e10a	8b 07 	movl	(%rdi), %eax
000000010000e10c	c1 e0 02 	shll	$0x2, %eax
000000010000e10f	89 02 	movl	%eax, (%rdx)
000000010000e111	c7 01 00 00 00 00 	movl	$0x0, (%rcx)
000000010000e117	48 8b 47 08 	movq	0x8(%rdi), %rax
000000010000e11b	5d 	popq	%rbp
000000010000e11c	c3 	retq
000000010000e11d	0f 1f 00 	nopl	(%rax)
_mlx_get_color_value:
000000010000e120	55 	pushq	%rbp
000000010000e121	48 89 e5 	movq	%rsp, %rbp
000000010000e124	89 f0 	movl	%esi, %eax
000000010000e126	5d 	popq	%rbp
000000010000e127	c3 	retq
000000010000e128	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
_mlx_string_put:
000000010000e130	55 	pushq	%rbp
000000010000e131	48 89 e5 	movq	%rsp, %rbp
000000010000e134	41 57 	pushq	%r15
000000010000e136	41 56 	pushq	%r14
000000010000e138	41 55 	pushq	%r13
000000010000e13a	41 54 	pushq	%r12
000000010000e13c	53 	pushq	%rbx
000000010000e13d	48 83 ec 18 	subq	$0x18, %rsp
000000010000e141	4c 89 cb 	movq	%r9, %rbx
000000010000e144	4c 89 45 c0 	movq	%r8, -0x40(%rbp)
000000010000e148	89 4d d4 	movl	%ecx, -0x2c(%rbp)
000000010000e14b	41 89 d5 	movl	%edx, %r13d
000000010000e14e	49 89 f4 	movq	%rsi, %r12
000000010000e151	49 89 fe 	movq	%rdi, %r14
000000010000e154	41 83 7c 24 14 00 	cmpl	$0x0, 0x14(%r12)
000000010000e15a	0f 84 95 00 00 00 	je	0x10000e1f5
000000010000e160	49 8b 3c 24 	movq	(%r12), %rdi
000000010000e164	48 8b 35 fd 89 01 00 	movq	0x189fd(%rip), %rsi ## Objc selector ref: selectGLContext
000000010000e16b	ff 15 cf 7e 01 00 	callq	*0x17ecf(%rip) ## Objc message: -[%rdi selectGLContext]
000000010000e171	4c 89 75 c8 	movq	%r14, -0x38(%rbp)
000000010000e175	49 8b 7e 30 	movq	0x30(%r14), %rdi
000000010000e179	4c 89 e6 	movq	%r12, %rsi
000000010000e17c	e8 8f fd ff ff 	callq	_add_img_to_ctx
000000010000e181	49 89 c7 	movq	%rax, %r15
000000010000e184	8a 03 	movb	(%rbx), %al
000000010000e186	84 c0 	testb	%al, %al
000000010000e188	74 66 	je	0x10000e1f0
000000010000e18a	4c 8b 35 e7 89 01 00 	movq	0x189e7(%rip), %r14 ## Objc selector ref: mlx_gl_draw_font:andCtx:andX:andY:andColor:glyphX:glyphY:
000000010000e191	48 ff c3 	incq	%rbx
000000010000e194	66 66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
000000010000e1a0	3c 20 	cmpb	$0x20, %al
000000010000e1a2	72 42 	jb	0x10000e1e6
000000010000e1a4	84 c0 	testb	%al, %al
000000010000e1a6	78 3e 	js	0x10000e1e6
000000010000e1a8	0f b6 c0 	movzbl	%al, %eax
000000010000e1ab	8d 04 40 	leal	(%rax,%rax,2), %eax
000000010000e1ae	8d 04 85 80 fe ff ff 	leal	-0x180(,%rax,4), %eax
000000010000e1b5	49 8b 3c 24 	movq	(%r12), %rdi
000000010000e1b9	48 8b 4d c8 	movq	-0x38(%rbp), %rcx
000000010000e1bd	48 8b 51 30 	movq	0x30(%rcx), %rdx
000000010000e1c1	48 83 ec 08 	subq	$0x8, %rsp
000000010000e1c5	4c 89 f6 	movq	%r14, %rsi
000000010000e1c8	4c 89 f9 	movq	%r15, %rcx
000000010000e1cb	45 89 e8 	movl	%r13d, %r8d
000000010000e1ce	44 8b 4d d4 	movl	-0x2c(%rbp), %r9d
000000010000e1d2	6a 00 	pushq	$0x0
000000010000e1d4	50 	pushq	%rax
000000010000e1d5	ff 75 c0 	pushq	-0x40(%rbp)
000000010000e1d8	ff 15 62 7e 01 00 	callq	*0x17e62(%rip) ## Objc message: -[%rdi mlx_gl_draw_font:andCtx:andX:andY:andColor:glyphX:glyphY:]
000000010000e1de	48 83 c4 20 	addq	$0x20, %rsp
000000010000e1e2	41 83 c5 0a 	addl	$0xa, %r13d
000000010000e1e6	0f b6 03 	movzbl	(%rbx), %eax
000000010000e1e9	48 ff c3 	incq	%rbx
000000010000e1ec	84 c0 	testb	%al, %al
000000010000e1ee	75 b0 	jne	0x10000e1a0
000000010000e1f0	41 ff 44 24 10 	incl	0x10(%r12)
000000010000e1f5	31 c0 	xorl	%eax, %eax
000000010000e1f7	48 83 c4 18 	addq	$0x18, %rsp
000000010000e1fb	5b 	popq	%rbx
000000010000e1fc	41 5c 	popq	%r12
000000010000e1fe	41 5d 	popq	%r13
000000010000e200	41 5e 	popq	%r14
000000010000e202	41 5f 	popq	%r15
000000010000e204	5d 	popq	%rbp
000000010000e205	c3 	retq
000000010000e206	66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
_mlx_destroy_image:
000000010000e210	55 	pushq	%rbp
000000010000e211	48 89 e5 	movq	%rsp, %rbp
000000010000e214	41 57 	pushq	%r15
000000010000e216	41 56 	pushq	%r14
000000010000e218	41 55 	pushq	%r13
000000010000e21a	41 54 	pushq	%r12
000000010000e21c	53 	pushq	%rbx
000000010000e21d	48 83 ec 58 	subq	$0x58, %rsp
000000010000e221	49 89 f7 	movq	%rsi, %r15
000000010000e224	48 8b 47 10 	movq	0x10(%rdi), %rax
000000010000e228	48 89 45 b8 	movq	%rax, -0x48(%rbp)
000000010000e22c	48 85 c0 	testq	%rax, %rax
000000010000e22f	74 2d 	je	0x10000e25e
000000010000e231	48 8d 4d 88 	leaq	-0x78(%rbp), %rcx
000000010000e235	66 66 2e 0f 1f 84 00 00 00 00 00 	nopw	%cs:(%rax,%rax)
000000010000e240	4c 39 f8 	cmpq	%r15, %rax
000000010000e243	75 08 	jne	0x10000e24d
000000010000e245	49 8b 47 30 	movq	0x30(%r15), %rax
000000010000e249	48 89 41 30 	movq	%rax, 0x30(%rcx)
000000010000e24d	48 85 c0 	testq	%rax, %rax
000000010000e250	74 0c 	je	0x10000e25e
000000010000e252	48 89 c1 	movq	%rax, %rcx
000000010000e255	48 8b 40 30 	movq	0x30(%rax), %rax
000000010000e259	48 85 c0 	testq	%rax, %rax
000000010000e25c	75 e2 	jne	0x10000e240
000000010000e25e	48 8b 45 b8 	movq	-0x48(%rbp), %rax
000000010000e262	48 89 47 10 	movq	%rax, 0x10(%rdi)
000000010000e266	48 8b 5f 08 	movq	0x8(%rdi), %rbx
000000010000e26a	48 85 db 	testq	%rbx, %rbx
000000010000e26d	0f 84 9c 00 00 00 	je	0x10000e30f
000000010000e273	4c 8b 2d c6 7d 01 00 	movq	0x17dc6(%rip), %r13 ## Objc message: -[%rdi mlx_gl_draw_font:andCtx:andX:andY:andColor:glyphX:glyphY:]
000000010000e27a	66 0f 1f 44 00 00 	nopw	(%rax,%rax)
000000010000e280	48 8b 43 08 	movq	0x8(%rbx), %rax
000000010000e284	48 89 45 d0 	movq	%rax, -0x30(%rbp)
000000010000e288	48 85 c0 	testq	%rax, %rax
000000010000e28b	74 6d 	je	0x10000e2fa
000000010000e28d	4c 8b 35 d4 88 01 00 	movq	0x188d4(%rip), %r14 ## Objc selector ref: selectGLContext
000000010000e294	4c 8d 65 c0 	leaq	-0x40(%rbp), %r12
000000010000e298	0f 1f 84 00 00 00 00 00 	nopl	(%rax,%rax)
000000010000e2a0	4c 39 78 08 	cmpq	%r15, 0x8(%rax)
000000010000e2a4	75 43 	jne	0x10000e2e9
000000010000e2a6	48 8b 3b 	movq	(%rbx), %rdi
000000010000e2a9	4c 89 f6 	movq	%r14, %rsi
000000010000e2ac	41 ff d5 	callq	*%r13
000000010000e2af	49 8b 74 24 10 	movq	0x10(%r12), %rsi
000000010000e2b4	48 83 c6 04 	addq	$0x4, %rsi
000000010000e2b8	bf 01 00 00 00 	movl	$0x1, %edi
000000010000e2bd	e8 1e 01 00 00 	callq	0x10000e3e0 ## symbol stub for: _glDeleteBuffers
000000010000e2c2	49 8b 74 24 10 	movq	0x10(%r12), %rsi
000000010000e2c7	bf 01 00 00 00 	movl	$0x1, %edi
000000010000e2cc	e8 21 01 00 00 	callq	0x10000e3f2 ## symbol stub for: _glDeleteTextures
000000010000e2d1	49 8b 7c 24 10 	movq	0x10(%r12), %rdi
000000010000e2d6	48 8b 47 10 	movq	0x10(%rdi), %rax
000000010000e2da	49 89 44 24 10 	movq	%rax, 0x10(%r12)
000000010000e2df	e8 a2 00 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000e2e4	49 8b 44 24 10 	movq	0x10(%r12), %rax
000000010000e2e9	48 85 c0 	testq	%rax, %rax
000000010000e2ec	74 0c 	je	0x10000e2fa
000000010000e2ee	49 89 c4 	movq	%rax, %r12
000000010000e2f1	48 8b 40 10 	movq	0x10(%rax), %rax
000000010000e2f5	48 85 c0 	testq	%rax, %rax
000000010000e2f8	75 a6 	jne	0x10000e2a0
000000010000e2fa	48 8b 45 d0 	movq	-0x30(%rbp), %rax
000000010000e2fe	48 89 43 08 	movq	%rax, 0x8(%rbx)
000000010000e302	48 8b 5b 18 	movq	0x18(%rbx), %rbx
000000010000e306	48 85 db 	testq	%rbx, %rbx
000000010000e309	0f 85 71 ff ff ff 	jne	0x10000e280
000000010000e30f	49 8b 7f 08 	movq	0x8(%r15), %rdi
000000010000e313	e8 6e 00 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000e318	4c 89 ff 	movq	%r15, %rdi
000000010000e31b	e8 66 00 00 00 	callq	0x10000e386 ## symbol stub for: _free
000000010000e320	31 c0 	xorl	%eax, %eax
000000010000e322	48 83 c4 58 	addq	$0x58, %rsp
000000010000e326	5b 	popq	%rbx
000000010000e327	41 5c 	popq	%r12
000000010000e329	41 5d 	popq	%r13
000000010000e32b	41 5e 	popq	%r14
000000010000e32d	41 5f 	popq	%r15
000000010000e32f	5d 	popq	%rbp
000000010000e330	c3 	retq
